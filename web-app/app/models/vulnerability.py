"""Vulnerability model for processed scan results"""

from sqlalchemy import Column, Integer, String, Text, Float, DateTime, JSON, ForeignKey
from sqlalchemy.sql import func
from sqlalchemy.orm import relationship
from .base import Base


class Vulnerability(Base):
    __tablename__ = "vulnerabilities"

    id = Column(Integer, primary_key=True, index=True)
    scan_id = Column(Integer, ForeignKey("scans.id"), nullable=False)

    # CVE information
    cve_id = Column(String, index=True, nullable=False)
    source = Column(String)  # OVAL, GOST, etc.

    # Package information
    affected_package = Column(String, nullable=False)
    installed_version = Column(String)
    fixed_version = Column(String)

    # Severity and scoring
    severity = Column(String)  # CRITICAL, HIGH, MEDIUM, LOW
    cvss_score = Column(Float)
    priority = Column(String)  # For GOST data

    # Descriptions
    title = Column(Text)
    description = Column(Text)
    summary = Column(Text)

    # Dates
    published_date = Column(DateTime(timezone=True))
    public_date = Column(DateTime(timezone=True))

    # Additional metadata
    definition_id = Column(String)  # OVAL definition ID
    references = Column(JSON)  # URLs, advisories, etc.

    # Timestamps
    created_at = Column(DateTime(timezone=True), server_default=func.now())

    # Relationships
    scan = relationship("Scan", back_populates="vulnerabilities")

    def __repr__(self):
        return f"<Vulnerability(cve_id='{self.cve_id}', package='{self.affected_package}', severity='{self.severity}')>"
