{
  "total_vulnerabilities": 208,
  "packages_affected": 14,
  "vulnerability_breakdown": {
    "CRITICAL": 19,
    "HIGH": 79,
    "MEDIUM": 89,
    "LOW": 18,
    "unknown": 3
  },
  "high_risk_packages": [
    {
      "package": "openssl",
      "total_vulns": 60,
      "critical": 5,
      "high": 21,
      "medium": 32,
      "low": 2,
      "risk_score": 472
    },
    {
      "package": "curl",
      "total_vulns": 62,
      "critical": 5,
      "high": 20,
      "medium": 26,
      "low": 11,
      "risk_score": 441
    },
    {
      "package": "git",
      "total_vulns": 22,
      "critical": 4,
      "high": 8,
      "medium": 5,
      "low": 3,
      "risk_score": 188
    },
    {
      "package": "sudo",
      "total_vulns": 13,
      "critical": 0,
      "high": 9,
      "medium": 3,
      "low": 1,
      "risk_score": 106
    },
    {
      "package": "systemd",
      "total_vulns": 14,
      "critical": 1,
      "high": 4,
      "medium": 9,
      "low": 0,
      "risk_score": 105
    },
    {
      "package": "perl",
      "total_vulns": 8,
      "critical": 1,
      "high": 7,
      "medium": 0,
      "low": 0,
      "risk_score": 90
    },
    {
      "package": "python-urllib3",
      "total_vulns": 11,
      "critical": 1,
      "high": 3,
      "medium": 7,
      "low": 0,
      "risk_score": 85
    },
    {
      "package": "wget",
      "total_vulns": 4,
      "critical": 2,
      "high": 1,
      "medium": 1,
      "low": 0,
      "risk_score": 55
    },
    {
      "package": "tar",
      "total_vulns": 5,
      "critical": 0,
      "high": 1,
      "medium": 3,
      "low": 1,
      "risk_score": 26
    },
    {
      "package": "libgcrypt20",
      "total_vulns": 4,
      "critical": 0,
      "high": 1,
      "medium": 3,
      "low": 0,
      "risk_score": 25
    },
    {
      "package": "bash",
      "total_vulns": 1,
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "risk_score": 10
    },
    {
      "package": "gzip",
      "total_vulns": 1,
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "risk_score": 10
    },
    {
      "package": "libhttp-daemon-perl",
      "total_vulns": 1,
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "risk_score": 10
    },
    {
      "package": "xz-utils",
      "total_vulns": 2,
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "risk_score": 10
    }
  ],
  "vulnerabilities": [
    {
      "cve_id": "CVE-2022-3715",
      "definition_id": "oval:org.debian:def:312909064664138859810325809400601796743",
      "title": "CVE-2022-3715 bash",
      "description": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
      "affected_package": "bash",
      "installed_version": "4.3-14ubuntu1.4",
      "fixed_version": "5.2-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
      "published_date": "2023-01-05 15:15:10.41+00:00"
    },
    {
      "cve_id": "CVE-2023-46219",
      "definition_id": "oval:org.debian:def:93719674000813888715083705782908195639",
      "title": "CVE-2023-46219 curl",
      "description": "When saving HSTS data to an excessively long file name, curl could end up removing all contents, making subsequent requests using that file unaware of the HSTS status they should otherwise use.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u5",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
      "published_date": "2023-12-12 02:15:06.99+00:00"
    },
    {
      "cve_id": "CVE-2022-27774",
      "definition_id": "oval:org.debian:def:91124532873527644098236606659730796648",
      "title": "CVE-2022-27774 curl",
      "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.0-1",
      "cvss_score": 5.7,
      "severity": "MEDIUM",
      "summary": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
      "published_date": "2022-06-02 14:15:43.317+00:00"
    },
    {
      "cve_id": "CVE-2023-27535",
      "definition_id": "oval:org.debian:def:87892379254267725727989608056232212961",
      "title": "CVE-2023-27535 curl",
      "description": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-7",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
      "published_date": "2023-03-30 20:15:07.483+00:00"
    },
    {
      "cve_id": "CVE-2021-22898",
      "definition_id": "oval:org.debian:def:81993248178014815732988874561997054654",
      "title": "CVE-2021-22898 curl",
      "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 3.1,
      "severity": "LOW",
      "summary": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
      "published_date": "2021-06-11 16:15:11.043+00:00"
    },
    {
      "cve_id": "CVE-2022-27781",
      "definition_id": "oval:org.debian:def:80509595158270020165428078937909363473",
      "title": "CVE-2022-27781 curl",
      "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.1-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
      "published_date": "2022-06-02 14:15:44.467+00:00"
    },
    {
      "cve_id": "CVE-2024-2004",
      "definition_id": "oval:org.debian:def:72609353668179646378794512310941272138",
      "title": "CVE-2024-2004 curl",
      "description": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u6",
      "cvss_score": 3.5,
      "severity": "LOW",
      "summary": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "published_date": "2024-03-27 08:15:41.173+00:00"
    },
    {
      "cve_id": "CVE-2020-8177",
      "definition_id": "oval:org.debian:def:71330227342081213395645410774990944428",
      "title": "CVE-2020-8177 curl",
      "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.72.0-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
      "published_date": "2020-12-14 20:15:13.497+00:00"
    },
    {
      "cve_id": "CVE-2022-27782",
      "definition_id": "oval:org.debian:def:66412494252990775342911827309863462050",
      "title": "CVE-2022-27782 curl",
      "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.1-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
      "published_date": "2022-06-02 14:15:44.663+00:00"
    },
    {
      "cve_id": "CVE-2021-22947",
      "definition_id": "oval:org.debian:def:63486163559548244596515235555498499253",
      "title": "CVE-2021-22947 curl",
      "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
      "published_date": "2021-09-29 20:15:08.253+00:00"
    },
    {
      "cve_id": "CVE-2023-27533",
      "definition_id": "oval:org.debian:def:57407193923908124059665130728621129845",
      "title": "CVE-2023-27533 curl",
      "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-7",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
      "published_date": "2023-03-30 20:15:07.373+00:00"
    },
    {
      "cve_id": "CVE-2022-35260",
      "definition_id": "oval:org.debian:def:56226379693935386377773230203532620645",
      "title": "CVE-2022-35260 curl",
      "description": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.86.0-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
      "published_date": "2022-12-05 22:15:10.743+00:00"
    },
    {
      "cve_id": "CVE-2022-32206",
      "definition_id": "oval:org.debian:def:45053661512576139066752592257805672679",
      "title": "CVE-2022-32206 curl",
      "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.84.0-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
      "published_date": "2022-07-07 13:15:08.34+00:00"
    },
    {
      "cve_id": "CVE-2022-27779",
      "definition_id": "oval:org.debian:def:43960282795466420285216093249283703039",
      "title": "CVE-2022-27779 curl",
      "description": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.1-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
      "published_date": "2022-06-02 14:15:44.093+00:00"
    },
    {
      "cve_id": "CVE-2022-43552",
      "definition_id": "oval:org.debian:def:3993302799227440852057459257952147152",
      "title": "CVE-2022-43552 curl",
      "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.86.0-3",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
      "published_date": "2023-02-09 20:15:10.95+00:00"
    },
    {
      "cve_id": "CVE-2021-22890",
      "definition_id": "oval:org.debian:def:37900828260315093854873493899502086494",
      "title": "CVE-2021-22890 curl",
      "description": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.74.0-1.2",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
      "published_date": "2021-04-01 18:15:12.917+00:00"
    },
    {
      "cve_id": "CVE-2022-32221",
      "definition_id": "oval:org.debian:def:339133428554175781969293325891038963335",
      "title": "CVE-2022-32221 curl",
      "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.86.0-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
      "published_date": "2022-12-05 22:15:10.343+00:00"
    },
    {
      "cve_id": "CVE-2023-28319",
      "definition_id": "oval:org.debian:def:33765846702802311266226612451112620605",
      "title": "CVE-2023-28319 curl",
      "description": "A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
      "published_date": "2023-05-26 21:15:10.02+00:00"
    },
    {
      "cve_id": "CVE-2022-35252",
      "definition_id": "oval:org.debian:def:329223223021266709190177144396925607716",
      "title": "CVE-2022-35252 curl",
      "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.85.0-1",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
      "published_date": "2022-09-23 14:15:12.323+00:00"
    },
    {
      "cve_id": "CVE-2023-27538",
      "definition_id": "oval:org.debian:def:328877671545433380487663267355608896586",
      "title": "CVE-2023-27538 curl",
      "description": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-7",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
      "published_date": "2023-03-30 20:15:07.677+00:00"
    },
    {
      "cve_id": "CVE-2021-22945",
      "definition_id": "oval:org.debian:def:328661658138806376317960951375276626942",
      "title": "CVE-2021-22945 curl",
      "description": "When sending data to an MQTT server, libcurl <= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "When sending data to an MQTT server, libcurl <= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
      "published_date": "2021-09-23 13:15:08.69+00:00"
    },
    {
      "cve_id": "CVE-2023-23914",
      "definition_id": "oval:org.debian:def:320959307868345512981041711262211372452",
      "title": "CVE-2023-23914 curl",
      "description": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-1",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
      "published_date": "2023-02-23 20:15:13.637+00:00"
    },
    {
      "cve_id": "CVE-2020-19909",
      "definition_id": "oval:org.debian:def:302236115282218078330318341140722132462",
      "title": "CVE-2020-19909 curl",
      "description": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.66.0-1",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
      "published_date": "2023-08-22 19:16:06.48+00:00"
    },
    {
      "cve_id": "CVE-2023-46218",
      "definition_id": "oval:org.debian:def:301961605659186800106597133910744180115",
      "title": "CVE-2023-46218 curl",
      "description": "security update",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u5",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
      "published_date": "2023-12-07 01:15:07.16+00:00"
    },
    {
      "cve_id": "CVE-2024-9681",
      "definition_id": "oval:org.debian:def:297793998204522965101571696471075859466",
      "title": "CVE-2024-9681 curl",
      "description": "When curl is asked to use HSTS, the expiry time for a subdomain might overwrite a parent domain's cache entry, making it end sooner or later than otherwise intended.  This affects curl using applications that enable HSTS and use URLs with the insecure `HTTP://` scheme and perform transfers with hosts like `x.example.com` as well as `example.com` where the first host is a subdomain of the second host.  (The HSTS cache either needs to have been populated manually or there needs to have been previous HTTPS accesses done as the cache needs to have entries for the domains involved to trigger this problem.)  When `x.example.com` responds with `Strict-Transport-Security:` headers, this bug can make the subdomain's expiry timeout *bleed over* and get set for the parent domain `example.com` in curl's HSTS cache.  The result of a triggered bug is that HTTP accesses to `example.com` get converted to HTTPS for a different period of time than what was asked for by the origin server. If `example.com` for example stops supporting HTTPS at its expiry time, curl might then fail to access `http://example.com` until the (wrongly set) timeout expires. This bug can also expire the parent's entry *earlier*, thus making curl inadvertently switch back to insecure HTTP earlier than otherwise intended.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u9",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "When curl is asked to use HSTS, the expiry time for a subdomain might\noverwrite a parent domain's cache entry, making it end sooner or later than\notherwise intended.\n\nThis affects curl using applications that enable HSTS and use URLs with the\ninsecure `HTTP://` scheme and perform transfers with hosts like\n`x.example.com` as well as `example.com` where the first host is a subdomain\nof the second host.\n\n(The HSTS cache either needs to have been populated manually or there needs to\nhave been previous HTTPS accesses done as the cache needs to have entries for\nthe domains involved to trigger this problem.)\n\nWhen `x.example.com` responds with `Strict-Transport-Security:` headers, this\nbug can make the subdomain's expiry timeout *bleed over* and get set for the\nparent domain `example.com` in curl's HSTS cache.\n\nThe result of a triggered bug is that HTTP accesses to `example.com` get\nconverted to HTTPS for a different period of time than what was asked for by\nthe origin server. If `example.com` for example stops supporting HTTPS at its\nexpiry time, curl might then fail to access `http://example.com` until the\n(wrongly set) timeout expires. This bug can also expire the parent's entry\n*earlier*, thus making curl inadvertently switch back to insecure HTTP earlier\nthan otherwise intended.",
      "published_date": "2024-11-06 08:15:03.74+00:00"
    },
    {
      "cve_id": "CVE-2022-42916",
      "definition_id": "oval:org.debian:def:29544489052700233482462583836810768762",
      "title": "CVE-2022-42916 curl",
      "description": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.86.0-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
      "published_date": "2022-10-29 02:15:09.047+00:00"
    },
    {
      "cve_id": "CVE-2020-8286",
      "definition_id": "oval:org.debian:def:288623350243727842578181828810855362469",
      "title": "CVE-2020-8286 curl",
      "description": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.74.0-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
      "published_date": "2020-12-14 20:15:14.043+00:00"
    },
    {
      "cve_id": "CVE-2024-8096",
      "definition_id": "oval:org.debian:def:271718802160087963938190996349462648095",
      "title": "CVE-2024-8096 curl",
      "description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u8",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "published_date": "2024-09-11 10:15:02.883+00:00"
    },
    {
      "cve_id": "CVE-2023-38546",
      "definition_id": "oval:org.debian:def:270186767458018897944048610290368126650",
      "title": "CVE-2023-38546 curl",
      "description": "security update",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u4",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
      "published_date": "2023-10-18 04:15:11.137+00:00"
    },
    {
      "cve_id": "CVE-2023-38545",
      "definition_id": "oval:org.debian:def:266899364734450678939179309480060590282",
      "title": "CVE-2023-38545 curl",
      "description": "security update",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u4",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
      "published_date": "2023-10-18 04:15:11.077+00:00"
    },
    {
      "cve_id": "CVE-2022-27775",
      "definition_id": "oval:org.debian:def:264851467299340139075866716445718051108",
      "title": "CVE-2022-27775 curl",
      "description": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.0-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
      "published_date": "2022-06-02 14:15:43.51+00:00"
    },
    {
      "cve_id": "CVE-2024-7264",
      "definition_id": "oval:org.debian:def:253448269337386236591730765640886558715",
      "title": "CVE-2024-7264 curl",
      "description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given an syntactically incorrect field, the parser might end up using -1 for the length of the *time fraction*, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null terminated.  This flaw most likely leads to a crash, but can also lead to heap contents getting returned to the application when [CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u7",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "published_date": "2024-07-31 08:15:02.657+00:00"
    },
    {
      "cve_id": "CVE-2020-8284",
      "definition_id": "oval:org.debian:def:253008752620985260910470534762428637889",
      "title": "CVE-2020-8284 curl",
      "description": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.74.0-1",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
      "published_date": "2020-12-14 20:15:13.903+00:00"
    },
    {
      "cve_id": "CVE-2020-8285",
      "definition_id": "oval:org.debian:def:243968419627075408053387617371740070262",
      "title": "CVE-2020-8285 curl",
      "description": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.74.0-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
      "published_date": "2020-12-14 20:15:13.983+00:00"
    },
    {
      "cve_id": "CVE-2022-43551",
      "definition_id": "oval:org.debian:def:235272328197856390501588066735799731811",
      "title": "CVE-2022-43551 curl",
      "description": "A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.86.0-3",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "published_date": "2022-12-23 15:15:15.777+00:00"
    },
    {
      "cve_id": "CVE-2024-11053",
      "definition_id": "oval:org.debian:def:229785045466560173530915418468508139567",
      "title": "CVE-2024-11053 curl",
      "description": "When asked to both use a `.netrc` file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances.  This flaw only manifests itself if the netrc file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u10",
      "cvss_score": 3.4,
      "severity": "LOW",
      "summary": "When asked to both use a `.netrc` file for credentials and to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has an entry that matches\nthe redirect target hostname but the entry either omits just the password or\nomits both login and password.",
      "published_date": "2024-12-11 08:15:05.307+00:00"
    },
    {
      "cve_id": "CVE-2021-22923",
      "definition_id": "oval:org.debian:def:229079799453039503071828867979191812879",
      "title": "CVE-2021-22923 curl",
      "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "published_date": "2021-08-05 21:15:11.293+00:00"
    },
    {
      "cve_id": "CVE-2023-38039",
      "definition_id": "oval:org.debian:def:221188445906466814195045417858744334317",
      "title": "CVE-2023-38039 curl",
      "description": "When curl retrieves an HTTP response, it stores the incoming headers so that they can be accessed later via the libcurl headers API.  However, curl did not have a limit in how many or how large headers it would accept in a response, allowing a malicious server to stream an endless series of headers and eventually cause curl to run out of heap memory.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u3",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
      "published_date": "2023-09-15 04:15:10.127+00:00"
    },
    {
      "cve_id": "CVE-2023-27534",
      "definition_id": "oval:org.debian:def:219327925209060571359077447187042195721",
      "title": "CVE-2023-27534 curl",
      "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-7",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
      "published_date": "2023-03-30 20:15:07.427+00:00"
    },
    {
      "cve_id": "CVE-2021-22876",
      "definition_id": "oval:org.debian:def:206191036233258907501899211491953929485",
      "title": "CVE-2021-22876 curl",
      "description": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.74.0-1.2",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
      "published_date": "2021-04-01 18:15:12.823+00:00"
    },
    {
      "cve_id": "CVE-2021-22946",
      "definition_id": "oval:org.debian:def:206145221766665056714278221341955602954",
      "title": "CVE-2021-22946 curl",
      "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
      "published_date": "2021-09-29 20:15:08.187+00:00"
    },
    {
      "cve_id": "CVE-2022-32205",
      "definition_id": "oval:org.debian:def:20449485502154487873269846681443925611",
      "title": "CVE-2022-32205 curl",
      "description": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl < 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.84.0-1",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl < 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
      "published_date": "2022-07-07 13:15:08.277+00:00"
    },
    {
      "cve_id": "CVE-2022-30115",
      "definition_id": "oval:org.debian:def:203711376396946788514156029474006516371",
      "title": "CVE-2022-30115 curl",
      "description": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.1-1",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
      "published_date": "2022-06-02 14:15:51.507+00:00"
    },
    {
      "cve_id": "CVE-2023-28322",
      "definition_id": "oval:org.debian:def:197549740473185125202582966410518654269",
      "title": "CVE-2023-28322 curl",
      "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
      "published_date": "2023-05-26 21:15:16.153+00:00"
    },
    {
      "cve_id": "CVE-2022-27778",
      "definition_id": "oval:org.debian:def:18363194195585849726613001216748933322",
      "title": "CVE-2022-27778 curl",
      "description": "A use of incorrectly resolved name vulnerability fixed in 7.83.1 might remove the wrong file when `--no-clobber` is used together with `--remove-on-error`.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.1-1",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "A use of incorrectly resolved name vulnerability fixed in 7.83.1 might remove the wrong file when `--no-clobber` is used together with `--remove-on-error`.",
      "published_date": "2022-06-02 14:15:43.903+00:00"
    },
    {
      "cve_id": "CVE-2022-27780",
      "definition_id": "oval:org.debian:def:182036848825913502616256454632919732318",
      "title": "CVE-2022-27780 curl",
      "description": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.1-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
      "published_date": "2022-06-02 14:15:44.267+00:00"
    },
    {
      "cve_id": "CVE-2022-42915",
      "definition_id": "oval:org.debian:def:181730420200393964396144890126324212549",
      "title": "CVE-2022-42915 curl",
      "description": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.86.0-1",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
      "published_date": "2022-10-29 20:15:09.7+00:00"
    },
    {
      "cve_id": "CVE-2020-8231",
      "definition_id": "oval:org.debian:def:173911246283075531911906354263186182146",
      "title": "CVE-2020-8231 curl",
      "description": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.72.0-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
      "published_date": "2020-12-14 20:15:13.59+00:00"
    },
    {
      "cve_id": "CVE-2024-2398",
      "definition_id": "oval:org.debian:def:167394431730390756465047254955347463180",
      "title": "CVE-2024-2398 curl",
      "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u6",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "published_date": "2024-03-27 08:15:41.283+00:00"
    },
    {
      "cve_id": "CVE-2020-8169",
      "definition_id": "oval:org.debian:def:165821760875740221660820767028892787690",
      "title": "CVE-2020-8169 curl",
      "description": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.72.0-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
      "published_date": "2020-12-14 20:15:13.357+00:00"
    },
    {
      "cve_id": "CVE-2021-22922",
      "definition_id": "oval:org.debian:def:157355678781665309945518549641362377082",
      "title": "CVE-2021-22922 curl",
      "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "published_date": "2021-08-05 21:15:11.173+00:00"
    },
    {
      "cve_id": "CVE-2023-23915",
      "definition_id": "oval:org.debian:def:144760169937415877527454303723725976650",
      "title": "CVE-2023-23915 curl",
      "description": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
      "published_date": "2023-02-23 20:15:13.703+00:00"
    },
    {
      "cve_id": "CVE-2021-22924",
      "definition_id": "oval:org.debian:def:144571456358660345590747134107801873654",
      "title": "CVE-2021-22924 curl",
      "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.79.1-1",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
      "published_date": "2021-08-05 21:15:11.38+00:00"
    },
    {
      "cve_id": "CVE-2023-23916",
      "definition_id": "oval:org.debian:def:137591013092982120854279349252371121356",
      "title": "CVE-2023-23916 curl",
      "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
      "published_date": "2023-02-23 20:15:13.777+00:00"
    },
    {
      "cve_id": "CVE-2023-28321",
      "definition_id": "oval:org.debian:def:135480285499780908689916555362796006941",
      "title": "CVE-2023-28321 curl",
      "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
      "published_date": "2023-05-26 21:15:16.02+00:00"
    },
    {
      "cve_id": "CVE-2023-27537",
      "definition_id": "oval:org.debian:def:131204692950475536101176620256941453496",
      "title": "CVE-2023-27537 curl",
      "description": "A double free vulnerability exists in libcurl <8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-7",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A double free vulnerability exists in libcurl <8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
      "published_date": "2023-03-30 20:15:07.617+00:00"
    },
    {
      "cve_id": "CVE-2022-32207",
      "definition_id": "oval:org.debian:def:12716950049188633424368411796389127400",
      "title": "CVE-2022-32207 curl",
      "description": "When curl < 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.84.0-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "When curl < 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
      "published_date": "2022-07-07 13:15:08.403+00:00"
    },
    {
      "cve_id": "CVE-2022-22576",
      "definition_id": "oval:org.debian:def:12688698200377976530655410321906940686",
      "title": "CVE-2022-22576 curl",
      "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.0-1",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
      "published_date": "2022-05-26 17:15:09.077+00:00"
    },
    {
      "cve_id": "CVE-2022-27776",
      "definition_id": "oval:org.debian:def:119120802702026300376400115631989045986",
      "title": "CVE-2022-27776 curl",
      "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.83.0-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
      "published_date": "2022-06-02 14:15:43.713+00:00"
    },
    {
      "cve_id": "CVE-2023-28320",
      "definition_id": "oval:org.debian:def:116568883423718369941688469909193451956",
      "title": "CVE-2023-28320 curl",
      "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
      "published_date": "2023-05-26 21:15:15.937+00:00"
    },
    {
      "cve_id": "CVE-2022-32208",
      "definition_id": "oval:org.debian:def:110696805572332135393501358917586110877",
      "title": "CVE-2022-32208 curl",
      "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.84.0-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
      "published_date": "2022-07-07 13:15:08.467+00:00"
    },
    {
      "cve_id": "CVE-2023-27536",
      "definition_id": "oval:org.debian:def:108168568190550702826296226126011029057",
      "title": "CVE-2023-27536 curl",
      "description": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-7",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
      "published_date": "2023-03-30 20:15:07.547+00:00"
    },
    {
      "cve_id": "CVE-2025-0167",
      "definition_id": "oval:org.debian:def:104250789287451433465431196620893441667",
      "title": "CVE-2025-0167 curl",
      "description": "When asked to use a `.netrc` file for credentials **and** to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances.  This flaw only manifests itself if the netrc file has a `default` entry that omits both login and password. A rare circumstance.",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "7.88.1-10+deb12u11",
      "cvss_score": 3.4,
      "severity": "LOW",
      "summary": "When asked to use a `.netrc` file for credentials **and** to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has a `default` entry that\nomits both login and password. A rare circumstance.",
      "published_date": "2025-02-05 10:15:22.71+00:00"
    },
    {
      "cve_id": "CVE-2022-39253",
      "definition_id": "oval:org.debian:def:96126229451068754418902510322319754793",
      "title": "CVE-2022-39253 git",
      "description": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.38.1-1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
      "published_date": "2022-10-19 11:15:11.227+00:00"
    },
    {
      "cve_id": "CVE-2024-32002",
      "definition_id": "oval:org.debian:def:92417570731827204989926725964703603403",
      "title": "CVE-2024-32002 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 9.0,
      "severity": "CRITICAL",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
      "published_date": "2024-05-14 19:15:10.81+00:00"
    },
    {
      "cve_id": "CVE-2023-22490",
      "definition_id": "oval:org.debian:def:84077925476118067856300816182778563401",
      "title": "CVE-2023-22490 git",
      "description": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.  A fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.2-1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.\n\nA fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
      "published_date": "2023-02-14 20:15:16.683+00:00"
    },
    {
      "cve_id": "CVE-2022-41903",
      "definition_id": "oval:org.debian:def:71132934842328659515690038785536405027",
      "title": "CVE-2022-41903 git",
      "description": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.1-0.1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
      "published_date": "2023-01-17 23:15:15.69+00:00"
    },
    {
      "cve_id": "CVE-2023-23946",
      "definition_id": "oval:org.debian:def:5104322714127678673632247944947651728",
      "title": "CVE-2023-23946 git",
      "description": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.2-1",
      "cvss_score": 6.2,
      "severity": "MEDIUM",
      "summary": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
      "published_date": "2023-02-14 20:15:17.457+00:00"
    },
    {
      "cve_id": "CVE-2023-25815",
      "definition_id": "oval:org.debian:def:318549409045316192101366840215030611237",
      "title": "CVE-2023-25815 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "In Git for Windows, the Windows port of Git, no localized messages are shipped with the installer. As a consequence, Git is expected not to localize messages at all, and skips the gettext initialization. However, due to a change in MINGW-packages, the `gettext()` function's implicit initialization no longer uses the runtime prefix but uses the hard-coded path `C:\\mingw64\\share\\locale` to look for localized messages. And since any authenticated user has the permission to create folders in `C:\\` (and since `C:\\mingw64` does not typically exist), it is possible for low-privilege users to place fake messages in that location where `git.exe` will pick them up in version 2.40.1.\n\nThis vulnerability is relatively hard to exploit and requires social engineering. For example, a legitimate message at the end of a clone could be maliciously modified to ask the user to direct their web browser to a malicious website, and the user might think that the message comes from Git and is legitimate. It does require local write access by the attacker, though, which makes this attack vector less likely. Version 2.40.1 contains a patch for this issue. Some workarounds are available. Do not work on a Windows machine with shared accounts, or alternatively create a `C:\\mingw64` folder and leave it empty. Users who have administrative rights may remove the permission to create folders in `C:\\`.",
      "published_date": "2023-04-25 20:15:09.997+00:00"
    },
    {
      "cve_id": "CVE-2020-11008",
      "definition_id": "oval:org.debian:def:317803222178558877794835092853827396361",
      "title": "CVE-2020-11008 git",
      "description": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.26.2-1",
      "cvss_score": 4.0,
      "severity": "MEDIUM",
      "summary": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
      "published_date": "2020-04-21 19:15:13.457+00:00"
    },
    {
      "cve_id": "CVE-2022-24765",
      "definition_id": "oval:org.debian:def:31314465451177918556598675390873155644",
      "title": "CVE-2022-24765 git",
      "description": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.35.2-1",
      "cvss_score": 6.0,
      "severity": "MEDIUM",
      "summary": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
      "published_date": "2022-04-12 18:15:09.39+00:00"
    },
    {
      "cve_id": "CVE-2022-23521",
      "definition_id": "oval:org.debian:def:298908893665662792917150751009135849949",
      "title": "CVE-2022-23521 git",
      "description": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.1-0.1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
      "published_date": "2023-01-17 23:15:15.58+00:00"
    },
    {
      "cve_id": "CVE-2024-50349",
      "definition_id": "oval:org.debian:def:291502077032086361781660682587917699281",
      "title": "CVE-2024-50349 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u2",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When Git asks for credentials via a terminal prompt (i.e. without using any credential helper), it prints out the host name for which the user is expected to provide a username and/or a password. At this stage, any URL-encoded parts have been decoded already, and are printed verbatim. This allows attackers to craft URLs that contain ANSI escape sequences that the terminal interpret to confuse users e.g. into providing passwords for trusted Git hosting sites when in fact they are then sent to untrusted sites that are under the attacker's control. This issue has been patch via commits `7725b81` and `c903985` which are included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
      "published_date": "2025-01-14 19:15:32.157+00:00"
    },
    {
      "cve_id": "CVE-2024-32465",
      "definition_id": "oval:org.debian:def:251053967139195830388549772613119165268",
      "title": "CVE-2024-32465 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 7.3,
      "severity": "HIGH",
      "summary": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
      "published_date": "2024-05-14 20:15:14.54+00:00"
    },
    {
      "cve_id": "CVE-2022-39260",
      "definition_id": "oval:org.debian:def:248053181151551280724419681252586290358",
      "title": "CVE-2022-39260 git",
      "description": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.38.1-1",
      "cvss_score": 8.5,
      "severity": "HIGH",
      "summary": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
      "published_date": "2022-10-19 12:15:10.16+00:00"
    },
    {
      "cve_id": "CVE-2021-21300",
      "definition_id": "oval:org.debian:def:21358690917083814504505914104938542413",
      "title": "CVE-2021-21300 git",
      "description": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.30.2-1",
      "cvss_score": 8.0,
      "severity": "HIGH",
      "summary": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
      "published_date": "2021-03-09 20:15:13.26+00:00"
    },
    {
      "cve_id": "CVE-2024-32021",
      "definition_id": "oval:org.debian:def:211718228865315310245702168244806812000",
      "title": "CVE-2024-32021 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 3.9,
      "severity": "LOW",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "published_date": "2024-05-14 20:15:13.63+00:00"
    },
    {
      "cve_id": "CVE-2024-52006",
      "definition_id": "oval:org.debian:def:21125881571658339738989974235131157534",
      "title": "CVE-2024-52006 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u2",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. Git defines a line-based protocol that is used to exchange information between Git and Git credential helpers. Some ecosystems (most notably, .NET and node.js) interpret single Carriage Return characters as newlines, which renders the protections against CVE-2020-5260 incomplete for credential helpers that treat Carriage Returns in this way. This issue has been addressed in commit `b01b9b8` which is included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
      "published_date": "2025-01-14 19:15:32.33+00:00"
    },
    {
      "cve_id": "CVE-2024-32004",
      "definition_id": "oval:org.debian:def:208933455193486974492816249609402235491",
      "title": "CVE-2024-32004 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
      "published_date": "2024-05-14 19:15:11.377+00:00"
    },
    {
      "cve_id": "CVE-2021-40330",
      "definition_id": "oval:org.debian:def:19424305800147380989337297921526012432",
      "title": "CVE-2021-40330 git",
      "description": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.30.1-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
      "published_date": "2021-08-31 04:15:10.667+00:00"
    },
    {
      "cve_id": "CVE-2023-29007",
      "definition_id": "oval:org.debian:def:18957104896113675459105005468270962989",
      "title": "CVE-2023-29007 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.",
      "published_date": "2023-04-25 21:15:10.403+00:00"
    },
    {
      "cve_id": "CVE-2024-32020",
      "definition_id": "oval:org.debian:def:131918377788007631469464071857640573832",
      "title": "CVE-2024-32020 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 3.9,
      "severity": "LOW",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "published_date": "2024-05-14 19:15:12.24+00:00"
    },
    {
      "cve_id": "CVE-2022-29187",
      "definition_id": "oval:org.debian:def:116467593855582417283121888837113293151",
      "title": "CVE-2022-29187 git",
      "description": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.37.2-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
      "published_date": "2022-07-12 21:15:09.56+00:00"
    },
    {
      "cve_id": "CVE-2020-5260",
      "definition_id": "oval:org.debian:def:104945432967074331042327754052032606391",
      "title": "CVE-2020-5260 git",
      "description": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that contain an encoded newline can inject unintended values into the credential helper protocol stream, causing the credential helper to retrieve the password for one server (e.g., good.example.com) for an HTTP request being made to another server (e.g., evil.example.com), resulting in credentials for the former being sent to the latter. There are no restrictions on the relationship between the two, meaning that an attacker can craft a URL that will present stored credentials for any host to a host of their choosing. The vulnerability can be triggered by feeding a malicious URL to git clone. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The problem has been patched in the versions published on April 14th, 2020, going back to v2.17.x. Anyone wishing to backport the change further can do so by applying commit 9a6bbee (the full release includes extra checks for git fsck, but that commit is sufficient to protect clients against the vulnerability). The patched versions are: 2.17.4, 2.18.3, 2.19.4, 2.20.3, 2.21.2, 2.22.3, 2.23.2, 2.24.2, 2.25.3, 2.26.1.",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.26.1-1",
      "cvss_score": 9.3,
      "severity": "CRITICAL",
      "summary": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that contain an encoded newline can inject unintended values into the credential helper protocol stream, causing the credential helper to retrieve the password for one server (e.g., good.example.com) for an HTTP request being made to another server (e.g., evil.example.com), resulting in credentials for the former being sent to the latter. There are no restrictions on the relationship between the two, meaning that an attacker can craft a URL that will present stored credentials for any host to a host of their choosing. The vulnerability can be triggered by feeding a malicious URL to git clone. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The problem has been patched in the versions published on April 14th, 2020, going back to v2.17.x. Anyone wishing to backport the change further can do so by applying commit 9a6bbee (the full release includes extra checks for git fsck, but that commit is sufficient to protect clients against the vulnerability). The patched versions are: 2.17.4, 2.18.3, 2.19.4, 2.20.3, 2.21.2, 2.22.3, 2.23.2, 2.24.2, 2.25.3, 2.26.1.",
      "published_date": "2020-04-14 23:15:12.607+00:00"
    },
    {
      "cve_id": "CVE-2023-25652",
      "definition_id": "oval:org.debian:def:104362998013340331909952265313047683141",
      "title": "CVE-2023-25652 git",
      "description": "security update",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "1:2.39.5-0+deb12u1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.",
      "published_date": "2023-04-25 20:15:09.933+00:00"
    },
    {
      "cve_id": "CVE-2022-1271",
      "definition_id": "oval:org.debian:def:69350478922867357189175708643651384300",
      "title": "CVE-2022-1271 gzip",
      "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "affected_package": "gzip",
      "installed_version": "1.6-4ubuntu1",
      "fixed_version": "1.12-1",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "published_date": "2022-08-31 16:15:09.347+00:00"
    },
    {
      "cve_id": "CVE-2021-33560",
      "definition_id": "oval:org.debian:def:70274024300823747918476190193566907198",
      "title": "CVE-2021-33560 libgcrypt20",
      "description": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "1.9.4-2",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
      "published_date": "2021-06-08 11:15:07.767+00:00"
    },
    {
      "cve_id": "CVE-2019-13627",
      "definition_id": "oval:org.debian:def:242654707334386730083855811392923026484",
      "title": "CVE-2019-13627 libgcrypt20",
      "description": "It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "1.8.5-1",
      "cvss_score": 6.3,
      "severity": "MEDIUM",
      "summary": "It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.",
      "published_date": "2019-09-25 15:15:11.877+00:00"
    },
    {
      "cve_id": "CVE-2021-40528",
      "definition_id": "oval:org.debian:def:165202431454644947164609787883572636847",
      "title": "CVE-2021-40528 libgcrypt20",
      "description": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "1.8.7-6",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
      "published_date": "2021-09-06 19:15:07.587+00:00"
    },
    {
      "cve_id": "CVE-2018-0495",
      "definition_id": "oval:org.debian:def:104955419234460418574461463190881863278",
      "title": "CVE-2018-0495 libgcrypt20",
      "description": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "1.8.3-1",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
      "published_date": "2018-06-13 23:29:00.333+00:00"
    },
    {
      "cve_id": "CVE-2022-31081",
      "definition_id": "oval:org.debian:def:159040393212424823722532546228811310755",
      "title": "CVE-2022-31081 libhttp-daemon-perl",
      "description": "HTTP::Daemon is a simple http server class written in perl. Versions prior to 6.15 are subject to a vulnerability which could potentially be exploited to gain privileged access to APIs or poison intermediate caches. It is uncertain how large the risks are, most Perl based applications are served on top of Nginx or Apache, not on the `HTTP::Daemon`. This library is commonly used for local development and tests. Users are advised to update to resolve this issue. Users unable to upgrade may add additional request handling logic as a mitigation. After calling `my $rqst = $conn->get_request()` one could inspect the returned `HTTP::Request` object. Querying the 'Content-Length' (`my $cl = $rqst->header('Content-Length')`) will show any abnormalities that should be dealt with by a `400` response. Expected strings of 'Content-Length' SHOULD consist of either a single non-negative integer, or, a comma separated repetition of that number. (that is `42` or `42, 42, 42`). Anything else MUST be rejected.",
      "affected_package": "libhttp-daemon-perl",
      "installed_version": "6.01-1",
      "fixed_version": "6.14-1.1",
      "cvss_score": 7.3,
      "severity": "HIGH",
      "summary": "HTTP::Daemon is a simple http server class written in perl. Versions prior to 6.15 are subject to a vulnerability which could potentially be exploited to gain privileged access to APIs or poison intermediate caches. It is uncertain how large the risks are, most Perl based applications are served on top of Nginx or Apache, not on the `HTTP::Daemon`. This library is commonly used for local development and tests. Users are advised to update to resolve this issue. Users unable to upgrade may add additional request handling logic as a mitigation. After calling `my $rqst = $conn->get_request()` one could inspect the returned `HTTP::Request` object. Querying the 'Content-Length' (`my $cl = $rqst->header('Content-Length')`) will show any abnormalities that should be dealt with by a `400` response. Expected strings of 'Content-Length' SHOULD consist of either a single non-negative integer, or, a comma separated repetition of that number. (that is `42` or `42, 42, 42`). Anything else MUST be rejected.",
      "published_date": "2022-06-27 21:15:08.02+00:00"
    },
    {
      "cve_id": "CVE-2018-0739",
      "definition_id": "oval:org.debian:def:93597268326900613355934611719082344393",
      "title": "CVE-2018-0739 openssl",
      "description": "Constructed ASN.1 types with a recursive definition (such as can be found in PKCS7) could eventually exceed the stack given malicious input with excessive recursion. This could result in a Denial Of Service attack. There are no such structures used within SSL/TLS that come from untrusted sources so this is considered safe. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g). Fixed in OpenSSL 1.0.2o (Affected 1.0.2b-1.0.2n).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.0h-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Constructed ASN.1 types with a recursive definition (such as can be found in PKCS7) could eventually exceed the stack given malicious input with excessive recursion. This could result in a Denial Of Service attack. There are no such structures used within SSL/TLS that come from untrusted sources so this is considered safe. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g). Fixed in OpenSSL 1.0.2o (Affected 1.0.2b-1.0.2n).",
      "published_date": "2018-03-27 21:29:00.673+00:00"
    },
    {
      "cve_id": "CVE-2022-4203",
      "definition_id": "oval:org.debian:def:89996465444973692316662065270756005221",
      "title": "CVE-2022-4203 openssl",
      "description": "A read buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer.  The read buffer overrun might result in a crash which could lead to a denial of service attack. In theory it could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext) although we are not aware of any working exploit leading to memory contents disclosure as of the time of release of this advisory.  In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 4.9,
      "severity": "MEDIUM",
      "summary": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects.",
      "published_date": "2023-02-24 15:15:11.98+00:00"
    },
    {
      "cve_id": "CVE-2023-2975",
      "definition_id": "oval:org.debian:def:88006723905320170632458195964505858077",
      "title": "CVE-2023-2975 openssl",
      "description": "Issue summary: The AES-SIV cipher implementation contains a bug that causes it to ignore empty associated data entries which are unauthenticated as a consequence.  Impact summary: Applications that use the AES-SIV algorithm and want to authenticate empty data entries as associated data can be misled by removing, adding or reordering such empty entries as these are ignored by the OpenSSL implementation. We are currently unaware of any such applications.  The AES-SIV algorithm allows for authentication of multiple associated data entries along with the encryption. To authenticate empty data the application has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with NULL pointer as the output buffer and 0 as the input buffer length. The AES-SIV implementation in OpenSSL just returns success for such a call instead of performing the associated data authentication operation. The empty data thus will not be authenticated.  As this issue does not affect non-empty associated data authentication and we expect it to be rare for an application to use empty associated data entries this is qualified as Low severity issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.10-1~deb12u1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
      "published_date": "2023-07-14 12:15:09.023+00:00"
    },
    {
      "cve_id": "CVE-2018-0732",
      "definition_id": "oval:org.debian:def:78093461433107635198145107556295875442",
      "title": "CVE-2018-0732 openssl",
      "description": "During key agreement in a TLS handshake using a DH(E) based ciphersuite a malicious server can send a very large prime value to the client. This will cause the client to spend an unreasonably long period of time generating a key for this prime resulting in a hang until the client has finished. This could be exploited in a Denial Of Service attack. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2-1.0.2o).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "During key agreement in a TLS handshake using a DH(E) based ciphersuite a malicious server can send a very large prime value to the client. This will cause the client to spend an unreasonably long period of time generating a key for this prime resulting in a hang until the client has finished. This could be exploited in a Denial Of Service attack. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2-1.0.2o).",
      "published_date": "2018-06-12 13:29:00.207+00:00"
    },
    {
      "cve_id": "CVE-2019-1559",
      "definition_id": "oval:org.debian:def:70564927983914739058017649507942338553",
      "title": "CVE-2019-1559 openssl",
      "description": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.0b-2",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
      "published_date": "2019-02-27 23:29:00.277+00:00"
    },
    {
      "cve_id": "CVE-2022-2097",
      "definition_id": "oval:org.debian:def:57254526850127772721739484053658340060",
      "title": "CVE-2022-2097 openssl",
      "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.5-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
      "published_date": "2022-07-05 11:15:08.34+00:00"
    },
    {
      "cve_id": "CVE-2024-2511",
      "definition_id": "oval:org.debian:def:51917746747401643341465488355676654574",
      "title": "CVE-2024-2511 openssl",
      "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.14-1~deb12u1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
      "published_date": "2024-04-08 14:15:07.66+00:00"
    },
    {
      "cve_id": "CVE-2023-0464",
      "definition_id": "oval:org.debian:def:4645510531822218509451563820617860788",
      "title": "CVE-2023-0464 openssl",
      "description": "A security vulnerability has been identified in all supported versions  of OpenSSL related to the verification of X.509 certificate chains that include policy constraints.  Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.9-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
      "published_date": "2023-03-22 17:15:13.13+00:00"
    },
    {
      "cve_id": "CVE-2020-1968",
      "definition_id": "oval:org.debian:def:45998444980672124442146105925522531979",
      "title": "CVE-2020-1968 openssl",
      "description": "The Raccoon attack exploits a flaw in the TLS specification which can lead to an attacker being able to compute the pre-master secret in connections which have used a Diffie-Hellman (DH) based ciphersuite. In such a case this would result in the attacker being able to eavesdrop on all encrypted communications sent over that TLS connection. The attack can only be exploited if an implementation re-uses a DH secret across multiple TLS connections. Note that this issue only impacts DH ciphersuites and not ECDH ciphersuites. This issue affects OpenSSL 1.0.2 which is out of support and no longer receiving public updates. OpenSSL 1.1.1 is not vulnerable to this issue. Fixed in OpenSSL 1.0.2w (Affected 1.0.2-1.0.2v).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.0c-1",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "The Raccoon attack exploits a flaw in the TLS specification which can lead to an attacker being able to compute the pre-master secret in connections which have used a Diffie-Hellman (DH) based ciphersuite. In such a case this would result in the attacker being able to eavesdrop on all encrypted communications sent over that TLS connection. The attack can only be exploited if an implementation re-uses a DH secret across multiple TLS connections. Note that this issue only impacts DH ciphersuites and not ECDH ciphersuites. This issue affects OpenSSL 1.0.2 which is out of support and no longer receiving public updates. OpenSSL 1.1.1 is not vulnerable to this issue. Fixed in OpenSSL 1.0.2w (Affected 1.0.2-1.0.2v).",
      "published_date": "2020-09-09 14:15:12.507+00:00"
    },
    {
      "cve_id": "CVE-2023-5678",
      "definition_id": "oval:org.debian:def:42615825687070473958753552980280562405",
      "title": "CVE-2023-5678 openssl",
      "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.13-1~deb12u1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published_date": "2023-11-06 16:15:42.67+00:00"
    },
    {
      "cve_id": "CVE-2022-3602",
      "definition_id": "oval:org.debian:def:3695325814140566870987264270102922431",
      "title": "CVE-2022-3602 openssl",
      "description": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.7-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",
      "published_date": "2022-11-01 18:15:10.983+00:00"
    },
    {
      "cve_id": "CVE-2022-3786",
      "definition_id": "oval:org.debian:def:326716498747870761736748171040514431593",
      "title": "CVE-2022-3786 openssl",
      "description": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.7-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.\n\n",
      "published_date": "2022-11-01 18:15:11.047+00:00"
    },
    {
      "cve_id": "CVE-2019-1543",
      "definition_id": "oval:org.debian:def:323024772760277839329288830273981062608",
      "title": "CVE-2019-1543 openssl",
      "description": "ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input for every encryption operation. RFC 7539 specifies that the nonce value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length and front pads the nonce with 0 bytes if it is less than 12 bytes. However it also incorrectly allows a nonce to be set of up to 16 bytes. In this case only the last 12 bytes are significant and any additional leading bytes are ignored. It is a requirement of using this cipher that nonce values are unique. Messages encrypted using a reused nonce value are susceptible to serious confidentiality and integrity attacks. If an application changes the default nonce length to be longer than 12 bytes and then makes a change to the leading bytes of the nonce expecting the new value to be a new unique nonce then such an application could inadvertently encrypt messages with a reused nonce. Additionally the ignored bytes in a long nonce are not covered by the integrity guarantee of this cipher. Any application that relies on the integrity of these ignored leading bytes of a long nonce may be further affected. Any OpenSSL internal use of this cipher, including in SSL/TLS, is safe because no such use sets such a long nonce value. However user applications that use this cipher directly and set a non-default nonce length to be longer than 12 bytes may be vulnerable. OpenSSL versions 1.1.1 and 1.1.0 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1c (Affected 1.1.1-1.1.1b). Fixed in OpenSSL 1.1.0k (Affected 1.1.0-1.1.0j).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1c-1",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input for every encryption operation. RFC 7539 specifies that the nonce value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length and front pads the nonce with 0 bytes if it is less than 12 bytes. However it also incorrectly allows a nonce to be set of up to 16 bytes. In this case only the last 12 bytes are significant and any additional leading bytes are ignored. It is a requirement of using this cipher that nonce values are unique. Messages encrypted using a reused nonce value are susceptible to serious confidentiality and integrity attacks. If an application changes the default nonce length to be longer than 12 bytes and then makes a change to the leading bytes of the nonce expecting the new value to be a new unique nonce then such an application could inadvertently encrypt messages with a reused nonce. Additionally the ignored bytes in a long nonce are not covered by the integrity guarantee of this cipher. Any application that relies on the integrity of these ignored leading bytes of a long nonce may be further affected. Any OpenSSL internal use of this cipher, including in SSL/TLS, is safe because no such use sets such a long nonce value. However user applications that use this cipher directly and set a non-default nonce length to be longer than 12 bytes may be vulnerable. OpenSSL versions 1.1.1 and 1.1.0 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1c (Affected 1.1.1-1.1.1b). Fixed in OpenSSL 1.1.0k (Affected 1.1.0-1.1.0j).",
      "published_date": "2019-03-06 21:29:00.247+00:00"
    },
    {
      "cve_id": "CVE-2018-5407",
      "definition_id": "oval:org.debian:def:314117221345665428882637780751320792606",
      "title": "CVE-2018-5407 openssl",
      "description": "Simultaneous Multi-threading (SMT) in processors can enable local users to exploit software vulnerable to timing attacks via a side-channel timing attack on 'port contention'.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1~~pre9-1",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Simultaneous Multi-threading (SMT) in processors can enable local users to exploit software vulnerable to timing attacks via a side-channel timing attack on 'port contention'.",
      "published_date": "2018-11-15 21:29:00.233+00:00"
    },
    {
      "cve_id": "CVE-2023-0216",
      "definition_id": "oval:org.debian:def:312789409833470350890935274921642916706",
      "title": "CVE-2023-0216 openssl",
      "description": "An invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.  The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data.",
      "published_date": "2023-02-08 20:15:24.16+00:00"
    },
    {
      "cve_id": "CVE-2022-4304",
      "definition_id": "oval:org.debian:def:309926218187572751105551517171365736188",
      "title": "CVE-2022-4304 openssl",
      "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.  For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
      "published_date": "2023-02-08 20:15:23.887+00:00"
    },
    {
      "cve_id": "CVE-2023-0215",
      "definition_id": "oval:org.debian:def:305239552587450937076591438423644035101",
      "title": "CVE-2023-0215 openssl",
      "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.  The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.    This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.  Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream.  The OpenSSL cms and smime command line applications are similarly affected.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
      "published_date": "2023-02-08 20:15:24.107+00:00"
    },
    {
      "cve_id": "CVE-2023-0401",
      "definition_id": "oval:org.debian:def:302381031351837149331651978004418239462",
      "title": "CVE-2023-0401 openssl",
      "description": "A NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash.  The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider.  PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata.",
      "published_date": "2023-02-08 20:15:24.323+00:00"
    },
    {
      "cve_id": "CVE-2021-3712",
      "definition_id": "oval:org.debian:def:300069756646224940898608841754690700661",
      "title": "CVE-2021-3712 openssl",
      "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1l-1",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
      "published_date": "2021-08-24 15:15:09.533+00:00"
    },
    {
      "cve_id": "CVE-2024-5535",
      "definition_id": "oval:org.debian:def:293616978160645672868943525907822940048",
      "title": "CVE-2024-5535 openssl",
      "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client protocols buffer may cause a crash or memory contents to be sent to the peer.  Impact summary: A buffer overread can have a range of potential consequences such as unexpected application beahviour or a crash. In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer leading to a loss of confidentiality. However, only applications that directly call the SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application.  The OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists it returns the first item in the client list. In either case it will signal whether an overlap between the two lists was found. In the case where SSL_select_next_proto is called with a zero length client list it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists).  This function is typically called from a server side application callback for ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case if the SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero length server list, and has accidentally passed that zero length server list in the client/client_len parameters, and has additionally failed to correctly handle a \"no overlap\" response (which would normally result in a handshake failure in ALPN) then it will be vulnerable to this problem.  In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol then the loss of confidentiality will occur.  This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control making active exploitation unlikely.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.  Due to the low severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included in the next releases when they become available.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.15-1~deb12u1",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
      "published_date": "2024-06-27 11:15:24.447+00:00"
    },
    {
      "cve_id": "CVE-2020-1971",
      "definition_id": "oval:org.debian:def:288138724636684464844604820786986643793",
      "title": "CVE-2020-1971 openssl",
      "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1i-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
      "published_date": "2020-12-08 16:15:11.73+00:00"
    },
    {
      "cve_id": "CVE-2018-0737",
      "definition_id": "oval:org.debian:def:285830555347811572569331944636724679086",
      "title": "CVE-2018-0737 openssl",
      "description": "The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to a cache timing side channel attack. An attacker with sufficient access to mount cache timing attacks during the RSA key generation process could recover the private key. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2b-1.0.2o).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.0h-3",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to a cache timing side channel attack. An attacker with sufficient access to mount cache timing attacks during the RSA key generation process could recover the private key. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2b-1.0.2o).",
      "published_date": "2018-04-16 18:29:00.267+00:00"
    },
    {
      "cve_id": "CVE-2023-1255",
      "definition_id": "oval:org.debian:def:2816713032586245784189655189731115373",
      "title": "CVE-2023-1255 openssl",
      "description": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM platform contains a bug that could cause it to read past the input buffer, leading to a crash.  Impact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM platform can crash in rare circumstances. The AES-XTS algorithm is usually used for disk encryption.  The AES-XTS cipher decryption implementation for 64 bit ARM platform will read past the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16 byte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext buffer is unmapped, this will trigger a crash which results in a denial of service.  If an attacker can control the size and location of the ciphertext buffer being decrypted by an application using AES-XTS on 64 bit ARM, the application is affected. This is fairly unlikely making this issue a Low severity one.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.9-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
      "published_date": "2023-04-20 17:15:06.883+00:00"
    },
    {
      "cve_id": "CVE-2024-4741",
      "definition_id": "oval:org.debian:def:280378158387343981340090751293967291497",
      "title": "CVE-2024-4741 openssl",
      "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations  Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications.  The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use.  The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers will succeed even though a record has only been partially processed and the buffer is still in use.  The second scenario occurs where a full record containing application data has been received and processed by OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed even though the buffer is still in use.  While these scenarios could occur accidentally during normal operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware of this issue being actively exploited.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.14-1~deb12u1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-11-13 11:15:04.48+00:00"
    },
    {
      "cve_id": "CVE-2023-3446",
      "definition_id": "oval:org.debian:def:278156532041219125085118226565737167877",
      "title": "CVE-2023-3446 openssl",
      "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.10-1~deb12u1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published_date": "2023-07-19 12:15:10.003+00:00"
    },
    {
      "cve_id": "CVE-2023-2650",
      "definition_id": "oval:org.debian:def:272508549167990421058628264050535895167",
      "title": "CVE-2023-2650 openssl",
      "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow.  Impact summary: Applications that use OBJ_obj2txt() directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service.  An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit.  OBJ_obj2txt() may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods.  When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in text may take a very long time.  The time complexity is O(n^2) with 'n' being the size of the sub-identifiers in bytes (*).  With OpenSSL 3.0, support to fetch cryptographic algorithms using names / identifiers in string form was introduced.  This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms.  Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data.  Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL.  If the use is for the mere purpose of display, the severity is considered low.  In OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS.  It also impacts anything that processes X.509 certificates, including simple things like verifying its signature.  The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer's certificate chain.  Additionally, this only impacts clients, or servers that have explicitly enabled client authentication.  In OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects, such as X.509 certificates.  This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.9-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
      "published_date": "2023-05-30 14:15:09.683+00:00"
    },
    {
      "cve_id": "CVE-2021-4160",
      "definition_id": "oval:org.debian:def:253750939166419335475210115388795577745",
      "title": "CVE-2021-4160 openssl",
      "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1m-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
      "published_date": "2022-01-28 22:15:15.133+00:00"
    },
    {
      "cve_id": "CVE-2023-6237",
      "definition_id": "oval:org.debian:def:253603135509959334179531062752600615094",
      "title": "CVE-2023-6237 openssl",
      "description": "Issue summary: Checking excessively long invalid RSA public keys may take a long time.  Impact summary: Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a Denial of Service.  When function EVP_PKEY_public_check() is called on RSA public keys, a computation is done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more large primes and this computation completes quickly. However, if n is an overly large prime, then this computation would take a long time.  An application that calls EVP_PKEY_public_check() and supplies an RSA key obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL pkey command line application. For that reason that application is also vulnerable if used with the '-pubin' and '-check' options on untrusted data.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.13-1~deb12u1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "published_date": "2024-04-25 07:15:45.27+00:00"
    },
    {
      "cve_id": "CVE-2023-3817",
      "definition_id": "oval:org.debian:def:248165986449477101250228000705895241752",
      "title": "CVE-2023-3817 openssl",
      "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.10-1~deb12u1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published_date": "2023-07-31 16:15:10.497+00:00"
    },
    {
      "cve_id": "CVE-2022-4450",
      "definition_id": "oval:org.debian:def:246876722538400603528611267680455663346",
      "title": "CVE-2022-4450 openssl",
      "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.  The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected.  These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0.  The OpenSSL asn1parse command line application is also impacted by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
      "published_date": "2023-02-08 20:15:23.973+00:00"
    },
    {
      "cve_id": "CVE-2023-0217",
      "definition_id": "oval:org.debian:def:246268751897075333888970666285174649075",
      "title": "CVE-2023-0217 openssl",
      "description": "An invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack.  The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3.",
      "published_date": "2023-02-08 20:15:24.213+00:00"
    },
    {
      "cve_id": "CVE-2019-1549",
      "definition_id": "oval:org.debian:def:245887594576867237548677694917590428309",
      "title": "CVE-2019-1549 openssl",
      "description": "OpenSSL 1.1.1 introduced a rewritten random number generator (RNG). This was intended to include protection in the event of a fork() system call in order to ensure that the parent and child processes did not share the same RNG state. However this protection was not being used in the default case. A partial mitigation for this issue is that the output from a high precision timer is mixed into the RNG state so the likelihood of a parent and child process sharing state is significantly reduced. If an application already calls OPENSSL_init_crypto() explicitly using OPENSSL_INIT_ATFORK then this problem does not occur at all. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1d-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "OpenSSL 1.1.1 introduced a rewritten random number generator (RNG). This was intended to include protection in the event of a fork() system call in order to ensure that the parent and child processes did not share the same RNG state. However this protection was not being used in the default case. A partial mitigation for this issue is that the output from a high precision timer is mixed into the RNG state so the likelihood of a parent and child process sharing state is significantly reduced. If an application already calls OPENSSL_init_crypto() explicitly using OPENSSL_INIT_ATFORK then this problem does not occur at all. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c).",
      "published_date": "2019-09-10 17:15:11.813+00:00"
    },
    {
      "cve_id": "CVE-2024-9143",
      "definition_id": "oval:org.debian:def:233043510752240377379776048412722639073",
      "title": "CVE-2024-9143 openssl",
      "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial can lead to out-of-bounds memory reads or writes.  Impact summary: Out of bound memory writes can lead to an application crash or even a possibility of a remote code execution, however, in all the protocols involving Elliptic Curve Cryptography that we're aware of, either only \"named curves\" are supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a vulnerable application is low.  In particular, the X9.62 encoding is used for ECC keys in X.509 certificates, so problematic inputs cannot occur in the context of processing X.509 certificates.  Any problematic use-cases would have to be using an \"exotic\" curve encoding.  The affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.  Applications working with \"exotic\" explicit binary (GF(2^m)) curve parameters, that make it possible to represent invalid field polynomials with a zero constant term, via the above or similar APIs, may terminate abruptly as a result of reading or writing outside of array bounds.  Remote code execution cannot easily be ruled out.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.15-1~deb12u1",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-10-16 17:15:18.13+00:00"
    },
    {
      "cve_id": "CVE-2022-3996",
      "definition_id": "oval:org.debian:def:232544893988864545372441686627904376338",
      "title": "CVE-2022-3996 openssl",
      "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively.  On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs.  Policy processing being enabled on a publicly facing server is not considered to be a common setup.  Policy processing is enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.  Update (31 March 2023): The description of the policy processing enablement was corrected based on CVE-2023-0466.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.7-2",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466.",
      "published_date": "2022-12-13 16:15:22.007+00:00"
    },
    {
      "cve_id": "CVE-2021-23841",
      "definition_id": "oval:org.debian:def:230470679002953617841790799247757666765",
      "title": "CVE-2021-23841 openssl",
      "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1j-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "published_date": "2021-02-16 17:15:13.377+00:00"
    },
    {
      "cve_id": "CVE-2024-6119",
      "definition_id": "oval:org.debian:def:229984384136803810156469188243468689154",
      "title": "CVE-2024-6119 openssl",
      "description": "security update",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.14-1~deb12u2",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-09-03 16:15:07.177+00:00"
    },
    {
      "cve_id": "CVE-2021-3450",
      "definition_id": "oval:org.debian:def:227175327616184836917883939763244373126",
      "title": "CVE-2021-3450 openssl",
      "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1k-1",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
      "published_date": "2021-03-25 15:15:13.56+00:00"
    },
    {
      "cve_id": "CVE-2018-0734",
      "definition_id": "oval:org.debian:def:227046464226936129365389620101501503655",
      "title": "CVE-2018-0734 openssl",
      "description": "The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1a-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).",
      "published_date": "2018-10-30 12:29:00.257+00:00"
    },
    {
      "cve_id": "CVE-2024-0727",
      "definition_id": "oval:org.debian:def:21680258964074975427786644092460076356",
      "title": "CVE-2024-0727 openssl",
      "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.13-1~deb12u1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-01-26 09:15:07.637+00:00"
    },
    {
      "cve_id": "CVE-2019-1551",
      "definition_id": "oval:org.debian:def:206939817007487565084979474038859001339",
      "title": "CVE-2019-1551 openssl",
      "description": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1e-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
      "published_date": "2019-12-06 18:15:12.84+00:00"
    },
    {
      "cve_id": "CVE-2022-0778",
      "definition_id": "oval:org.debian:def:175774964556381447739511206794363579301",
      "title": "CVE-2022-0778 openssl",
      "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1n-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
      "published_date": "2022-03-15 17:15:08.513+00:00"
    },
    {
      "cve_id": "CVE-2018-0733",
      "definition_id": "oval:org.debian:def:173406435803717873511955426638016996725",
      "title": "CVE-2018-0733 openssl",
      "description": "Because of an implementation bug the PA-RISC CRYPTO_memcmp function is effectively reduced to only comparing the least significant bit of each byte. This allows an attacker to forge messages that would be considered as authenticated in an amount of tries lower than that guaranteed by the security claims of the scheme. The module can only be compiled by the HP-UX assembler, so that only HP-UX PA-RISC targets are affected. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.0h-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Because of an implementation bug the PA-RISC CRYPTO_memcmp function is effectively reduced to only comparing the least significant bit of each byte. This allows an attacker to forge messages that would be considered as authenticated in an amount of tries lower than that guaranteed by the security claims of the scheme. The module can only be compiled by the HP-UX assembler, so that only HP-UX PA-RISC targets are affected. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g).",
      "published_date": "2018-03-27 21:29:00.61+00:00"
    },
    {
      "cve_id": "CVE-2024-4603",
      "definition_id": "oval:org.debian:def:16817385537215137486303200415864341223",
      "title": "CVE-2024-4603 openssl",
      "description": "Issue summary: Checking excessively long DSA keys or parameters may be very slow.  Impact summary: Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA public key or DSA parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those computations take a long time if the modulus (`p` parameter) is too large.  Trying to use a very large modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in length for signature verification. However the key and parameter check functions do not limit the modulus size when performing the checks.  An application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  These functions are not called by OpenSSL itself on untrusted DSA keys so only applications that directly call these functions may be vulnerable.  Also vulnerable are the OpenSSL pkey and pkeyparam command line applications when using the `-check` option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.14-1~deb12u1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "published_date": "2024-05-16 16:15:10.643+00:00"
    },
    {
      "cve_id": "CVE-2021-23840",
      "definition_id": "oval:org.debian:def:164792815567027441331436712692457796617",
      "title": "CVE-2021-23840 openssl",
      "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1j-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "published_date": "2021-02-16 17:15:13.3+00:00"
    },
    {
      "cve_id": "CVE-2021-3449",
      "definition_id": "oval:org.debian:def:163602361478426408335994008306242668457",
      "title": "CVE-2021-3449 openssl",
      "description": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1k-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
      "published_date": "2021-03-25 15:15:13.45+00:00"
    },
    {
      "cve_id": "CVE-2022-1292",
      "definition_id": "oval:org.debian:def:162092881229859909749324738050852954817",
      "title": "CVE-2022-1292 openssl",
      "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1o-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
      "published_date": "2022-05-03 16:15:18.823+00:00"
    },
    {
      "cve_id": "CVE-2018-0735",
      "definition_id": "oval:org.debian:def:159782234865164868980711209657995157579",
      "title": "CVE-2018-0735 openssl",
      "description": "The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.1.1a (Affected 1.1.1).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1a-1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.1.1a (Affected 1.1.1).",
      "published_date": "2018-10-29 13:29:00.263+00:00"
    },
    {
      "cve_id": "CVE-2020-1967",
      "definition_id": "oval:org.debian:def:151046039474583248773867373373444559542",
      "title": "CVE-2020-1967 openssl",
      "description": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1g-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
      "published_date": "2020-04-21 14:15:11.287+00:00"
    },
    {
      "cve_id": "CVE-2019-1563",
      "definition_id": "oval:org.debian:def:143790954989399820440806189385002084794",
      "title": "CVE-2019-1563 openssl",
      "description": "In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1d-1",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "published_date": "2019-09-10 17:15:11.89+00:00"
    },
    {
      "cve_id": "CVE-2022-2068",
      "definition_id": "oval:org.debian:def:141072720210836786077322825068193149395",
      "title": "CVE-2022-2068 openssl",
      "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.4-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
      "published_date": "2022-06-21 15:15:09.06+00:00"
    },
    {
      "cve_id": "CVE-2021-3711",
      "definition_id": "oval:org.debian:def:130186817182147169635684436572934072944",
      "title": "CVE-2021-3711 openssl",
      "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1l-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
      "published_date": "2021-08-24 15:15:09.133+00:00"
    },
    {
      "cve_id": "CVE-2023-0466",
      "definition_id": "oval:org.debian:def:121561909679568872763851255646852803051",
      "title": "CVE-2023-0466 openssl",
      "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.  As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function.  Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.  Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.9-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
      "published_date": "2023-03-28 15:15:06.88+00:00"
    },
    {
      "cve_id": "CVE-2023-0286",
      "definition_id": "oval:org.debian:def:120969771816170998940562452496343892346",
      "title": "CVE-2023-0286 openssl",
      "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING.  When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.8-1",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
      "published_date": "2023-02-08 20:15:24.267+00:00"
    },
    {
      "cve_id": "CVE-2023-5363",
      "definition_id": "oval:org.debian:def:120392575898906577333392030516048172096",
      "title": "CVE-2023-5363 openssl",
      "description": "security update",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.11-1~deb12u2",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this because\nthe issue lies outside of the FIPS provider boundary.\n\nOpenSSL 3.1 and 3.0 are vulnerable to this issue.",
      "published_date": "2023-10-25 18:17:43.613+00:00"
    },
    {
      "cve_id": "CVE-2023-6129",
      "definition_id": "oval:org.debian:def:11292550515404535842013844111534064116",
      "title": "CVE-2023-6129 openssl",
      "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides vector instructions.  Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is used, the application state might be corrupted with various application dependent consequences.  The POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the contents of vector registers in a different order than they are saved. Thus the contents of some of these vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer PowerPC processors supporting the PowerISA 2.07 instructions.  The consequences of this kind of internal application state corruption can be various - from no consequences, if the calling application does not depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker could get complete control of the application process. However unless the compiler uses the vector registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some application dependent calculations or a crash leading to a denial of service.  The POLY1305 MAC algorithm is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used. This implies that TLS server applications using OpenSSL can be potentially impacted. However we are currently not aware of any concrete application that would be affected by this issue therefore we consider this a Low severity security issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.13-1~deb12u1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
      "published_date": "2024-01-09 17:15:12.147+00:00"
    },
    {
      "cve_id": "CVE-2019-1547",
      "definition_id": "oval:org.debian:def:112331780085083391131275256093059005032",
      "title": "CVE-2019-1547 openssl",
      "description": "Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "1.1.1d-1",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "published_date": "2019-09-10 17:15:11.75+00:00"
    },
    {
      "cve_id": "CVE-2022-2274",
      "definition_id": "oval:org.debian:def:109884477622046470813568344957072745688",
      "title": "CVE-2022-2274 openssl",
      "description": "The OpenSSL 3.0.4 release introduced a serious bug in the RSA implementation for X86_64 CPUs supporting the AVX512IFMA instructions. This issue makes the RSA implementation with 2048 bit private keys incorrect on such machines and memory corruption will happen during the computation. As a consequence of the memory corruption an attacker may be able to trigger a remote code execution on the machine performing the computation. SSL/TLS servers or other servers using 2048 bit RSA private keys running on machines supporting AVX512IFMA instructions of the X86_64 architecture are affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.4-2",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "The OpenSSL 3.0.4 release introduced a serious bug in the RSA implementation for X86_64 CPUs supporting the AVX512IFMA instructions. This issue makes the RSA implementation with 2048 bit private keys incorrect on such machines and memory corruption will happen during the computation. As a consequence of the memory corruption an attacker may be able to trigger a remote code execution on the machine performing the computation. SSL/TLS servers or other servers using 2048 bit RSA private keys running on machines supporting AVX512IFMA instructions of the X86_64 architecture are affected by this issue.",
      "published_date": "2022-07-01 08:15:07.687+00:00"
    },
    {
      "cve_id": "CVE-2024-13176",
      "definition_id": "oval:org.debian:def:109624820942657301339606404312986692345",
      "title": "CVE-2024-13176 openssl",
      "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation.  Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency.  There is a timing signal of around 300 nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular the NIST P-521 curve is affected. To be able to measure this leak, the attacker process must either be located in the same physical computer or must have a very fast network connection with low latency. For that reason the severity of this vulnerability is Low.  The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.16-1~deb12u1",
      "cvss_score": 4.1,
      "severity": "MEDIUM",
      "summary": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
      "published_date": "2025-01-20 14:15:26.247+00:00"
    },
    {
      "cve_id": "CVE-2023-0465",
      "definition_id": "oval:org.debian:def:108611940082397781645436180471265579982",
      "title": "CVE-2023-0465 openssl",
      "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks.  Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.9-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
      "published_date": "2023-03-28 15:15:06.82+00:00"
    },
    {
      "cve_id": "CVE-2022-3358",
      "definition_id": "oval:org.debian:def:101895302472764045662366797015697572491",
      "title": "CVE-2022-3358 openssl",
      "description": "OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation function will match the NULL cipher as being equivalent and will fetch this from the available providers. This will succeed if the default provider has been loaded (or if a third party provider has been loaded that offers this cipher). Using the NULL cipher means that the plaintext is emitted as the ciphertext. Applications are only affected by this issue if they call EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an encryption/decryption initialisation function. Applications that only use SSL/TLS are not impacted by this issue. Fixed in OpenSSL 3.0.6 (Affected 3.0.0-3.0.5).",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "3.0.7-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation function will match the NULL cipher as being equivalent and will fetch this from the available providers. This will succeed if the default provider has been loaded (or if a third party provider has been loaded that offers this cipher). Using the NULL cipher means that the plaintext is emitted as the ciphertext. Applications are only affected by this issue if they call EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an encryption/decryption initialisation function. Applications that only use SSL/TLS are not impacted by this issue. Fixed in OpenSSL 3.0.6 (Affected 3.0.0-3.0.5).",
      "published_date": "2022-10-11 15:15:10.233+00:00"
    },
    {
      "cve_id": "CVE-2020-12723",
      "definition_id": "oval:org.debian:def:77183915482645230426900829050400395545",
      "title": "CVE-2020-12723 perl",
      "description": "regcomp.c in Perl before 5.30.3 allows a buffer overflow via a crafted regular expression because of recursive S_study_chunk calls.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.30.3-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "regcomp.c in Perl before 5.30.3 allows a buffer overflow via a crafted regular expression because of recursive S_study_chunk calls.",
      "published_date": "2020-06-05 15:15:10.8+00:00"
    },
    {
      "cve_id": "CVE-2020-10543",
      "definition_id": "oval:org.debian:def:3836668585229030794409962493500579309",
      "title": "CVE-2020-10543 perl",
      "description": "Perl before 5.30.3 on 32-bit platforms allows a heap-based buffer overflow because nested regular expression quantifiers have an integer overflow.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.30.3-1",
      "cvss_score": 8.2,
      "severity": "HIGH",
      "summary": "Perl before 5.30.3 on 32-bit platforms allows a heap-based buffer overflow because nested regular expression quantifiers have an integer overflow.",
      "published_date": "2020-06-05 14:15:10.467+00:00"
    },
    {
      "cve_id": "CVE-2022-48522",
      "definition_id": "oval:org.debian:def:296386456036759283625956515623021715843",
      "title": "CVE-2022-48522 perl",
      "description": "In Perl 5.34.0, function S_find_uninit_var in sv.c has a stack-based crash that can lead to remote code execution or local privilege escalation.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.36.0-4",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Perl 5.34.0, function S_find_uninit_var in sv.c has a stack-based crash that can lead to remote code execution or local privilege escalation.",
      "published_date": "2023-08-22 19:16:31.153+00:00"
    },
    {
      "cve_id": "CVE-2021-36770",
      "definition_id": "oval:org.debian:def:290279240597510179891249225757147556907",
      "title": "CVE-2021-36770 perl",
      "description": "Encode.pm, as distributed in Perl through 5.34.0, allows local users to gain privileges via a Trojan horse Encode::ConfigLocal library (in the current working directory) that preempts dynamic module loading. Exploitation requires an unusual configuration, and certain 2021 versions of Encode.pm (3.05 through 3.11). This issue occurs because the || operator evaluates @INC in a scalar context, and thus @INC has only an integer value.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.32.1-5",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Encode.pm, as distributed in Perl through 5.34.0, allows local users to gain privileges via a Trojan horse Encode::ConfigLocal library (in the current working directory) that preempts dynamic module loading. Exploitation requires an unusual configuration, and certain 2021 versions of Encode.pm (3.05 through 3.11). This issue occurs because the || operator evaluates @INC in a scalar context, and thus @INC has only an integer value.",
      "published_date": "2021-08-11 23:15:07.707+00:00"
    },
    {
      "cve_id": "CVE-2020-16156",
      "definition_id": "oval:org.debian:def:286338477937661358357274424487842450790",
      "title": "CVE-2020-16156 perl",
      "description": "CPAN 2.28 allows Signature Verification Bypass.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.36.0-4",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "CPAN 2.28 allows Signature Verification Bypass.",
      "published_date": "2021-12-13 18:15:07.943+00:00"
    },
    {
      "cve_id": "CVE-2024-56406",
      "definition_id": "oval:org.debian:def:271465547373363646987106903338195313874",
      "title": "CVE-2024-56406 perl",
      "description": "security update",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.36.0-7+deb12u2",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "A heap buffer overflow vulnerability was discovered in Perl. \n\nRelease branches 5.34, 5.36, 5.38 and 5.40 are affected, including development versions from 5.33.1 through 5.41.10.\n\nWhen there are non-ASCII bytes in the left-hand-side of the `tr` operator, `S_do_trans_invmap` can overflow the destination pointer `d`.\n\n\u00a0 \u00a0$ perl -e '$_ = \"\\x{FF}\" x 1000000; tr/\\xFF/\\x{100}/;' \n\u00a0 \u00a0Segmentation fault (core dumped)\n\nIt is believed that this vulnerability can enable Denial of Service and possibly Code Execution attacks on platforms that lack sufficient defenses.",
      "published_date": "2025-04-13 14:15:14.527+00:00"
    },
    {
      "cve_id": "CVE-2023-47038",
      "definition_id": "oval:org.debian:def:15371661094385080661393666553606022102",
      "title": "CVE-2023-47038 perl",
      "description": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.36.0-7+deb12u1",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
      "published_date": "2023-12-18 14:15:08.933+00:00"
    },
    {
      "cve_id": "CVE-2020-10878",
      "definition_id": "oval:org.debian:def:148518658495846147201116590740649573426",
      "title": "CVE-2020-10878 perl",
      "description": "Perl before 5.30.3 has an integer overflow related to mishandling of a \"PL_regkind[OP(n)] == NOTHING\" situation. A crafted regular expression could lead to malformed bytecode with a possibility of instruction injection.",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "5.30.3-1",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "Perl before 5.30.3 has an integer overflow related to mishandling of a \"PL_regkind[OP(n)] == NOTHING\" situation. A crafted regular expression could lead to malformed bytecode with a possibility of instruction injection.",
      "published_date": "2020-06-05 14:15:10.527+00:00"
    },
    {
      "cve_id": "CVE-2019-11324",
      "definition_id": "oval:org.debian:def:314165034998141024561234326817901733564",
      "title": "CVE-2019-11324 python-urllib3",
      "description": "The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.25.6-4",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.",
      "published_date": "2019-04-18 21:29:00.883+00:00"
    },
    {
      "cve_id": "CVE-2019-11236",
      "definition_id": "oval:org.debian:def:313376124531427423211527088359257392726",
      "title": "CVE-2019-11236 python-urllib3",
      "description": "In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.25.6-4",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter.",
      "published_date": "2019-04-15 15:29:00.637+00:00"
    },
    {
      "cve_id": "CVE-2024-37891",
      "definition_id": "oval:org.debian:def:268088173537926783313309238754262199074",
      "title": "CVE-2024-37891 python-urllib3",
      "description": "urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.26.12-1+deb12u1",
      "cvss_score": 4.4,
      "severity": "MEDIUM",
      "summary": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "published_date": "2024-06-17 20:15:13.45+00:00"
    },
    {
      "cve_id": "CVE-2023-43804",
      "definition_id": "oval:org.debian:def:266116471351143956912127301862544037945",
      "title": "CVE-2023-43804 python-urllib3",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.26.12-1+deb12u1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
      "published_date": "2023-10-04 17:15:10.163+00:00"
    },
    {
      "cve_id": "CVE-2018-25091",
      "definition_id": "oval:org.debian:def:260591101911682681201207827496578447548",
      "title": "CVE-2018-25091 python-urllib3",
      "description": "urllib3 before 1.24.2 does not remove the authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the authorization header to be exposed to unintended hosts or transmitted in cleartext. NOTE: this issue exists because of an incomplete fix for CVE-2018-20060 (which was case-sensitive).",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.25.6-4",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "urllib3 before 1.24.2 does not remove the authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the authorization header to be exposed to unintended hosts or transmitted in cleartext. NOTE: this issue exists because of an incomplete fix for CVE-2018-20060 (which was case-sensitive).",
      "published_date": "2023-10-15 19:15:09.213+00:00"
    },
    {
      "cve_id": "CVE-2021-28363",
      "definition_id": "oval:org.debian:def:259498540314747491704377815667199595690",
      "title": "CVE-2021-28363 python-urllib3",
      "description": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.26.4-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
      "published_date": "2021-03-15 18:15:19.017+00:00"
    },
    {
      "cve_id": "CVE-2018-20060",
      "definition_id": "oval:org.debian:def:252655865763310202710201754955487513629",
      "title": "CVE-2018-20060 python-urllib3",
      "description": "urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.24-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",
      "published_date": "2018-12-11 17:29:00.38+00:00"
    },
    {
      "cve_id": "CVE-2021-33503",
      "definition_id": "oval:org.debian:def:217222306605922371949167173579489878252",
      "title": "CVE-2021-33503 python-urllib3",
      "description": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.26.5-1~exp1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
      "published_date": "2021-06-29 11:15:07.847+00:00"
    },
    {
      "cve_id": "CVE-2020-26137",
      "definition_id": "oval:org.debian:def:206520766616483620825088631214055368766",
      "title": "CVE-2020-26137 python-urllib3",
      "description": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.25.9-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.",
      "published_date": "2020-09-30 18:15:26.773+00:00"
    },
    {
      "cve_id": "CVE-2023-45803",
      "definition_id": "oval:org.debian:def:189592529101798419396842443367577745130",
      "title": "CVE-2023-45803 python-urllib3",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.26.12-1+deb12u1",
      "cvss_score": 4.2,
      "severity": "MEDIUM",
      "summary": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.",
      "published_date": "2023-10-17 20:15:10.07+00:00"
    },
    {
      "cve_id": "CVE-2020-7212",
      "definition_id": "oval:org.debian:def:113523454511440742246484390754543746592",
      "title": "CVE-2020-7212 python-urllib3",
      "description": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "1.25.8-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
      "published_date": "2020-03-06 20:15:12.707+00:00"
    },
    {
      "cve_id": "CVE-2023-22809",
      "definition_id": "oval:org.debian:def:60330937715253936612221054322385670686",
      "title": "CVE-2023-22809 sudo",
      "description": "In Sudo before 1.9.12p2, the sudoedit (aka -e) feature mishandles extra arguments passed in the user-provided environment variables (SUDO_EDITOR, VISUAL, and EDITOR), allowing a local attacker to append arbitrary entries to the list of files to process. This can lead to privilege escalation. Affected versions are 1.8.0 through 1.9.12.p1. The problem exists because a user-specified editor may contain a \"--\" argument that defeats a protection mechanism, e.g., an EDITOR='vim -- /path/to/extra/file' value.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.12p2-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "In Sudo before 1.9.12p2, the sudoedit (aka -e) feature mishandles extra arguments passed in the user-provided environment variables (SUDO_EDITOR, VISUAL, and EDITOR), allowing a local attacker to append arbitrary entries to the list of files to process. This can lead to privilege escalation. Affected versions are 1.8.0 through 1.9.12.p1. The problem exists because a user-specified editor may contain a \"--\" argument that defeats a protection mechanism, e.g., an EDITOR='vim -- /path/to/extra/file' value.",
      "published_date": "2023-01-18 17:15:10.353+00:00"
    },
    {
      "cve_id": "CVE-2021-23239",
      "definition_id": "oval:org.debian:def:269260403823701714137069176800021524935",
      "title": "CVE-2021-23239 sudo",
      "description": "The sudoedit personality of Sudo before 1.9.5 may allow a local unprivileged user to perform arbitrary directory-existence tests by winning a sudo_edit.c race condition in replacing a user-controlled directory by a symlink to an arbitrary path.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.5-1",
      "cvss_score": 2.5,
      "severity": "LOW",
      "summary": "The sudoedit personality of Sudo before 1.9.5 may allow a local unprivileged user to perform arbitrary directory-existence tests by winning a sudo_edit.c race condition in replacing a user-controlled directory by a symlink to an arbitrary path.",
      "published_date": "2021-01-12 09:15:14.043+00:00"
    },
    {
      "cve_id": "CVE-2022-43995",
      "definition_id": "oval:org.debian:def:246218317700802329572287592928633537377",
      "title": "CVE-2022-43995 sudo",
      "description": "Sudo 1.8.0 through 1.9.12, with the crypt() password backend, contains a plugins/sudoers/auth/passwd.c array-out-of-bounds error that can result in a heap-based buffer over-read. This can be triggered by arbitrary local users with access to Sudo by entering a password of seven characters or fewer. The impact could vary depending on the system libraries, compiler, and processor architecture.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.12p1-1",
      "cvss_score": 7.1,
      "severity": "HIGH",
      "summary": "Sudo 1.8.0 through 1.9.12, with the crypt() password backend, contains a plugins/sudoers/auth/passwd.c array-out-of-bounds error that can result in a heap-based buffer over-read. This can be triggered by arbitrary local users with access to Sudo by entering a password of seven characters or fewer. The impact could vary depending on the system libraries, compiler, and processor architecture.",
      "published_date": "2022-11-02 14:15:16.187+00:00"
    },
    {
      "cve_id": "CVE-2021-3156",
      "definition_id": "oval:org.debian:def:192636974861143474676754740343127022866",
      "title": "CVE-2021-3156 sudo",
      "description": "Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.5p1-1.1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character.",
      "published_date": "2021-01-26 21:15:12.987+00:00"
    },
    {
      "cve_id": "CVE-2019-14287",
      "definition_id": "oval:org.debian:def:185034752315485965071977945617827486873",
      "title": "CVE-2019-14287 sudo",
      "description": "In Sudo before 1.8.28, an attacker with access to a Runas ALL sudoer account can bypass certain policy blacklists and session PAM modules, and can cause incorrect logging, by invoking sudo with a crafted user ID. For example, this allows bypass of !root configuration, and USER= logging, for a \"sudo -u \\#$((0xffffffff))\" command.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.8.27-1.1",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "In Sudo before 1.8.28, an attacker with access to a Runas ALL sudoer account can bypass certain policy blacklists and session PAM modules, and can cause incorrect logging, by invoking sudo with a crafted user ID. For example, this allows bypass of !root configuration, and USER= logging, for a \"sudo -u \\#$((0xffffffff))\" command.",
      "published_date": "2019-10-17 18:15:12.33+00:00"
    },
    {
      "cve_id": "CVE-2019-19234",
      "definition_id": "oval:org.debian:def:178838019290786604373213339098544527789",
      "title": "CVE-2019-19234 sudo",
      "description": "In Sudo through 1.8.29, the fact that a user has been blocked (e.g., by using the ! character in the shadow file instead of a password hash) is not considered, allowing an attacker (who has access to a Runas ALL sudoer account) to impersonate any blocked user. NOTE: The software maintainer believes that this CVE is not valid. Disabling local password authentication for a user is not the same as disabling all access to that user--the user may still be able to login via other means (ssh key, kerberos, etc). Both the Linux shadow(5) and passwd(1) manuals are clear on this. Indeed it is a valid use case to have local accounts that are _only_ accessible via sudo and that cannot be logged into with a password. Sudo 1.8.30 added an optional setting to check the _shell_ of the target user (not the encrypted password!) against the contents of /etc/shells but that is not the same thing as preventing access to users with an invalid password hash",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.8.31-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Sudo through 1.8.29, the fact that a user has been blocked (e.g., by using the ! character in the shadow file instead of a password hash) is not considered, allowing an attacker (who has access to a Runas ALL sudoer account) to impersonate any blocked user. NOTE: The software maintainer believes that this CVE is not valid. Disabling local password authentication for a user is not the same as disabling all access to that user--the user may still be able to login via other means (ssh key, kerberos, etc). Both the Linux shadow(5) and passwd(1) manuals are clear on this. Indeed it is a valid use case to have local accounts that are _only_ accessible via sudo and that cannot be logged into with a password. Sudo 1.8.30 added an optional setting to check the _shell_ of the target user (not the encrypted password!) against the contents of /etc/shells but that is not the same thing as preventing access to users with an invalid password hash",
      "published_date": "2019-12-19 21:15:13.823+00:00"
    },
    {
      "cve_id": "CVE-2023-28486",
      "definition_id": "oval:org.debian:def:172927473673975154323645984533887081775",
      "title": "CVE-2023-28486 sudo",
      "description": "Sudo before 1.9.13 does not escape control characters in log messages.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.13p1-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Sudo before 1.9.13 does not escape control characters in log messages.",
      "published_date": "2023-03-16 01:15:47.003+00:00"
    },
    {
      "cve_id": "CVE-2019-18634",
      "definition_id": "oval:org.debian:def:166295318691414883768517949761942299352",
      "title": "CVE-2019-18634 sudo",
      "description": "In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.8.31-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c.",
      "published_date": "2020-01-29 18:15:12.247+00:00"
    },
    {
      "cve_id": "CVE-2023-27320",
      "definition_id": "oval:org.debian:def:156437693819507907768852465224409966606",
      "title": "CVE-2023-27320 sudo",
      "description": "Sudo before 1.9.13p2 has a double free in the per-command chroot feature.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.13p3-1",
      "cvss_score": 7.2,
      "severity": "HIGH",
      "summary": "Sudo before 1.9.13p2 has a double free in the per-command chroot feature.",
      "published_date": "2023-02-28 18:15:10.547+00:00"
    },
    {
      "cve_id": "CVE-2023-28487",
      "definition_id": "oval:org.debian:def:153506516123368091158526788435583094936",
      "title": "CVE-2023-28487 sudo",
      "description": "Sudo before 1.9.13 does not escape control characters in sudoreplay output.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.13p1-1",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Sudo before 1.9.13 does not escape control characters in sudoreplay output.",
      "published_date": "2023-03-16 01:15:47.067+00:00"
    },
    {
      "cve_id": "CVE-2019-19232",
      "definition_id": "oval:org.debian:def:132836560367699725105542014017818573507",
      "title": "CVE-2019-19232 sudo",
      "description": "In Sudo through 1.8.29, an attacker with access to a Runas ALL sudoer account can impersonate a nonexistent user by invoking sudo with a numeric uid that is not associated with any user. NOTE: The software maintainer believes that this is not a vulnerability because running a command via sudo as a user not present in the local password database is an intentional feature. Because this behavior surprised some users, sudo 1.8.30 introduced an option to enable/disable this behavior with the default being disabled. However, this does not change the fact that sudo was behaving as intended, and as documented, in earlier versions",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.8.31-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Sudo through 1.8.29, an attacker with access to a Runas ALL sudoer account can impersonate a nonexistent user by invoking sudo with a numeric uid that is not associated with any user. NOTE: The software maintainer believes that this is not a vulnerability because running a command via sudo as a user not present in the local password database is an intentional feature. Because this behavior surprised some users, sudo 1.8.30 introduced an option to enable/disable this behavior with the default being disabled. However, this does not change the fact that sudo was behaving as intended, and as documented, in earlier versions",
      "published_date": "2019-12-19 21:15:13.73+00:00"
    },
    {
      "cve_id": "CVE-2023-7090",
      "definition_id": "oval:org.debian:def:11891898064087897238768809612654234683",
      "title": "CVE-2023-7090 sudo",
      "description": "A flaw was found in sudo in the handling of ipa_hostname, where ipa_hostname from /etc/sssd/sssd.conf was not propagated in sudo. Therefore, it leads to privilege mismanagement vulnerability in applications, where client hosts retain privileges even after retracting them.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.8.28p1-1",
      "cvss_score": 6.6,
      "severity": "MEDIUM",
      "summary": "A flaw was found in sudo in the handling of ipa_hostname, where ipa_hostname from /etc/sssd/sssd.conf was not propagated in sudo. Therefore, it leads to privilege mismanagement vulnerability in applications, where client hosts retain privileges even after retracting them.",
      "published_date": "2023-12-23 23:15:07.56+00:00"
    },
    {
      "cve_id": "CVE-2021-23240",
      "definition_id": "oval:org.debian:def:103216047867666847999909328719120217347",
      "title": "CVE-2021-23240 sudo",
      "description": "selinux_edit_copy_tfiles in sudoedit in Sudo before 1.9.5 allows a local unprivileged user to gain file ownership and escalate privileges by replacing a temporary file with a symlink to an arbitrary file target. This affects SELinux RBAC support in permissive mode. Machines without SELinux are not vulnerable.",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "1.9.5-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "selinux_edit_copy_tfiles in sudoedit in Sudo before 1.9.5 allows a local unprivileged user to gain file ownership and escalate privileges by replacing a temporary file with a symlink to an arbitrary file target. This affects SELinux RBAC support in permissive mode. Machines without SELinux are not vulnerable.",
      "published_date": "2021-01-12 09:15:14.107+00:00"
    },
    {
      "cve_id": "CVE-2023-7008",
      "definition_id": "oval:org.debian:def:68391716910878119748226804761108442321",
      "title": "CVE-2023-7008 systemd",
      "description": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "252.21-1~deb12u1",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
      "published_date": "2023-12-23 13:15:07.573+00:00"
    },
    {
      "cve_id": "CVE-2025-4598",
      "definition_id": "oval:org.debian:def:311121449452623839988559333567655057912",
      "title": "CVE-2025-4598 systemd",
      "description": "security update",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "252.38-1~deb12u1",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
      "published_date": "2025-05-30 14:15:23.557+00:00"
    },
    {
      "cve_id": "CVE-2022-4415",
      "definition_id": "oval:org.debian:def:283476402022086760354410892525174004626",
      "title": "CVE-2022-4415 systemd",
      "description": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "252.4-1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
      "published_date": "2023-01-11 15:15:09.59+00:00"
    },
    {
      "cve_id": "CVE-2020-13529",
      "definition_id": "oval:org.debian:def:270918577709676493641942988563230071429",
      "title": "CVE-2020-13529 systemd",
      "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "249.4-2",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
      "published_date": "2021-05-10 16:15:07.373+00:00"
    },
    {
      "cve_id": "CVE-2021-33910",
      "definition_id": "oval:org.debian:def:269546926592662765823259540099252663623",
      "title": "CVE-2021-33910 systemd",
      "description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "247.3-6",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
      "published_date": "2021-07-20 19:15:09.783+00:00"
    },
    {
      "cve_id": "CVE-2022-3821",
      "definition_id": "oval:org.debian:def:251001808441560763629498468972834166083",
      "title": "CVE-2022-3821 systemd",
      "description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "251.3-1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
      "published_date": "2022-11-08 22:15:16.7+00:00"
    },
    {
      "cve_id": "CVE-2021-3997",
      "definition_id": "oval:org.debian:def:248213208748117694863647328694556385335",
      "title": "CVE-2021-3997 systemd",
      "description": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "250.2-1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
      "published_date": "2022-08-23 20:15:08.67+00:00"
    },
    {
      "cve_id": "CVE-2020-1712",
      "definition_id": "oval:org.debian:def:225217690372962658674527193494224126664",
      "title": "CVE-2020-1712 systemd",
      "description": "A heap use-after-free vulnerability was found in systemd before version v245-rc1, where asynchronous Polkit queries are performed while handling dbus messages. A local unprivileged attacker can abuse this flaw to crash systemd services or potentially execute code and elevate their privileges, by sending specially crafted dbus messages.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "244.2-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A heap use-after-free vulnerability was found in systemd before version v245-rc1, where asynchronous Polkit queries are performed while handling dbus messages. A local unprivileged attacker can abuse this flaw to crash systemd services or potentially execute code and elevate their privileges, by sending specially crafted dbus messages.",
      "published_date": "2020-03-31 17:15:26.577+00:00"
    },
    {
      "cve_id": "CVE-2020-13776",
      "definition_id": "oval:org.debian:def:215851401151528654958249300934621078419",
      "title": "CVE-2020-13776 systemd",
      "description": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "246-2",
      "cvss_score": 6.7,
      "severity": "MEDIUM",
      "summary": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
      "published_date": "2020-06-03 03:15:10.677+00:00"
    },
    {
      "cve_id": "CVE-2022-45873",
      "definition_id": "oval:org.debian:def:173128566765915918176925531114006110252",
      "title": "CVE-2022-45873 systemd",
      "description": "systemd 250 and 251 allows local users to achieve a systemd-coredump deadlock by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively, and put it in a deeply nested directory to make its backtrace large enough to cause the deadlock. This must be done 16 times when MaxConnections=16 is set for the systemd/units/systemd-coredump.socket file.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "252-1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "systemd 250 and 251 allows local users to achieve a systemd-coredump deadlock by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively, and put it in a deeply nested directory to make its backtrace large enough to cause the deadlock. This must be done 16 times when MaxConnections=16 is set for the systemd/units/systemd-coredump.socket file.",
      "published_date": "2022-11-23 23:15:10.183+00:00"
    },
    {
      "cve_id": "CVE-2022-2526",
      "definition_id": "oval:org.debian:def:165485987924395684570719608744619281952",
      "title": "CVE-2022-2526 systemd",
      "description": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "240-1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
      "published_date": "2022-09-09 15:15:10.107+00:00"
    },
    {
      "cve_id": "CVE-2023-26604",
      "definition_id": "oval:org.debian:def:16055846316246571188311690185268042696",
      "title": "CVE-2023-26604 systemd",
      "description": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "247.1-2",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
      "published_date": "2023-03-03 16:15:10.607+00:00"
    },
    {
      "cve_id": "CVE-2023-50868",
      "definition_id": "oval:org.debian:def:13545315853044502729528948020875436352",
      "title": "CVE-2023-50868 systemd",
      "description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "252.23-1~deb12u1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
      "published_date": "2024-02-14 16:15:45.377+00:00"
    },
    {
      "cve_id": "CVE-2023-50387",
      "definition_id": "oval:org.debian:def:104110314403782523894403987629660798260",
      "title": "CVE-2023-50387 systemd",
      "description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "252.23-1~deb12u1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
      "published_date": "2024-02-14 16:15:45.3+00:00"
    },
    {
      "cve_id": "CVE-2022-48303",
      "definition_id": "oval:org.debian:def:75220132632322265018259635038113263403",
      "title": "CVE-2022-48303 tar",
      "description": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "1.34+dfsg-1.2+deb12u1",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
      "published_date": "2023-01-30 04:15:08.03+00:00"
    },
    {
      "cve_id": "CVE-2018-20482",
      "definition_id": "oval:org.debian:def:269255885369873126550351919021164451021",
      "title": "CVE-2018-20482 tar",
      "description": "GNU Tar through 1.30, when --sparse is used, mishandles file shrinkage during read access, which allows local users to cause a denial of service (infinite read loop in sparse_dump_region in sparse.c) by modifying a file that is supposed to be archived by a different user's process (e.g., a system backup running as root).",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "1.30+dfsg-3.1",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "GNU Tar through 1.30, when --sparse is used, mishandles file shrinkage during read access, which allows local users to cause a denial of service (infinite read loop in sparse_dump_region in sparse.c) by modifying a file that is supposed to be archived by a different user's process (e.g., a system backup running as root).",
      "published_date": "2018-12-26 18:29:00.373+00:00"
    },
    {
      "cve_id": "CVE-2021-20193",
      "definition_id": "oval:org.debian:def:253910837338262967286469731186972911319",
      "title": "CVE-2021-20193 tar",
      "description": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "1.34+dfsg-1",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
      "published_date": "2021-03-26 17:15:12.843+00:00"
    },
    {
      "cve_id": "CVE-2023-39804",
      "definition_id": "oval:org.debian:def:237992185348201915869875520388806476800",
      "title": "CVE-2023-39804 tar",
      "description": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "1.34+dfsg-1.2+deb12u1",
      "cvss_score": 6.2,
      "severity": "MEDIUM",
      "summary": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
      "published_date": "2024-03-27 04:15:08.897+00:00"
    },
    {
      "cve_id": "CVE-2019-9923",
      "definition_id": "oval:org.debian:def:210634987194842581014296679136151412827",
      "title": "CVE-2019-9923 tar",
      "description": "pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "1.32+dfsg-1",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.",
      "published_date": "2019-03-22 08:29:00.247+00:00"
    },
    {
      "cve_id": "CVE-2024-38428",
      "definition_id": "oval:org.debian:def:40650206097425741719690578277221433401",
      "title": "CVE-2024-38428 wget",
      "description": "url.c in GNU Wget through 1.24.5 mishandles semicolons in the userinfo subcomponent of a URI, and thus there may be insecure behavior in which data that was supposed to be in the userinfo subcomponent is misinterpreted to be part of the host subcomponent.",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "1.21.3-1+deb12u1",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "url.c in GNU Wget through 1.24.5 mishandles semicolons in the userinfo subcomponent of a URI, and thus there may be insecure behavior in which data that was supposed to be in the userinfo subcomponent is misinterpreted to be part of the host subcomponent.",
      "published_date": "2024-06-16 03:15:08.43+00:00"
    },
    {
      "cve_id": "CVE-2018-0494",
      "definition_id": "oval:org.debian:def:288955867512955122022994825870387457334",
      "title": "CVE-2018-0494 wget",
      "description": "GNU Wget before 1.19.5 is prone to a cookie injection vulnerability in the resp_new function in http.c via a \\r\\n sequence in a continuation line.",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "1.19.5-1",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "GNU Wget before 1.19.5 is prone to a cookie injection vulnerability in the resp_new function in http.c via a \\r\\n sequence in a continuation line.",
      "published_date": "2018-05-06 22:29:00.217+00:00"
    },
    {
      "cve_id": "CVE-2019-5953",
      "definition_id": "oval:org.debian:def:284493933111438798207112413546661608964",
      "title": "CVE-2019-5953 wget",
      "description": "Buffer overflow in GNU Wget 1.20.1 and earlier allows remote attackers to cause a denial-of-service (DoS) or may execute an arbitrary code via unspecified vectors.",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "1.20.1-1.1",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Buffer overflow in GNU Wget 1.20.1 and earlier allows remote attackers to cause a denial-of-service (DoS) or may execute an arbitrary code via unspecified vectors.",
      "published_date": "2019-05-17 16:29:05.36+00:00"
    },
    {
      "cve_id": "CVE-2018-20483",
      "definition_id": "oval:org.debian:def:265749119995911789244210374202639128162",
      "title": "CVE-2018-20483 wget",
      "description": "set_file_metadata in xattr.c in GNU Wget before 1.20.1 stores a file's origin URL in the user.xdg.origin.url metadata attribute of the extended attributes of the downloaded file, which allows local users to obtain sensitive information (e.g., credentials contained in the URL) by reading this attribute, as demonstrated by getfattr. This also applies to Referer information in the user.xdg.referrer.url metadata attribute. According to 2016-07-22 in the Wget ChangeLog, user.xdg.origin.url was partially based on the behavior of fwrite_xattr in tool_xattr.c in curl.",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "1.20.1-1",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "set_file_metadata in xattr.c in GNU Wget before 1.20.1 stores a file's origin URL in the user.xdg.origin.url metadata attribute of the extended attributes of the downloaded file, which allows local users to obtain sensitive information (e.g., credentials contained in the URL) by reading this attribute, as demonstrated by getfattr. This also applies to Referer information in the user.xdg.referrer.url metadata attribute. According to 2016-07-22 in the Wget ChangeLog, user.xdg.origin.url was partially based on the behavior of fwrite_xattr in tool_xattr.c in curl.",
      "published_date": "2018-12-26 18:29:00.48+00:00"
    },
    {
      "cve_id": "CVE-2022-1271",
      "definition_id": "oval:org.debian:def:308857370885234392298352395103210826020",
      "title": "CVE-2022-1271 xz-utils",
      "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "5.2.5-2.1",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "published_date": "2022-08-31 16:15:09.347+00:00"
    },
    {
      "cve_id": "CVE-2025-31115",
      "definition_id": "oval:org.debian:def:292167872209511450412175147727463395914",
      "title": "CVE-2025-31115 xz-utils",
      "description": "security update",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "5.4.1-1",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "XZ Utils provide a general-purpose data-compression library plus command-line tools. In XZ Utils 5.3.3alpha to 5.8.0, the multithreaded .xz decoder in liblzma has a bug where invalid input can at least result in a crash. The effects include heap use after free and writing to an address based on the null pointer plus an offset. Applications and libraries that use the lzma_stream_decoder_mt function are affected. The bug has been fixed in XZ Utils 5.8.1, and the fix has been committed to the v5.4, v5.6, v5.8, and master branches in the xz Git repository. No new release packages will be made from the old stable branches, but a standalone patch is available that applies to all affected releases.",
      "published_date": "2025-04-03 17:15:30.54+00:00"
    }
  ]
}