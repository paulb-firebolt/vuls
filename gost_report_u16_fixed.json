{
  "total_vulnerabilities": 528,
  "packages_affected": 21,
  "vulnerability_breakdown": {
    "CRITICAL": 68,
    "HIGH": 206,
    "MEDIUM": 203,
    "LOW": 33,
    "unknown": 18
  },
  "high_risk_packages": [
    {
      "package": "curl",
      "total_vulns": 96,
      "critical": 15,
      "high": 30,
      "medium": 39,
      "low": 12,
      "risk_score": 807
    },
    {
      "package": "python3.5",
      "total_vulns": 74,
      "critical": 10,
      "high": 29,
      "medium": 27,
      "low": 2,
      "risk_score": 627
    },
    {
      "package": "python2.7",
      "total_vulns": 73,
      "critical": 10,
      "high": 29,
      "medium": 26,
      "low": 2,
      "risk_score": 622
    },
    {
      "package": "openssl",
      "total_vulns": 73,
      "critical": 5,
      "high": 26,
      "medium": 37,
      "low": 4,
      "risk_score": 549
    },
    {
      "package": "git",
      "total_vulns": 41,
      "critical": 7,
      "high": 20,
      "medium": 7,
      "low": 4,
      "risk_score": 379
    },
    {
      "package": "libxml2",
      "total_vulns": 37,
      "critical": 3,
      "high": 19,
      "medium": 12,
      "low": 3,
      "risk_score": 313
    },
    {
      "package": "perl",
      "total_vulns": 21,
      "critical": 8,
      "high": 12,
      "medium": 1,
      "low": 0,
      "risk_score": 285
    },
    {
      "package": "systemd",
      "total_vulns": 33,
      "critical": 2,
      "high": 8,
      "medium": 21,
      "low": 2,
      "risk_score": 227
    },
    {
      "package": "sudo",
      "total_vulns": 16,
      "critical": 0,
      "high": 11,
      "medium": 4,
      "low": 1,
      "risk_score": 131
    },
    {
      "package": "python-urllib3",
      "total_vulns": 13,
      "critical": 1,
      "high": 3,
      "medium": 9,
      "low": 0,
      "risk_score": 95
    },
    {
      "package": "python",
      "total_vulns": 10,
      "critical": 1,
      "high": 5,
      "medium": 4,
      "low": 0,
      "risk_score": 90
    },
    {
      "package": "unzip",
      "total_vulns": 10,
      "critical": 2,
      "high": 3,
      "medium": 3,
      "low": 2,
      "risk_score": 87
    },
    {
      "package": "wget",
      "total_vulns": 6,
      "critical": 2,
      "high": 1,
      "medium": 3,
      "low": 0,
      "risk_score": 65
    },
    {
      "package": "libgcrypt20",
      "total_vulns": 8,
      "critical": 0,
      "high": 3,
      "medium": 5,
      "low": 0,
      "risk_score": 55
    },
    {
      "package": "xz-utils",
      "total_vulns": 5,
      "critical": 1,
      "high": 1,
      "medium": 1,
      "low": 0,
      "risk_score": 35
    },
    {
      "package": "bash",
      "total_vulns": 3,
      "critical": 0,
      "high": 3,
      "medium": 0,
      "low": 0,
      "risk_score": 30
    },
    {
      "package": "tar",
      "total_vulns": 5,
      "critical": 0,
      "high": 1,
      "medium": 3,
      "low": 1,
      "risk_score": 26
    },
    {
      "package": "bzip2",
      "total_vulns": 1,
      "critical": 1,
      "high": 0,
      "medium": 0,
      "low": 0,
      "risk_score": 20
    },
    {
      "package": "gzip",
      "total_vulns": 1,
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "risk_score": 10
    },
    {
      "package": "libhttp-daemon-perl",
      "total_vulns": 1,
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "risk_score": 10
    },
    {
      "package": "python3-json-pointer",
      "total_vulns": 1,
      "critical": 0,
      "high": 0,
      "medium": 1,
      "low": 0,
      "risk_score": 5
    }
  ],
  "vulnerabilities": [
    {
      "cve_id": "CVE-2022-3715",
      "source": "GOST",
      "affected_package": "bash",
      "installed_version": "4.3-14ubuntu1.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
      "public_date": "2023-01-05 15:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
      "published_date": "2023-01-05 15:15:10.41+00:00"
    },
    {
      "cve_id": "CVE-2019-9924",
      "source": "GOST",
      "affected_package": "bash",
      "installed_version": "4.3-14ubuntu1.4",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "rbash in Bash before 4.4-beta2 did not prevent the shell user from modifying BASH_CMDS, thus allowing the user to execute any command with the permissions of the shell.",
      "public_date": "2019-03-22 08:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "rbash in Bash before 4.4-beta2 did not prevent the shell user from modifying BASH_CMDS, thus allowing the user to execute any command with the permissions of the shell.",
      "published_date": "2019-03-22 08:29:00.467+00:00"
    },
    {
      "cve_id": "CVE-2019-18276",
      "source": "GOST",
      "affected_package": "bash",
      "installed_version": "4.3-14ubuntu1.4",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
      "public_date": "2019-11-28 01:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
      "published_date": "2019-11-28 01:15:10.603+00:00"
    },
    {
      "cve_id": "CVE-2019-12900",
      "source": "GOST",
      "affected_package": "bzip2",
      "installed_version": "1.0.6-8ubuntu0.2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "BZ2_decompress in decompress.c in bzip2 through 1.0.6 has an out-of-bounds write when there are many selectors.",
      "public_date": "2019-06-19 23:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "BZ2_decompress in decompress.c in bzip2 through 1.0.6 has an out-of-bounds write when there are many selectors.",
      "published_date": "2019-06-19 23:15:09.91+00:00"
    },
    {
      "cve_id": "CVE-2025-5399",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Due to a mistake in libcurl's WebSocket code, a malicious server can send a particularly crafted packet which makes libcurl get trapped in an endless busy-loop.  There is no other way for the application to escape or exit this loop other than killing the thread/process.  This might be used to DoS libcurl-using application.",
      "public_date": "2025-06-07 08:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Due to a mistake in libcurl's WebSocket code, a malicious server can send a\nparticularly crafted packet which makes libcurl get trapped in an endless\nbusy-loop.\n\nThere is no other way for the application to escape or exit this loop other\nthan killing the thread/process.\n\nThis might be used to DoS libcurl-using application.",
      "published_date": "2025-06-07 08:15:20.687+00:00"
    },
    {
      "cve_id": "CVE-2025-5025",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl supports *pinning* of the server certificate public key for HTTPS transfers. Due to an omission, this check is not performed when connecting with QUIC for HTTP/3, when the TLS backend is wolfSSL. Documentation says the option works with wolfSSL, failing to specify that it does not for QUIC and HTTP/3. Since pinning makes the transfer succeed if the pin is fine, users could unwittingly connect to an impostor server without noticing.",
      "public_date": "2025-05-28 07:15:00+00:00",
      "cvss_score": 4.8,
      "severity": "MEDIUM",
      "summary": "libcurl supports *pinning* of the server certificate public key for HTTPS transfers. Due to an omission, this check is not performed when connecting with QUIC for HTTP/3, when the TLS backend is wolfSSL. Documentation says the option works with wolfSSL, failing to specify that it does not for QUIC and HTTP/3. Since pinning makes the transfer succeed if the pin is fine, users could unwittingly connect to an impostor server without noticing.",
      "published_date": "2025-05-28 07:15:24.91+00:00"
    },
    {
      "cve_id": "CVE-2025-4947",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl accidentally skips the certificate verification for QUIC connections when connecting to a host specified as an IP address in the URL. Therefore, it does not detect impostors or man-in-the-middle attacks.",
      "public_date": "2025-05-28 07:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "libcurl accidentally skips the certificate verification for QUIC connections when connecting to a host specified as an IP address in the URL. Therefore, it does not detect impostors or man-in-the-middle attacks.",
      "published_date": "2025-05-28 07:15:24.78+00:00"
    },
    {
      "cve_id": "CVE-2025-0725",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When libcurl is asked to perform automatic gzip decompression of content-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option, **using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would make libcurl perform a buffer overflow.",
      "public_date": "2025-02-05 10:15:00+00:00",
      "cvss_score": 7.3,
      "severity": "HIGH",
      "summary": "When libcurl is asked to perform automatic gzip decompression of\ncontent-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option,\n**using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would\nmake libcurl perform a buffer overflow.",
      "published_date": "2025-02-05 10:15:22.98+00:00"
    },
    {
      "cve_id": "CVE-2025-0665",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "libcurl would wrongly close the same eventfd file descriptor twice when taking down a connection channel after having completed a threaded name resolve.",
      "public_date": "2025-02-05 10:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "libcurl would wrongly close the same eventfd file descriptor twice when taking\ndown a connection channel after having completed a threaded name resolve.",
      "published_date": "2025-02-05 10:15:22.857+00:00"
    },
    {
      "cve_id": "CVE-2025-0167",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When asked to use a `.netrc` file for credentials **and** to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances.  This flaw only manifests itself if the netrc file has a `default` entry that omits both login and password. A rare circumstance.",
      "public_date": "2025-02-05 10:15:00+00:00",
      "cvss_score": 3.4,
      "severity": "LOW",
      "summary": "When asked to use a `.netrc` file for credentials **and** to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has a `default` entry that\nomits both login and password. A rare circumstance.",
      "published_date": "2025-02-05 10:15:22.71+00:00"
    },
    {
      "cve_id": "CVE-2024-9681",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When curl is asked to use HSTS, the expiry time for a subdomain might overwrite a parent domain's cache entry, making it end sooner or later than otherwise intended.  This affects curl using applications that enable HSTS and use URLs with the insecure `HTTP://` scheme and perform transfers with hosts like `x.example.com` as well as `example.com` where the first host is a subdomain of the second host.  (The HSTS cache either needs to have been populated manually or there needs to have been previous HTTPS accesses done as the cache needs to have entries for the domains involved to trigger this problem.)  When `x.example.com` responds with `Strict-Transport-Security:` headers, this bug can make the subdomain's expiry timeout *bleed over* and get set for the parent domain `example.com` in curl's HSTS cache.  The result of a triggered bug is that HTTP accesses to `example.com` get converted to HTTPS for a different period of time than what was asked for by the origin server. If `example.com` for example stops supporting HTTPS at its expiry time, curl might then fail to access `http://example.com` until the (wrongly set) timeout expires. This bug can also expire the parent's entry *earlier*, thus making curl inadvertently switch back to insecure HTTP earlier than otherwise intended.",
      "public_date": "2024-11-06 08:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "When curl is asked to use HSTS, the expiry time for a subdomain might\noverwrite a parent domain's cache entry, making it end sooner or later than\notherwise intended.\n\nThis affects curl using applications that enable HSTS and use URLs with the\ninsecure `HTTP://` scheme and perform transfers with hosts like\n`x.example.com` as well as `example.com` where the first host is a subdomain\nof the second host.\n\n(The HSTS cache either needs to have been populated manually or there needs to\nhave been previous HTTPS accesses done as the cache needs to have entries for\nthe domains involved to trigger this problem.)\n\nWhen `x.example.com` responds with `Strict-Transport-Security:` headers, this\nbug can make the subdomain's expiry timeout *bleed over* and get set for the\nparent domain `example.com` in curl's HSTS cache.\n\nThe result of a triggered bug is that HTTP accesses to `example.com` get\nconverted to HTTPS for a different period of time than what was asked for by\nthe origin server. If `example.com` for example stops supporting HTTPS at its\nexpiry time, curl might then fail to access `http://example.com` until the\n(wrongly set) timeout expires. This bug can also expire the parent's entry\n*earlier*, thus making curl inadvertently switch back to insecure HTTP earlier\nthan otherwise intended.",
      "published_date": "2024-11-06 08:15:03.74+00:00"
    },
    {
      "cve_id": "CVE-2024-8096",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "public_date": "2024-09-11 10:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "published_date": "2024-09-11 10:15:02.883+00:00"
    },
    {
      "cve_id": "CVE-2024-7264",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given an syntactically incorrect field, the parser might end up using -1 for the length of the *time fraction*, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null terminated.  This flaw most likely leads to a crash, but can also lead to heap contents getting returned to the application when [CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "public_date": "2024-07-31 08:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "published_date": "2024-07-31 08:15:02.657+00:00"
    },
    {
      "cve_id": "CVE-2024-6874",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "libcurl's URL API function [curl_url_get()](https://curl.se/libcurl/c/curl_url_get.html) offers punycode conversions, to and from IDN. Asking to convert a name that is exactly 256 bytes, libcurl ends up reading outside of a stack based buffer when built to use the *macidn* IDN backend. The conversion function then fills up the provided buffer exactly - but does not null terminate the string.  This flaw can lead to stack contents accidently getting returned as part of the converted string.",
      "public_date": "2024-07-24 08:15:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "libcurl's URL API function\n[curl_url_get()](https://curl.se/libcurl/c/curl_url_get.html) offers punycode\nconversions, to and from IDN. Asking to convert a name that is exactly 256\nbytes, libcurl ends up reading outside of a stack based buffer when built to\nuse the *macidn* IDN backend. The conversion function then fills up the\nprovided buffer exactly - but does not null terminate the string.\n\nThis flaw can lead to stack contents accidently getting returned as part of\nthe converted string.",
      "published_date": "2024-07-24 08:15:03.413+00:00"
    },
    {
      "cve_id": "CVE-2024-6197",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl's ASN1 parser has this utf8asn1str() function used for parsing an ASN.1 UTF-8 string. Itcan detect an invalid field and return error. Unfortunately, when doing so it also invokes `free()` on a 4 byte localstack buffer.  Most modern malloc implementations detect this error and immediately abort. Some however accept the input pointer and add that memory to its list of available chunks. This leads to the overwriting of nearby stack memory. The content of the overwrite is decided by the `free()` implementation; likely to be memory pointers and a set of flags. The most likely outcome of exploting this flaw is a crash, although it cannot be ruled out that more serious results can be had in special circumstances.",
      "public_date": "2024-07-24 08:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "libcurl's ASN1 parser has this utf8asn1str() function used for parsing an ASN.1 UTF-8 string. Itcan detect an invalid field and return error. Unfortunately, when doing so it also invokes `free()` on a 4 byte localstack buffer.  Most modern malloc implementations detect this error and immediately abort. Some however accept the input pointer and add that memory to its list of available chunks. This leads to the overwriting of nearby stack memory. The content of the overwrite is decided by the `free()` implementation; likely to be memory pointers and a set of flags.  The most likely outcome of exploting this flaw is a crash, although it cannot be ruled out that more serious results can be had in special circumstances.",
      "published_date": "2024-07-24 08:15:03.34+00:00"
    },
    {
      "cve_id": "CVE-2024-2466",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS. libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
      "public_date": "2024-03-27 08:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
      "published_date": "2024-03-27 08:15:41.343+00:00"
    },
    {
      "cve_id": "CVE-2024-2398",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory. Further, this error condition fails silently and is therefore not easily detected by an application.",
      "public_date": "2024-03-27 08:15:00+00:00",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "published_date": "2024-03-27 08:15:41.283+00:00"
    },
    {
      "cve_id": "CVE-2024-2379",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
      "public_date": "2024-03-27 08:15:00+00:00",
      "cvss_score": 6.3,
      "severity": "MEDIUM",
      "summary": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
      "published_date": "2024-03-27 08:15:41.23+00:00"
    },
    {
      "cve_id": "CVE-2024-2004",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled. curl --proto -all,-http http://curl.se The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "public_date": "2024-03-27 08:15:00+00:00",
      "cvss_score": 3.5,
      "severity": "LOW",
      "summary": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "published_date": "2024-03-27 08:15:41.173+00:00"
    },
    {
      "cve_id": "CVE-2024-11053",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When asked to both use a `.netrc` file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances.  This flaw only manifests itself if the netrc file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password.",
      "public_date": "2024-12-11 08:15:00+00:00",
      "cvss_score": 3.4,
      "severity": "LOW",
      "summary": "When asked to both use a `.netrc` file for credentials and to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has an entry that matches\nthe redirect target hostname but the entry either omits just the password or\nomits both login and password.",
      "published_date": "2024-12-11 08:15:05.307+00:00"
    },
    {
      "cve_id": "CVE-2024-0853",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to the same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
      "public_date": "2024-02-03 14:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.",
      "published_date": "2024-02-03 14:15:50.85+00:00"
    },
    {
      "cve_id": "CVE-2023-46219",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When saving HSTS data to an excessively long file name, curl could end up removing all contents, making subsequent requests using that file unaware of the HSTS status they should otherwise use.",
      "public_date": "2023-12-12 02:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.",
      "published_date": "2023-12-12 02:15:06.99+00:00"
    },
    {
      "cve_id": "CVE-2023-46218",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that are then passed back to more origins than what is otherwise allowed or possible. This allows a site to set cookies that then would get sent to different and unrelated sites and domains. It could do this by exploiting a mixed case flaw in curl's function that verifies a given cookie domain against the Public Suffix List (PSL). For example a cookie could be set with `domain=co.UK` when the URL used a lower case hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
      "public_date": "2023-12-07 01:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
      "published_date": "2023-12-07 01:15:07.16+00:00"
    },
    {
      "cve_id": "CVE-2023-38546",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "This flaw allows an attacker to insert cookies at will into a running program using libcurl, if the specific series of conditions are met. libcurl performs transfers. In its API, an application creates \"easy handles\" that are the individual handles for single transfers. libcurl provides a function call that duplicates en easy handle called [curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html). If a transfer has cookies enabled when the handle is duplicated, the cookie-enable state is also cloned - but without cloning the actual cookies. If the source handle did not read any cookies from a specific file on disk, the cloned version of the handle would instead store the file name as `none` (using the four ASCII letters, no quotes). Subsequent use of the cloned handle that does not explicitly set a source to load cookies from would then inadvertently load cookies from a file named `none` - if such a file exists and is readable in the current directory of the program using libcurl. And if using the correct file format of course.",
      "public_date": "2023-10-18 04:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "This flaw allows an attacker to insert cookies at will into a running program\nusing libcurl, if the specific series of conditions are met.\n\nlibcurl performs transfers. In its API, an application creates \"easy handles\"\nthat are the individual handles for single transfers.\n\nlibcurl provides a function call that duplicates en easy handle called\n[curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).\n\nIf a transfer has cookies enabled when the handle is duplicated, the\ncookie-enable state is also cloned - but without cloning the actual\ncookies. If the source handle did not read any cookies from a specific file on\ndisk, the cloned version of the handle would instead store the file name as\n`none` (using the four ASCII letters, no quotes).\n\nSubsequent use of the cloned handle that does not explicitly set a source to\nload cookies from would then inadvertently load cookies from a file named\n`none` - if such a file exists and is readable in the current directory of the\nprogram using libcurl. And if using the correct file format of course.",
      "published_date": "2023-10-18 04:15:11.137+00:00"
    },
    {
      "cve_id": "CVE-2023-38545",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy handshake. When curl is asked to pass along the host name to the SOCKS5 proxy to allow that to resolve the address instead of it getting done by curl itself, the maximum length that host name can be is 255 bytes. If the host name is detected to be longer, curl switches to local name resolving and instead passes on the resolved address only. Due to this bug, the local variable that means \"let the host resolve the name\" could get the wrong value during a slow SOCKS5 handshake, and contrary to the intention, copy the too long host name to the target buffer instead of copying just the resolved address there. The target buffer being a heap based buffer, and the host name coming from the URL that curl has been told to operate with.",
      "public_date": "2023-10-18 04:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "This flaw makes curl overflow a heap based buffer in the SOCKS5 proxy\nhandshake.\n\nWhen curl is asked to pass along the host name to the SOCKS5 proxy to allow\nthat to resolve the address instead of it getting done by curl itself, the\nmaximum length that host name can be is 255 bytes.\n\nIf the host name is detected to be longer, curl switches to local name\nresolving and instead passes on the resolved address only. Due to this bug,\nthe local variable that means \"let the host resolve the name\" could get the\nwrong value during a slow SOCKS5 handshake, and contrary to the intention,\ncopy the too long host name to the target buffer instead of copying just the\nresolved address there.\n\nThe target buffer being a heap based buffer, and the host name coming from the\nURL that curl has been told to operate with.",
      "published_date": "2023-10-18 04:15:11.077+00:00"
    },
    {
      "cve_id": "CVE-2023-38039",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl retrieves an HTTP response, it stores the incoming headers so that they can be accessed later via the libcurl headers API. However, curl did not have a limit in how many or how large headers it would accept in a response, allowing a malicious server to stream an endless series of headers and eventually cause curl to run out of heap memory.",
      "public_date": "2023-09-15 04:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.",
      "published_date": "2023-09-15 04:15:10.127+00:00"
    },
    {
      "cve_id": "CVE-2023-28322",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
      "public_date": "2023-05-26 21:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
      "published_date": "2023-05-26 21:15:16.153+00:00"
    },
    {
      "cve_id": "CVE-2023-28321",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
      "public_date": "2023-05-26 21:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
      "published_date": "2023-05-26 21:15:16.02+00:00"
    },
    {
      "cve_id": "CVE-2023-28320",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
      "public_date": "2023-05-26 21:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
      "published_date": "2023-05-26 21:15:15.937+00:00"
    },
    {
      "cve_id": "CVE-2023-28319",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
      "public_date": "2023-05-26 21:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
      "published_date": "2023-05-26 21:15:10.02+00:00"
    },
    {
      "cve_id": "CVE-2023-27538",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
      "public_date": "2023-03-30 20:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
      "published_date": "2023-03-30 20:15:07.677+00:00"
    },
    {
      "cve_id": "CVE-2023-27537",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A double free vulnerability exists in libcurl <8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
      "public_date": "2023-03-30 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A double free vulnerability exists in libcurl <8.0.0 when sharing HSTS data between separate \"handles\". This sharing was introduced without considerations for do this sharing across separate threads but there was no indication of this fact in the documentation. Due to missing mutexes or thread locks, two threads sharing the same HSTS data could end up doing a double-free or use-after-free.",
      "published_date": "2023-03-30 20:15:07.617+00:00"
    },
    {
      "cve_id": "CVE-2023-27536",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
      "public_date": "2023-03-30 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
      "published_date": "2023-03-30 20:15:07.547+00:00"
    },
    {
      "cve_id": "CVE-2023-27535",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
      "public_date": "2023-03-30 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
      "published_date": "2023-03-30 20:15:07.483+00:00"
    },
    {
      "cve_id": "CVE-2023-27534",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
      "public_date": "2023-03-30 20:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
      "published_date": "2023-03-30 20:15:07.427+00:00"
    },
    {
      "cve_id": "CVE-2023-27533",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
      "public_date": "2023-03-30 20:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
      "published_date": "2023-03-30 20:15:07.373+00:00"
    },
    {
      "cve_id": "CVE-2023-23916",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
      "public_date": "2023-02-23 20:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
      "published_date": "2023-02-23 20:15:13.777+00:00"
    },
    {
      "cve_id": "CVE-2023-23915",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
      "public_date": "2023-02-23 20:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality to behave incorrectly when multiple URLs are requested in parallel. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. This HSTS mechanism would however surprisingly fail when multiple transfers are done in parallel as the HSTS cache file gets overwritten by the most recentlycompleted transfer. A later HTTP-only transfer to the earlier host name would then *not* get upgraded properly to HSTS.",
      "published_date": "2023-02-23 20:15:13.703+00:00"
    },
    {
      "cve_id": "CVE-2023-23914",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
      "public_date": "2023-02-23 20:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "A cleartext transmission of sensitive information vulnerability exists in curl <v7.88.0 that could cause HSTS functionality fail when multiple URLs are requested serially. Using its HSTS support, curl can be instructed to use HTTPS instead of usingan insecure clear-text HTTP step even when HTTP is provided in the URL. ThisHSTS mechanism would however surprisingly be ignored by subsequent transferswhen done on the same command line because the state would not be properlycarried on.",
      "published_date": "2023-02-23 20:15:13.637+00:00"
    },
    {
      "cve_id": "CVE-2022-43552",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
      "public_date": "2023-02-09 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
      "published_date": "2023-02-09 20:15:10.95+00:00"
    },
    {
      "cve_id": "CVE-2022-43551",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "public_date": "2022-12-23 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "published_date": "2022-12-23 15:15:15.777+00:00"
    },
    {
      "cve_id": "CVE-2022-42916",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
      "public_date": "2022-10-29 02:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In curl before 7.86.0, the HSTS check could be bypassed to trick it into staying with HTTP. Using its HSTS support, curl can be instructed to use HTTPS directly (instead of using an insecure cleartext HTTP step) even when HTTP is provided in the URL. This mechanism could be bypassed if the host name in the given URL uses IDN characters that get replaced with ASCII counterparts as part of the IDN conversion, e.g., using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop of U+002E (.). The earliest affected version is 7.77.0 2021-05-26.",
      "published_date": "2022-10-29 02:15:09.047+00:00"
    },
    {
      "cve_id": "CVE-2022-42915",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
      "public_date": "2022-10-29 20:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "curl before 7.86.0 has a double free. If curl is told to use an HTTP proxy for a transfer with a non-HTTP(S) URL, it sets up the connection to the remote server by issuing a CONNECT request to the proxy, and then tunnels the rest of the protocol through. An HTTP proxy might refuse this request (HTTP proxies often only allow outgoing connections to specific port numbers, like 443 for HTTPS) and instead return a non-200 status code to the client. Due to flaws in the error/cleanup handling, this could trigger a double free in curl if one of the following schemes were used in the URL for the transfer: dict, gopher, gophers, ldap, ldaps, rtmp, rtmps, or telnet. The earliest affected version is 7.77.0.",
      "published_date": "2022-10-29 20:15:09.7+00:00"
    },
    {
      "cve_id": "CVE-2022-35260",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
      "public_date": "2022-12-05 22:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service.",
      "published_date": "2022-12-05 22:15:10.743+00:00"
    },
    {
      "cve_id": "CVE-2022-35252",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
      "public_date": "2022-09-23 14:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
      "published_date": "2022-09-23 14:15:12.323+00:00"
    },
    {
      "cve_id": "CVE-2022-32221",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
      "public_date": "2022-12-05 22:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
      "published_date": "2022-12-05 22:15:10.343+00:00"
    },
    {
      "cve_id": "CVE-2022-32208",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
      "public_date": "2022-07-07 13:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
      "published_date": "2022-07-07 13:15:08.467+00:00"
    },
    {
      "cve_id": "CVE-2022-32207",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl < 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
      "public_date": "2022-07-07 13:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "When curl < 7.84.0 saves cookies, alt-svc and hsts data to local files, it makes the operation atomic by finalizing the operation with a rename from a temporary name to the final target file name.In that rename operation, it might accidentally *widen* the permissions for the target file, leaving the updated file accessible to more users than intended.",
      "published_date": "2022-07-07 13:15:08.403+00:00"
    },
    {
      "cve_id": "CVE-2022-32206",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
      "public_date": "2022-07-07 13:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
      "published_date": "2022-07-07 13:15:08.34+00:00"
    },
    {
      "cve_id": "CVE-2022-32205",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl < 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
      "public_date": "2022-07-07 13:15:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "A malicious server can serve excessive amounts of `Set-Cookie:` headers in a HTTP response to curl and curl < 7.84.0 stores all of them. A sufficiently large amount of (big) cookies make subsequent HTTP requests to this, or other servers to which the cookies match, create requests that become larger than the threshold that curl uses internally to avoid sending crazy large requests (1048576 bytes) and instead returns an error.This denial state might remain for as long as the same cookies are kept, match and haven't expired. Due to cookie matching rules, a server on `foo.example.com` can set cookies that also would match for `bar.example.com`, making it it possible for a \"sister server\" to effectively cause a denial of service for a sibling site on the same second level domain using this method.",
      "published_date": "2022-07-07 13:15:08.277+00:00"
    },
    {
      "cve_id": "CVE-2022-30115",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "Using its HSTS support, curl can be instructed to use HTTPS directly insteadof using an insecure clear-text HTTP step even when HTTP is provided in theURL. This mechanism could be bypassed if the host name in the given URL used atrailing dot while not using one when it built the HSTS cache. Or the otherway around - by having the trailing dot in the HSTS cache and *not* using thetrailing dot in the URL.",
      "published_date": "2022-06-02 14:15:51.507+00:00"
    },
    {
      "cve_id": "CVE-2022-27782",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
      "published_date": "2022-06-02 14:15:44.663+00:00"
    },
    {
      "cve_id": "CVE-2022-27781",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
      "published_date": "2022-06-02 14:15:44.467+00:00"
    },
    {
      "cve_id": "CVE-2022-27780",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The curl URL parser wrongly accepts percent-encoded URL separators like '/'when decoding the host name part of a URL, making it a *different* URL usingthe wrong host name when it is later retrieved.For example, a URL like `http://example.com%2F127.0.0.1/`, would be allowed bythe parser and get transposed into `http://example.com/127.0.0.1/`. This flawcan be used to circumvent filters, checks and more.",
      "published_date": "2022-06-02 14:15:44.267+00:00"
    },
    {
      "cve_id": "CVE-2022-27779",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "libcurl wrongly allows cookies to be set for Top Level Domains (TLDs) if thehost name is provided with a trailing dot.curl can be told to receive and send cookies. curl's \"cookie engine\" can bebuilt with or without [Public Suffix List](https://publicsuffix.org/)awareness. If PSL support not provided, a more rudimentary check exists to atleast prevent cookies from being set on TLDs. This check was broken if thehost name in the URL uses a trailing dot.This can allow arbitrary sites to set cookies that then would get sent to adifferent and unrelated site or domain.",
      "published_date": "2022-06-02 14:15:44.093+00:00"
    },
    {
      "cve_id": "CVE-2022-27778",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A use of incorrectly resolved name vulnerability fixed in 7.83.1 might remove the wrong file when `--no-clobber` is used together with `--remove-on-error`.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "A use of incorrectly resolved name vulnerability fixed in 7.83.1 might remove the wrong file when `--no-clobber` is used together with `--remove-on-error`.",
      "published_date": "2022-06-02 14:15:43.903+00:00"
    },
    {
      "cve_id": "CVE-2022-27776",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
      "published_date": "2022-06-02 14:15:43.713+00:00"
    },
    {
      "cve_id": "CVE-2022-27775",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An information disclosure vulnerability exists in curl 7.65.0 to 7.82.0 are vulnerable that by using an IPv6 address that was in the connection pool but with a different zone id it could reuse a connection instead.",
      "published_date": "2022-06-02 14:15:43.51+00:00"
    },
    {
      "cve_id": "CVE-2022-27774",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
      "public_date": "2022-06-02 14:15:00+00:00",
      "cvss_score": 5.7,
      "severity": "MEDIUM",
      "summary": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
      "published_date": "2022-06-02 14:15:43.317+00:00"
    },
    {
      "cve_id": "CVE-2022-22576",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
      "public_date": "2022-05-26 17:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
      "published_date": "2022-05-26 17:15:09.077+00:00"
    },
    {
      "cve_id": "CVE-2021-22947",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
      "public_date": "2021-09-29 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
      "published_date": "2021-09-29 20:15:08.253+00:00"
    },
    {
      "cve_id": "CVE-2021-22946",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
      "public_date": "2021-09-29 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
      "published_date": "2021-09-29 20:15:08.187+00:00"
    },
    {
      "cve_id": "CVE-2021-22945",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When sending data to an MQTT server, libcurl <= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
      "public_date": "2021-09-23 13:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "When sending data to an MQTT server, libcurl <= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
      "published_date": "2021-09-23 13:15:08.69+00:00"
    },
    {
      "cve_id": "CVE-2021-22926",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
      "public_date": "2021-08-05 21:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
      "published_date": "2021-08-05 21:15:11.553+00:00"
    },
    {
      "cve_id": "CVE-2021-22925",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
      "public_date": "2021-08-05 21:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
      "published_date": "2021-08-05 21:15:11.467+00:00"
    },
    {
      "cve_id": "CVE-2021-22924",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
      "public_date": "2021-08-05 21:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
      "published_date": "2021-08-05 21:15:11.38+00:00"
    },
    {
      "cve_id": "CVE-2021-22923",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "public_date": "2021-08-05 21:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "published_date": "2021-08-05 21:15:11.293+00:00"
    },
    {
      "cve_id": "CVE-2021-22922",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "public_date": "2021-08-05 21:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "published_date": "2021-08-05 21:15:11.173+00:00"
    },
    {
      "cve_id": "CVE-2021-22901",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
      "public_date": "2021-06-11 16:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
      "published_date": "2021-06-11 16:15:11.12+00:00"
    },
    {
      "cve_id": "CVE-2021-22898",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
      "public_date": "2021-06-11 16:15:00+00:00",
      "cvss_score": 3.1,
      "severity": "LOW",
      "summary": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
      "published_date": "2021-06-11 16:15:11.043+00:00"
    },
    {
      "cve_id": "CVE-2021-22897",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
      "public_date": "2021-06-11 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
      "published_date": "2021-06-11 16:15:10.963+00:00"
    },
    {
      "cve_id": "CVE-2021-22890",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
      "public_date": "2021-04-01 18:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "curl 7.63.0 to and including 7.75.0 includes vulnerability that allows a malicious HTTPS proxy to MITM a connection due to bad handling of TLS 1.3 session tickets. When using a HTTPS proxy and TLS 1.3, libcurl can confuse session tickets arriving from the HTTPS proxy but work as if they arrived from the remote server and then wrongly \"short-cut\" the host handshake. When confusing the tickets, a HTTPS proxy can trick libcurl to use the wrong session ticket resume for the host and thereby circumvent the server TLS certificate check and make a MITM attack to be possible to perform unnoticed. Note that such a malicious HTTPS proxy needs to provide a certificate that curl will accept for the MITMed server for an attack to work - unless curl has been told to ignore the server certificate check.",
      "published_date": "2021-04-01 18:15:12.917+00:00"
    },
    {
      "cve_id": "CVE-2021-22876",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
      "public_date": "2021-04-01 18:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
      "published_date": "2021-04-01 18:15:12.823+00:00"
    },
    {
      "cve_id": "CVE-2020-8286",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
      "public_date": "2020-12-14 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
      "published_date": "2020-12-14 20:15:14.043+00:00"
    },
    {
      "cve_id": "CVE-2020-8285",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
      "public_date": "2020-12-14 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
      "published_date": "2020-12-14 20:15:13.983+00:00"
    },
    {
      "cve_id": "CVE-2020-8284",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
      "public_date": "2020-12-14 20:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
      "published_date": "2020-12-14 20:15:13.903+00:00"
    },
    {
      "cve_id": "CVE-2020-8231",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
      "public_date": "2020-12-14 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
      "published_date": "2020-12-14 20:15:13.59+00:00"
    },
    {
      "cve_id": "CVE-2020-8177",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
      "public_date": "2020-12-14 20:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
      "published_date": "2020-12-14 20:15:13.497+00:00"
    },
    {
      "cve_id": "CVE-2020-8169",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
      "public_date": "2020-12-14 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
      "published_date": "2020-12-14 20:15:13.357+00:00"
    },
    {
      "cve_id": "CVE-2020-19909",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
      "published_date": "2023-08-22 19:16:06.48+00:00"
    },
    {
      "cve_id": "CVE-2019-5482",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Heap buffer overflow in the TFTP protocol handler in cURL 7.19.4 to 7.65.3.",
      "public_date": "2019-09-16 19:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Heap buffer overflow in the TFTP protocol handler in cURL 7.19.4 to 7.65.3.",
      "published_date": "2019-09-16 19:15:10.633+00:00"
    },
    {
      "cve_id": "CVE-2019-5481",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Double-free vulnerability in the FTP-kerberos code in cURL 7.52.0 to 7.65.3.",
      "public_date": "2019-09-16 19:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Double-free vulnerability in the FTP-kerberos code in cURL 7.52.0 to 7.65.3.",
      "published_date": "2019-09-16 19:15:10.587+00:00"
    },
    {
      "cve_id": "CVE-2019-5443",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A non-privileged user or program can put code and a config file in a known non-privileged path (under C:/usr/local/) that will make curl <= 7.65.1 automatically run the code (as an openssl \"engine\") on invocation. If that curl is invoked by a privileged user it can do anything it wants.",
      "public_date": "2019-07-02 19:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A non-privileged user or program can put code and a config file in a known non-privileged path (under C:/usr/local/) that will make curl <= 7.65.1 automatically run the code (as an openssl \"engine\") on invocation. If that curl is invoked by a privileged user it can do anything it wants.",
      "published_date": "2019-07-02 19:15:10.79+00:00"
    },
    {
      "cve_id": "CVE-2019-5436",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A heap buffer overflow in the TFTP receiving code allows for DoS or arbitrary code execution in libcurl versions 7.19.4 through 7.64.1.",
      "public_date": "2019-05-28 19:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A heap buffer overflow in the TFTP receiving code allows for DoS or arbitrary code execution in libcurl versions 7.19.4 through 7.64.1.",
      "published_date": "2019-05-28 19:29:06.127+00:00"
    },
    {
      "cve_id": "CVE-2019-5435",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
      "public_date": "2019-05-28 19:29:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
      "published_date": "2019-05-28 19:29:06.08+00:00"
    },
    {
      "cve_id": "CVE-2019-3823",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "libcurl versions from 7.34.0 to before 7.64.0 are vulnerable to a heap out-of-bounds read in the code handling the end-of-response for SMTP. If the buffer passed to `smtp_endofresp()` isn't NUL terminated and contains no character ending the parsed number, and `len` is set to 5, then the `strtol()` call reads beyond the allocated buffer. The read contents will not be returned to the caller.",
      "public_date": "2019-02-06 20:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "libcurl versions from 7.34.0 to before 7.64.0 are vulnerable to a heap out-of-bounds read in the code handling the end-of-response for SMTP. If the buffer passed to `smtp_endofresp()` isn't NUL terminated and contains no character ending the parsed number, and `len` is set to 5, then the `strtol()` call reads beyond the allocated buffer. The read contents will not be returned to the caller.",
      "published_date": "2019-02-06 20:29:00.4+00:00"
    },
    {
      "cve_id": "CVE-2019-3822",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl versions from 7.36.0 to before 7.64.0 are vulnerable to a stack-based buffer overflow. The function creating an outgoing NTLM type-3 header (`lib/vauth/ntlm.c:Curl_auth_create_ntlm_type3_message()`), generates the request HTTP header contents based on previously received data. The check that exists to prevent the local buffer from getting overflowed is implemented wrongly (using unsigned math) and as such it does not prevent the overflow from happening. This output data can grow larger than the local buffer if very large 'nt response' data is extracted from a previous NTLMv2 header provided by the malicious or broken HTTP server. Such a 'large value' needs to be around 1000 bytes or more. The actual payload data copied to the target buffer comes from the NTLMv2 type-2 response header.",
      "public_date": "2019-02-06 20:29:00+00:00",
      "cvss_score": 7.1,
      "severity": "HIGH",
      "summary": "libcurl versions from 7.36.0 to before 7.64.0 are vulnerable to a stack-based buffer overflow. The function creating an outgoing NTLM type-3 header (`lib/vauth/ntlm.c:Curl_auth_create_ntlm_type3_message()`), generates the request HTTP header contents based on previously received data. The check that exists to prevent the local buffer from getting overflowed is implemented wrongly (using unsigned math) and as such it does not prevent the overflow from happening. This output data can grow larger than the local buffer if very large 'nt response' data is extracted from a previous NTLMv2 header provided by the malicious or broken HTTP server. Such a 'large value' needs to be around 1000 bytes or more. The actual payload data copied to the target buffer comes from the NTLMv2 type-2 response header.",
      "published_date": "2019-02-06 20:29:00.353+00:00"
    },
    {
      "cve_id": "CVE-2018-16890",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl versions from 7.36.0 to before 7.64.0 is vulnerable to a heap buffer out-of-bounds read. The function handling incoming NTLM type-2 messages (`lib/vauth/ntlm.c:ntlm_decode_type2_target`) does not validate incoming data correctly and is subject to an integer overflow vulnerability. Using that overflow, a malicious or broken NTLM server could trick libcurl to accept a bad length + offset combination that would lead to a buffer read out-of-bounds.",
      "public_date": "2019-02-06 20:29:00+00:00",
      "cvss_score": 5.4,
      "severity": "MEDIUM",
      "summary": "libcurl versions from 7.36.0 to before 7.64.0 is vulnerable to a heap buffer out-of-bounds read. The function handling incoming NTLM type-2 messages (`lib/vauth/ntlm.c:ntlm_decode_type2_target`) does not validate incoming data correctly and is subject to an integer overflow vulnerability. Using that overflow, a malicious or broken NTLM server could trick libcurl to accept a bad length + offset combination that would lead to a buffer read out-of-bounds.",
      "published_date": "2019-02-06 20:29:00.243+00:00"
    },
    {
      "cve_id": "CVE-2018-16842",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Curl versions 7.14.1 through 7.61.1 are vulnerable to a heap-based buffer over-read in the tool_msgs.c:voutf() function that may result in information exposure and denial of service.",
      "public_date": "2018-10-31 19:29:00+00:00",
      "cvss_score": 4.4,
      "severity": "MEDIUM",
      "summary": "Curl versions 7.14.1 through 7.61.1 are vulnerable to a heap-based buffer over-read in the tool_msgs.c:voutf() function that may result in information exposure and denial of service.",
      "published_date": "2018-10-31 19:29:00.69+00:00"
    },
    {
      "cve_id": "CVE-2018-16840",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A heap use-after-free flaw was found in curl versions from 7.59.0 through 7.61.1 in the code related to closing an easy handle. When closing and cleaning up an 'easy' handle in the `Curl_close()` function, the library code first frees a struct (without nulling the pointer) and might then subsequently erroneously write to a struct field within that already freed struct.",
      "public_date": "2018-10-31 18:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "A heap use-after-free flaw was found in curl versions from 7.59.0 through 7.61.1 in the code related to closing an easy handle. When closing and cleaning up an 'easy' handle in the `Curl_close()` function, the library code first frees a struct (without nulling the pointer) and might then subsequently erroneously write to a struct field within that already freed struct.",
      "published_date": "2018-10-31 18:29:00.307+00:00"
    },
    {
      "cve_id": "CVE-2018-16839",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Curl versions 7.33.0 through 7.61.1 are vulnerable to a buffer overrun in the SASL authentication code that may lead to denial of service.",
      "public_date": "2018-10-31 18:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "Curl versions 7.33.0 through 7.61.1 are vulnerable to a buffer overrun in the SASL authentication code that may lead to denial of service.",
      "published_date": "2018-10-31 18:29:00.23+00:00"
    },
    {
      "cve_id": "CVE-2018-14618",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl before version 7.61.1 is vulnerable to a buffer overrun in the NTLM authentication code. The internal function Curl_ntlm_core_mk_nt_hash multiplies the length of the password by two (SUM) to figure out how large temporary storage area to allocate from the heap. The length value is then subsequently used to iterate over the password and generate output into the allocated storage buffer. On systems with a 32 bit size_t, the math to calculate SUM triggers an integer overflow when the password length exceeds 2GB (2^31 bytes). This integer overflow usually causes a very small buffer to actually get allocated instead of the intended very huge one, making the use of that buffer end up in a heap buffer overflow. (This bug is almost identical to CVE-2017-8816.)",
      "public_date": "2018-09-05 19:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "curl before version 7.61.1 is vulnerable to a buffer overrun in the NTLM authentication code. The internal function Curl_ntlm_core_mk_nt_hash multiplies the length of the password by two (SUM) to figure out how large temporary storage area to allocate from the heap. The length value is then subsequently used to iterate over the password and generate output into the allocated storage buffer. On systems with a 32 bit size_t, the math to calculate SUM triggers an integer overflow when the password length exceeds 2GB (2^31 bytes). This integer overflow usually causes a very small buffer to actually get allocated instead of the intended very huge one, making the use of that buffer end up in a heap buffer overflow. (This bug is almost identical to CVE-2017-8816.)",
      "published_date": "2018-09-05 19:29:00.42+00:00"
    },
    {
      "cve_id": "CVE-2018-1000301",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl version curl 7.20.0 to and including curl 7.59.0 contains a CWE-126: Buffer Over-read vulnerability in denial of service that can result in curl can be tricked into reading data beyond the end of a heap based buffer used to store downloaded RTSP content.. This vulnerability appears to have been fixed in curl < 7.20.0 and curl >= 7.60.0.",
      "public_date": "2018-05-24 13:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "curl version curl 7.20.0 to and including curl 7.59.0 contains a CWE-126: Buffer Over-read vulnerability in denial of service that can result in curl can be tricked into reading data beyond the end of a heap based buffer used to store downloaded RTSP content.. This vulnerability appears to have been fixed in curl < 7.20.0 and curl >= 7.60.0.",
      "published_date": "2018-05-24 13:29:01.383+00:00"
    },
    {
      "cve_id": "CVE-2018-1000300",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "curl version curl 7.54.1 to and including curl 7.59.0 contains a CWE-122: Heap-based Buffer Overflow vulnerability in denial of service and more that can result in curl might overflow a heap based memory buffer when closing down an FTP connection with very long server command replies.. This vulnerability appears to have been fixed in curl < 7.54.1 and curl >= 7.60.0.",
      "public_date": "2018-05-24 13:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "curl version curl 7.54.1 to and including curl 7.59.0 contains a CWE-122: Heap-based Buffer Overflow vulnerability in denial of service and more that can result in curl might overflow a heap based memory buffer when closing down an FTP connection with very long server command replies.. This vulnerability appears to have been fixed in curl < 7.54.1 and curl >= 7.60.0.",
      "published_date": "2018-05-24 13:29:01.337+00:00"
    },
    {
      "cve_id": "CVE-2018-1000122",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A buffer over-read exists in curl 7.20.0 to and including curl 7.58.0 in the RTSP+RTP handling code that allows an attacker to cause a denial of service or information leakage",
      "public_date": "2018-03-14 18:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "A buffer over-read exists in curl 7.20.0 to and including curl 7.58.0 in the RTSP+RTP handling code that allows an attacker to cause a denial of service or information leakage",
      "published_date": "2018-03-14 18:29:00.373+00:00"
    },
    {
      "cve_id": "CVE-2018-1000121",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A NULL pointer dereference exists in curl 7.21.0 to and including curl 7.58.0 in the LDAP code that allows an attacker to cause a denial of service",
      "public_date": "2018-03-14 18:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A NULL pointer dereference exists in curl 7.21.0 to and including curl 7.58.0 in the LDAP code that allows an attacker to cause a denial of service",
      "published_date": "2018-03-14 18:29:00.327+00:00"
    },
    {
      "cve_id": "CVE-2018-1000120",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A buffer overflow exists in curl 7.12.3 to and including curl 7.58.0 in the FTP URL handling that allows an attacker to cause a denial of service or worse.",
      "public_date": "2018-03-14 18:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "A buffer overflow exists in curl 7.12.3 to and including curl 7.58.0 in the FTP URL handling that allows an attacker to cause a denial of service or worse.",
      "published_date": "2018-03-14 18:29:00.233+00:00"
    },
    {
      "cve_id": "CVE-2018-1000007",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl 7.1 through 7.57.0 might accidentally leak authentication data to third parties. When asked to send custom headers in its HTTP requests, libcurl will send that set of headers first to the host in the initial URL but also, if asked to follow redirects and a 30X HTTP response code is returned, to the host mentioned in URL in the `Location:` response header value. Sending the same set of headers to subsequent hosts is in particular a problem for applications that pass on custom `Authorization:` headers, as this header often contains privacy sensitive information or data that could allow others to impersonate the libcurl-using client's request.",
      "public_date": "2018-01-24 22:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "libcurl 7.1 through 7.57.0 might accidentally leak authentication data to third parties. When asked to send custom headers in its HTTP requests, libcurl will send that set of headers first to the host in the initial URL but also, if asked to follow redirects and a 30X HTTP response code is returned, to the host mentioned in URL in the `Location:` response header value. Sending the same set of headers to subsequent hosts is in particular a problem for applications that pass on custom `Authorization:` headers, as this header often contains privacy sensitive information or data that could allow others to impersonate the libcurl-using client's request.",
      "published_date": "2018-01-24 22:29:00.353+00:00"
    },
    {
      "cve_id": "CVE-2018-1000005",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
      "public_date": "2018-01-24 22:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
      "published_date": "2018-01-24 22:29:00.307+00:00"
    },
    {
      "cve_id": "CVE-2018-0500",
      "source": "GOST",
      "affected_package": "curl",
      "installed_version": "7.47.0-1ubuntu2.19",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Curl_smtp_escape_eob in lib/smtp.c in curl 7.54.1 to and including curl 7.60.0 has a heap-based buffer overflow that might be exploitable by an attacker who can control the data that curl transmits over SMTP with certain settings (i.e., use of a nonstandard --limit-rate argument or CURLOPT_BUFFERSIZE value).",
      "public_date": "2018-07-11 13:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Curl_smtp_escape_eob in lib/smtp.c in curl 7.54.1 to and including curl 7.60.0 has a heap-based buffer overflow that might be exploitable by an attacker who can control the data that curl transmits over SMTP with certain settings (i.e., use of a nonstandard --limit-rate argument or CURLOPT_BUFFERSIZE value).",
      "published_date": "2018-07-11 13:29:00.317+00:00"
    },
    {
      "cve_id": "CVE-2024-52006",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. Git defines a line-based protocol that is used to exchange information between Git and Git credential helpers. Some ecosystems (most notably, .NET and node.js) interpret single Carriage Return characters as newlines, which renders the protections against CVE-2020-5260 incomplete for credential helpers that treat Carriage Returns in this way. This issue has been addressed in commit `b01b9b8` which is included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
      "public_date": "2025-01-14 19:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. Git defines a line-based protocol that is used to exchange information between Git and Git credential helpers. Some ecosystems (most notably, .NET and node.js) interpret single Carriage Return characters as newlines, which renders the protections against CVE-2020-5260 incomplete for credential helpers that treat Carriage Returns in this way. This issue has been addressed in commit `b01b9b8` which is included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
      "published_date": "2025-01-14 19:15:32.33+00:00"
    },
    {
      "cve_id": "CVE-2024-52005",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a source code management tool. When cloning from a server (or fetching, or pushing), informational or error messages are transported from the remote Git process to the client via the so-called \"sideband channel\". These messages will be prefixed with \"remote:\" and printed directly to the standard error output. Typically, this standard error output is connected to a terminal that understands ANSI escape sequences, which Git did not protect against. Most modern terminals support control sequences that can be used by a malicious actor to hide and misrepresent information, or to mislead the user into executing untrusted scripts. As requested on the git-security mailing list, the patches are under discussion on the public mailing list. Users are advised to update as soon as possible. Users unable to upgrade should avoid recursive clones unless they are from trusted sources.",
      "public_date": "2025-01-15 18:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "Git is a source code management tool. When cloning from a server (or fetching, or pushing), informational or error messages are transported from the remote Git process to the client via the so-called \"sideband channel\". These messages will be prefixed with \"remote:\" and printed directly to the standard error output. Typically, this standard error output is connected to a terminal that understands ANSI escape sequences, which Git did not protect against. Most modern terminals support control sequences that can be used by a malicious actor to hide and misrepresent information, or to mislead the user into executing untrusted scripts. As requested on the git-security mailing list, the patches are under discussion on the public mailing list. Users are advised to update as soon as possible. Users unable to upgrade should avoid recursive clones unless they are from trusted sources.",
      "published_date": "2025-01-15 18:15:24.13+00:00"
    },
    {
      "cve_id": "CVE-2024-50349",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When Git asks for credentials via a terminal prompt (i.e. without using any credential helper), it prints out the host name for which the user is expected to provide a username and/or a password. At this stage, any URL-encoded parts have been decoded already, and are printed verbatim. This allows attackers to craft URLs that contain ANSI escape sequences that the terminal interpret to confuse users e.g. into providing passwords for trusted Git hosting sites when in fact they are then sent to untrusted sites that are under the attacker's control. This issue has been patch via commits `7725b81` and `c903985` which are included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
      "public_date": "2025-01-14 19:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When Git asks for credentials via a terminal prompt (i.e. without using any credential helper), it prints out the host name for which the user is expected to provide a username and/or a password. At this stage, any URL-encoded parts have been decoded already, and are printed verbatim. This allows attackers to craft URLs that contain ANSI escape sequences that the terminal interpret to confuse users e.g. into providing passwords for trusted Git hosting sites when in fact they are then sent to untrusted sites that are under the attacker's control. This issue has been patch via commits `7725b81` and `c903985` which are included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
      "published_date": "2025-01-14 19:15:32.157+00:00"
    },
    {
      "cve_id": "CVE-2024-32465",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
      "public_date": "2024-05-14 20:15:00+00:00",
      "cvss_score": 7.3,
      "severity": "HIGH",
      "summary": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
      "published_date": "2024-05-14 20:15:14.54+00:00"
    },
    {
      "cve_id": "CVE-2024-32021",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning will be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "public_date": "2024-05-14 20:15:00+00:00",
      "cvss_score": 3.9,
      "severity": "LOW",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "published_date": "2024-05-14 20:15:13.63+00:00"
    },
    {
      "cve_id": "CVE-2024-32020",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "public_date": "2024-05-14 19:15:00+00:00",
      "cvss_score": 3.9,
      "severity": "LOW",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "published_date": "2024-05-14 19:15:12.24+00:00"
    },
    {
      "cve_id": "CVE-2024-32004",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
      "public_date": "2024-05-14 19:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
      "published_date": "2024-05-14 19:15:11.377+00:00"
    },
    {
      "cve_id": "CVE-2024-32002",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
      "public_date": "2024-05-14 19:15:00+00:00",
      "cvss_score": 9.0,
      "severity": "CRITICAL",
      "summary": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
      "published_date": "2024-05-14 19:15:10.81+00:00"
    },
    {
      "cve_id": "CVE-2023-29007",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.",
      "public_date": "2023-04-25 21:15:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.",
      "published_date": "2023-04-25 21:15:10.403+00:00"
    },
    {
      "cve_id": "CVE-2023-25815",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Git for Windows, the Windows port of Git, no localized messages are shipped with the installer. As a consequence, Git is expected not to localize messages at all, and skips the gettext initialization. However, due to a change in MINGW-packages, the `gettext()` function's implicit initialization no longer uses the runtime prefix but uses the hard-coded path `C:\\mingw64\\share\\locale` to look for localized messages. And since any authenticated user has the permission to create folders in `C:\\` (and since `C:\\mingw64` does not typically exist), it is possible for low-privilege users to place fake messages in that location where `git.exe` will pick them up in version 2.40.1. This vulnerability is relatively hard to exploit and requires social engineering. For example, a legitimate message at the end of a clone could be maliciously modified to ask the user to direct their web browser to a malicious website, and the user might think that the message comes from Git and is legitimate. It does require local write access by the attacker, though, which makes this attack vector less likely. Version 2.40.1 contains a patch for this issue. Some workarounds are available. Do not work on a Windows machine with shared accounts, or alternatively create a `C:\\mingw64` folder and leave it empty. Users who have administrative rights may remove the permission to create folders in `C:\\`.",
      "public_date": "2023-04-25 20:15:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "In Git for Windows, the Windows port of Git, no localized messages are shipped with the installer. As a consequence, Git is expected not to localize messages at all, and skips the gettext initialization. However, due to a change in MINGW-packages, the `gettext()` function's implicit initialization no longer uses the runtime prefix but uses the hard-coded path `C:\\mingw64\\share\\locale` to look for localized messages. And since any authenticated user has the permission to create folders in `C:\\` (and since `C:\\mingw64` does not typically exist), it is possible for low-privilege users to place fake messages in that location where `git.exe` will pick them up in version 2.40.1.\n\nThis vulnerability is relatively hard to exploit and requires social engineering. For example, a legitimate message at the end of a clone could be maliciously modified to ask the user to direct their web browser to a malicious website, and the user might think that the message comes from Git and is legitimate. It does require local write access by the attacker, though, which makes this attack vector less likely. Version 2.40.1 contains a patch for this issue. Some workarounds are available. Do not work on a Windows machine with shared accounts, or alternatively create a `C:\\mingw64` folder and leave it empty. Users who have administrative rights may remove the permission to create folders in `C:\\`.",
      "published_date": "2023-04-25 20:15:09.997+00:00"
    },
    {
      "cve_id": "CVE-2023-25652",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.",
      "public_date": "2023-04-25 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.",
      "published_date": "2023-04-25 20:15:09.933+00:00"
    },
    {
      "cve_id": "CVE-2023-23946",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
      "public_date": "2023-02-14 20:15:00+00:00",
      "cvss_score": 6.2,
      "severity": "MEDIUM",
      "summary": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
      "published_date": "2023-02-14 20:15:17.457+00:00"
    },
    {
      "cve_id": "CVE-2023-22490",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253. A fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
      "public_date": "2023-02-14 20:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.\n\nA fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
      "published_date": "2023-02-14 20:15:16.683+00:00"
    },
    {
      "cve_id": "CVE-2022-41953",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git GUI is a convenient graphical tool that comes with Git for Windows. Its target audience is users who are uncomfortable with using Git on the command-line. Git GUI has a function to clone repositories. Immediately after the local clone is available, Git GUI will automatically post-process it, among other things running a spell checker called `aspell.exe` if it was found. Git GUI is implemented as a Tcl/Tk script. Due to the unfortunate design of Tcl on Windows, the search path when looking for an executable _always includes the current directory_. Therefore, malicious repositories can ship with an `aspell.exe` in their top-level directory which is executed by Git GUI without giving the user a chance to inspect it first, i.e. running untrusted code. This issue has been addressed in version 2.39.1. Users are advised to upgrade. Users unable to upgrade should avoid using Git GUI for cloning. If that is not a viable option, at least avoid cloning from untrusted sources.",
      "public_date": "2023-01-17 22:15:00+00:00",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "Git GUI is a convenient graphical tool that comes with Git for Windows. Its target audience is users who are uncomfortable with using Git on the command-line. Git GUI has a function to clone repositories. Immediately after the local clone is available, Git GUI will automatically post-process it, among other things running a spell checker called `aspell.exe` if it was found. Git GUI is implemented as a Tcl/Tk script. Due to the unfortunate design of Tcl on Windows, the search path when looking for an executable _always includes the current directory_. Therefore, malicious repositories can ship with an `aspell.exe` in their top-level directory which is executed by Git GUI without giving the user a chance to inspect it first, i.e. running untrusted code. This issue has been addressed in version 2.39.1. Users are advised to upgrade. Users unable to upgrade should avoid using Git GUI for cloning. If that is not a viable option, at least avoid cloning from untrusted sources.",
      "published_date": "2023-01-17 22:15:10.747+00:00"
    },
    {
      "cve_id": "CVE-2022-41903",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
      "public_date": "2023-01-17 23:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
      "published_date": "2023-01-17 23:15:15.69+00:00"
    },
    {
      "cve_id": "CVE-2022-39260",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
      "public_date": "2022-10-19 12:15:00+00:00",
      "cvss_score": 8.5,
      "severity": "HIGH",
      "summary": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
      "published_date": "2022-10-19 12:15:10.16+00:00"
    },
    {
      "cve_id": "CVE-2022-39253",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
      "public_date": "2022-10-19 11:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
      "published_date": "2022-10-19 11:15:11.227+00:00"
    },
    {
      "cve_id": "CVE-2022-29187",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
      "public_date": "2022-07-12 21:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Git is a distributed revision control system. Git prior to versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5, is vulnerable to privilege escalation in all platforms. An unsuspecting user could still be affected by the issue reported in CVE-2022-24765, for example when navigating as root into a shared tmp directory that is owned by them, but where an attacker could create a git repository. Versions 2.37.1, 2.36.2, 2.35.4, 2.34.4, 2.33.4, 2.32.3, 2.31.4, and 2.30.5 contain a patch for this issue. The simplest way to avoid being affected by the exploit described in the example is to avoid running git as root (or an Administrator in Windows), and if needed to reduce its use to a minimum. While a generic workaround is not possible, a system could be hardened from the exploit described in the example by removing any such repository if it exists already and creating one as root to block any future attacks.",
      "published_date": "2022-07-12 21:15:09.56+00:00"
    },
    {
      "cve_id": "CVE-2022-24975",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "** DISPUTED ** The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option. Note: This has been disputed by multiple 3rd parties who believe this is an intended feature of the git binary and does not pose a security risk.",
      "public_date": "2022-02-11 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option. Note: This has been disputed by multiple 3rd parties who believe this is an intended feature of the git binary and does not pose a security risk.",
      "published_date": "2022-02-11 20:15:07.507+00:00"
    },
    {
      "cve_id": "CVE-2022-24765",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
      "public_date": "2022-04-12 18:15:00+00:00",
      "cvss_score": 6.0,
      "severity": "MEDIUM",
      "summary": "Git for Windows is a fork of Git containing Windows-specific patches. This vulnerability affects users working on multi-user machines, where untrusted parties have write access to the same hard disk. Those untrusted parties could create the folder `C:\\.git`, which would be picked up by Git operations run supposedly outside a repository while searching for a Git directory. Git would then respect any config in said Git directory. Git Bash users who set `GIT_PS1_SHOWDIRTYSTATE` are vulnerable as well. Users who installed posh-gitare vulnerable simply by starting a PowerShell. Users of IDEs such as Visual Studio are vulnerable: simply creating a new project would already read and respect the config specified in `C:\\.git\\config`. Users of the Microsoft fork of Git are vulnerable simply by starting a Git Bash. The problem has been patched in Git for Windows v2.35.2. Users unable to upgrade may create the folder `.git` on all drives where Git commands are run, and remove read/write access from those folders as a workaround. Alternatively, define or extend `GIT_CEILING_DIRECTORIES` to cover the _parent_ directory of the user profile, e.g. `C:\\Users` if the user profile is located in `C:\\Users\\my-user-name`.",
      "published_date": "2022-04-12 18:15:09.39+00:00"
    },
    {
      "cve_id": "CVE-2022-23521",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
      "public_date": "2023-01-17 23:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
      "published_date": "2023-01-17 23:15:15.58+00:00"
    },
    {
      "cve_id": "CVE-2021-41959",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "JerryScript Git version 14ff5bf does not sufficiently track and release allocated memory via jerry-core/ecma/operations/ecma-regexp-object.c after RegExp, which causes a memory leak.",
      "public_date": "2022-05-03 11:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "JerryScript Git version 14ff5bf does not sufficiently track and release allocated memory via jerry-core/ecma/operations/ecma-regexp-object.c after RegExp, which causes a memory leak.",
      "published_date": "2022-05-03 11:15:07.13+00:00"
    },
    {
      "cve_id": "CVE-2021-40330",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
      "public_date": "2021-08-31 04:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
      "published_date": "2021-08-31 04:15:10.667+00:00"
    },
    {
      "cve_id": "CVE-2021-23632",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "All versions of package git are vulnerable to Remote Code Execution (RCE) due to missing sanitization in the Git.git method, which allows execution of OS commands rather than just git commands. Steps to Reproduce 1. Create a file named exploit.js with the following content: js var Git = require(\"git\").Git; var repo = new Git(\"repo-test\"); var user_input = \"version; date\"; repo.git(user_input, function(err, result) { console.log(result); }) 2. In the same directory as exploit.js, run npm install git. 3. Run exploit.js: node exploit.js. You should see the outputs of both the git version and date command-lines. Note that the repo-test Git repository does not need to be present to make this PoC work.",
      "public_date": "2022-03-17 12:15:00+00:00",
      "cvss_score": 6.6,
      "severity": "MEDIUM",
      "summary": "All versions of package git are vulnerable to Remote Code Execution (RCE) due to missing sanitization in the Git.git method, which allows execution of OS commands rather than just git commands. Steps to Reproduce 1. Create a file named exploit.js with the following content: js var Git = require(\"git\").Git; var repo = new Git(\"repo-test\"); var user_input = \"version; date\"; repo.git(user_input, function(err, result) { console.log(result); }) 2. In the same directory as exploit.js, run npm install git. 3. Run exploit.js: node exploit.js. You should see the outputs of both the git version and date command-lines. Note that the repo-test Git repository does not need to be present to make this PoC work.",
      "published_date": "2022-03-17 12:15:07.68+00:00"
    },
    {
      "cve_id": "CVE-2021-21300",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
      "public_date": "2021-03-09 20:15:00+00:00",
      "cvss_score": 8.0,
      "severity": "HIGH",
      "summary": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
      "published_date": "2021-03-09 20:15:13.26+00:00"
    },
    {
      "cve_id": "CVE-2020-5260",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that contain an encoded newline can inject unintended values into the credential helper protocol stream, causing the credential helper to retrieve the password for one server (e.g., good.example.com) for an HTTP request being made to another server (e.g., evil.example.com), resulting in credentials for the former being sent to the latter. There are no restrictions on the relationship between the two, meaning that an attacker can craft a URL that will present stored credentials for any host to a host of their choosing. The vulnerability can be triggered by feeding a malicious URL to git clone. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The problem has been patched in the versions published on April 14th, 2020, going back to v2.17.x. Anyone wishing to backport the change further can do so by applying commit 9a6bbee (the full release includes extra checks for git fsck, but that commit is sufficient to protect clients against the vulnerability). The patched versions are: 2.17.4, 2.18.3, 2.19.4, 2.20.3, 2.21.2, 2.22.3, 2.23.2, 2.24.2, 2.25.3, 2.26.1.",
      "public_date": "2020-04-14 23:15:00+00:00",
      "cvss_score": 9.3,
      "severity": "CRITICAL",
      "summary": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that contain an encoded newline can inject unintended values into the credential helper protocol stream, causing the credential helper to retrieve the password for one server (e.g., good.example.com) for an HTTP request being made to another server (e.g., evil.example.com), resulting in credentials for the former being sent to the latter. There are no restrictions on the relationship between the two, meaning that an attacker can craft a URL that will present stored credentials for any host to a host of their choosing. The vulnerability can be triggered by feeding a malicious URL to git clone. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The problem has been patched in the versions published on April 14th, 2020, going back to v2.17.x. Anyone wishing to backport the change further can do so by applying commit 9a6bbee (the full release includes extra checks for git fsck, but that commit is sufficient to protect clients against the vulnerability). The patched versions are: 2.17.4, 2.18.3, 2.19.4, 2.20.3, 2.21.2, 2.22.3, 2.23.2, 2.24.2, 2.25.3, 2.26.1.",
      "published_date": "2020-04-14 23:15:12.607+00:00"
    },
    {
      "cve_id": "CVE-2020-11008",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
      "public_date": "2020-04-21 19:15:00+00:00",
      "cvss_score": 4.0,
      "severity": "MEDIUM",
      "summary": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
      "published_date": "2020-04-21 19:15:13.457+00:00"
    },
    {
      "cve_id": "CVE-2019-19604",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Arbitrary command execution is possible in Git before 2.20.2, 2.21.x before 2.21.1, 2.22.x before 2.22.2, 2.23.x before 2.23.1, and 2.24.x before 2.24.1 because a \"git submodule update\" operation can run commands found in the .gitmodules file of a malicious repository.",
      "public_date": "2019-12-11 00:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Arbitrary command execution is possible in Git before 2.20.2, 2.21.x before 2.21.1, 2.22.x before 2.22.2, 2.23.x before 2.23.1, and 2.24.x before 2.24.1 because a \"git submodule update\" operation can run commands found in the .gitmodules file of a malicious repository.",
      "published_date": "2019-12-11 00:15:13.26+00:00"
    },
    {
      "cve_id": "CVE-2019-1387",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. Recursive clones are currently affected by a vulnerability that is caused by too-lax validation of submodule names, allowing very targeted attacks via remote code execution in recursive clones.",
      "public_date": "2019-12-18 21:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. Recursive clones are currently affected by a vulnerability that is caused by too-lax validation of submodule names, allowing very targeted attacks via remote code execution in recursive clones.",
      "published_date": "2019-12-18 21:15:13.82+00:00"
    },
    {
      "cve_id": "CVE-2019-1354",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1352, CVE-2019-1387.",
      "public_date": "2020-01-24 21:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1352, CVE-2019-1387.",
      "published_date": "2020-01-24 21:15:12.987+00:00"
    },
    {
      "cve_id": "CVE-2019-1353",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. When running Git in the Windows Subsystem for Linux (also known as \"WSL\") while accessing a working directory on a regular Windows drive, none of the NTFS protections were active.",
      "public_date": "2020-01-24 22:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. When running Git in the Windows Subsystem for Linux (also known as \"WSL\") while accessing a working directory on a regular Windows drive, none of the NTFS protections were active.",
      "published_date": "2020-01-24 22:15:19.253+00:00"
    },
    {
      "cve_id": "CVE-2019-1352",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1354, CVE-2019-1387.",
      "public_date": "2020-01-24 21:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1350, CVE-2019-1354, CVE-2019-1387.",
      "published_date": "2020-01-24 21:15:12.927+00:00"
    },
    {
      "cve_id": "CVE-2019-1351",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A tampering vulnerability exists when Git for Visual Studio improperly handles virtual drive paths, aka 'Git for Visual Studio Tampering Vulnerability'.",
      "public_date": "2020-01-24 21:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A tampering vulnerability exists when Git for Visual Studio improperly handles virtual drive paths, aka 'Git for Visual Studio Tampering Vulnerability'.",
      "published_date": "2020-01-24 21:15:12.863+00:00"
    },
    {
      "cve_id": "CVE-2019-1350",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
      "public_date": "2020-01-24 21:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1349, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
      "published_date": "2020-01-24 21:15:12.8+00:00"
    },
    {
      "cve_id": "CVE-2019-1349",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1350, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
      "public_date": "2020-01-24 21:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A remote code execution vulnerability exists when Git for Visual Studio improperly sanitizes input, aka 'Git for Visual Studio Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2019-1350, CVE-2019-1352, CVE-2019-1354, CVE-2019-1387.",
      "published_date": "2020-01-24 21:15:12.707+00:00"
    },
    {
      "cve_id": "CVE-2019-1348",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. The --export-marks option of git fast-import is exposed also via the in-stream command feature export-marks=... and it allows overwriting arbitrary paths.",
      "public_date": "2020-01-24 22:15:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "An issue was found in Git before v2.24.1, v2.23.1, v2.22.2, v2.21.1, v2.20.2, v2.19.3, v2.18.2, v2.17.3, v2.16.6, v2.15.4, and v2.14.6. The --export-marks option of git fast-import is exposed also via the in-stream command feature export-marks=... and it allows overwriting arbitrary paths.",
      "published_date": "2020-01-24 22:15:19.19+00:00"
    },
    {
      "cve_id": "CVE-2018-19486",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git before 2.19.2 on Linux and UNIX executes commands from the current working directory (as if '.' were at the end of $PATH) in certain cases involving the run_command() API and run-command.c, because there was a dangerous change from execvp to execv during 2017.",
      "public_date": "2018-11-23 08:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Git before 2.19.2 on Linux and UNIX executes commands from the current working directory (as if '.' were at the end of $PATH) in certain cases involving the run_command() API and run-command.c, because there was a dangerous change from execvp to execv during 2017.",
      "published_date": "2018-11-23 08:29:00.263+00:00"
    },
    {
      "cve_id": "CVE-2018-17456",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Git before 2.14.5, 2.15.x before 2.15.3, 2.16.x before 2.16.5, 2.17.x before 2.17.2, 2.18.x before 2.18.1, and 2.19.x before 2.19.1 allows remote code execution during processing of a recursive \"git clone\" of a superproject if a .gitmodules file has a URL field beginning with a '-' character.",
      "public_date": "2018-10-06 14:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Git before 2.14.5, 2.15.x before 2.15.3, 2.16.x before 2.16.5, 2.17.x before 2.17.2, 2.18.x before 2.18.1, and 2.19.x before 2.19.1 allows remote code execution during processing of a recursive \"git clone\" of a superproject if a .gitmodules file has a URL field beginning with a '-' character.",
      "published_date": "2018-10-06 14:29:00.3+00:00"
    },
    {
      "cve_id": "CVE-2018-11235",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "In Git before 2.13.7, 2.14.x before 2.14.4, 2.15.x before 2.15.2, 2.16.x before 2.16.4, and 2.17.x before 2.17.1, remote code execution can occur. With a crafted .gitmodules file, a malicious project can execute an arbitrary script on a machine that runs \"git clone --recurse-submodules\" because submodule \"names\" are obtained from this file, and then appended to $GIT_DIR/modules, leading to directory traversal with \"../\" in a name. Finally, post-checkout hooks from a submodule are executed, bypassing the intended design in which hooks are not obtained from a remote server.",
      "public_date": "2018-05-30 04:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "In Git before 2.13.7, 2.14.x before 2.14.4, 2.15.x before 2.15.2, 2.16.x before 2.16.4, and 2.17.x before 2.17.1, remote code execution can occur. With a crafted .gitmodules file, a malicious project can execute an arbitrary script on a machine that runs \"git clone --recurse-submodules\" because submodule \"names\" are obtained from this file, and then appended to $GIT_DIR/modules, leading to directory traversal with \"../\" in a name. Finally, post-checkout hooks from a submodule are executed, bypassing the intended design in which hooks are not obtained from a remote server.",
      "published_date": "2018-05-30 04:29:00.287+00:00"
    },
    {
      "cve_id": "CVE-2018-11233",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "In Git before 2.13.7, 2.14.x before 2.14.4, 2.15.x before 2.15.2, 2.16.x before 2.16.4, and 2.17.x before 2.17.1, code to sanity-check pathnames on NTFS can result in reading out-of-bounds memory.",
      "public_date": "2018-05-30 04:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Git before 2.13.7, 2.14.x before 2.14.4, 2.15.x before 2.15.2, 2.16.x before 2.16.4, and 2.17.x before 2.17.1, code to sanity-check pathnames on NTFS can result in reading out-of-bounds memory.",
      "published_date": "2018-05-30 04:29:00.207+00:00"
    },
    {
      "cve_id": "CVE-2018-1000021",
      "source": "GOST",
      "affected_package": "git",
      "installed_version": "1:2.7.4-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "GIT version 2.15.1 and earlier contains a Input Validation Error vulnerability in Client that can result in problems including messing up terminal configuration to RCE. This attack appear to be exploitable via The user must interact with a malicious git server, (or have their traffic modified in a MITM attack).",
      "public_date": "2018-02-09 23:29:00+00:00",
      "cvss_score": 5.0,
      "severity": "MEDIUM",
      "summary": "GIT version 2.15.1 and earlier contains a Input Validation Error vulnerability in Client that can result in problems including messing up terminal configuration to RCE. This attack appear to be exploitable via The user must interact with a malicious git server, (or have their traffic modified in a MITM attack).",
      "published_date": "2018-02-09 23:29:00.557+00:00"
    },
    {
      "cve_id": "CVE-2022-1271",
      "source": "GOST",
      "affected_package": "gzip",
      "installed_version": "1.6-4ubuntu1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "public_date": "2022-08-31 16:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "published_date": "2022-08-31 16:15:09.347+00:00"
    },
    {
      "cve_id": "CVE-2024-2236",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
      "public_date": "2024-03-06 22:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
      "published_date": "2024-03-06 22:15:57.977+00:00"
    },
    {
      "cve_id": "CVE-2021-40528",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
      "public_date": "2021-09-06 19:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
      "published_date": "2021-09-06 19:15:07.587+00:00"
    },
    {
      "cve_id": "CVE-2021-33560",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
      "public_date": "2021-06-08 11:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
      "published_date": "2021-06-08 11:15:07.767+00:00"
    },
    {
      "cve_id": "CVE-2021-3345",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "_gcry_md_block_write in cipher/hash-common.c in Libgcrypt version 1.9.0 has a heap-based buffer overflow when the digest final function sets a large count value. It is recommended to upgrade to 1.9.1 or later.",
      "public_date": "2021-01-29 15:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "_gcry_md_block_write in cipher/hash-common.c in Libgcrypt version 1.9.0 has a heap-based buffer overflow when the digest final function sets a large count value. It is recommended to upgrade to 1.9.1 or later.",
      "published_date": "2021-01-29 15:15:13.083+00:00"
    },
    {
      "cve_id": "CVE-2019-13627",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.",
      "public_date": "2019-09-25 15:15:00+00:00",
      "cvss_score": 6.3,
      "severity": "MEDIUM",
      "summary": "It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.",
      "published_date": "2019-09-25 15:15:11.877+00:00"
    },
    {
      "cve_id": "CVE-2019-12904",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** In Libgcrypt 1.8.4, the C implementation of AES is vulnerable to a flush-and-reload side-channel attack because physical addresses are available to other processes. (The C implementation is used on platforms where an assembly-language implementation is unavailable.) NOTE: the vendor's position is that the issue report cannot be validated because there is no description of an attack.",
      "public_date": "2019-06-20 00:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "In Libgcrypt 1.8.4, the C implementation of AES is vulnerable to a flush-and-reload side-channel attack because physical addresses are available to other processes. (The C implementation is used on platforms where an assembly-language implementation is unavailable.) NOTE: the vendor's position is that the issue report cannot be validated because there is no description of an attack",
      "published_date": "2019-06-20 00:15:10.667+00:00"
    },
    {
      "cve_id": "CVE-2018-6829",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
      "public_date": "2018-02-07 23:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
      "published_date": "2018-02-07 23:29:01.703+00:00"
    },
    {
      "cve_id": "CVE-2018-0495",
      "source": "GOST",
      "affected_package": "libgcrypt20",
      "installed_version": "1.6.5-2ubuntu0.6",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
      "public_date": "2018-06-13 23:29:00+00:00",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
      "published_date": "2018-06-13 23:29:00.333+00:00"
    },
    {
      "cve_id": "CVE-2022-31081",
      "source": "GOST",
      "affected_package": "libhttp-daemon-perl",
      "installed_version": "6.01-1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "HTTP::Daemon is a simple http server class written in perl. Versions prior to 6.15 are subject to a vulnerability which could potentially be exploited to gain privileged access to APIs or poison intermediate caches. It is uncertain how large the risks are, most Perl based applications are served on top of Nginx or Apache, not on the `HTTP::Daemon`. This library is commonly used for local development and tests. Users are advised to update to resolve this issue. Users unable to upgrade may add additional request handling logic as a mitigation. After calling `my $rqst = $conn->get_request()` one could inspect the returned `HTTP::Request` object. Querying the 'Content-Length' (`my $cl = $rqst->header('Content-Length')`) will show any abnormalities that should be dealt with by a `400` response. Expected strings of 'Content-Length' SHOULD consist of either a single non-negative integer, or, a comma separated repetition of that number. (that is `42` or `42, 42, 42`). Anything else MUST be rejected.",
      "public_date": "2022-06-27 21:15:00+00:00",
      "cvss_score": 7.3,
      "severity": "HIGH",
      "summary": "HTTP::Daemon is a simple http server class written in perl. Versions prior to 6.15 are subject to a vulnerability which could potentially be exploited to gain privileged access to APIs or poison intermediate caches. It is uncertain how large the risks are, most Perl based applications are served on top of Nginx or Apache, not on the `HTTP::Daemon`. This library is commonly used for local development and tests. Users are advised to update to resolve this issue. Users unable to upgrade may add additional request handling logic as a mitigation. After calling `my $rqst = $conn->get_request()` one could inspect the returned `HTTP::Request` object. Querying the 'Content-Length' (`my $cl = $rqst->header('Content-Length')`) will show any abnormalities that should be dealt with by a `400` response. Expected strings of 'Content-Length' SHOULD consist of either a single non-negative integer, or, a comma separated repetition of that number. (that is `42` or `42, 42, 42`). Anything else MUST be rejected.",
      "published_date": "2022-06-27 21:15:08.02+00:00"
    },
    {
      "cve_id": "CVE-2025-6170",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in the interactive shell of the xmllint command-line tool, used for parsing XML files. When a user inputs an overly long command, the program does not check the input size properly, which can cause it to crash. This issue might allow attackers to run harmful code in rare configurations without modern protections.",
      "public_date": "2025-06-16 16:15:00+00:00",
      "cvss_score": 2.5,
      "severity": "LOW",
      "summary": "A flaw was found in the interactive shell of the xmllint command-line tool, used for parsing XML files. When a user inputs an overly long command, the program does not check the input size properly, which can cause it to crash. This issue might allow attackers to run harmful code in rare configurations without modern protections.",
      "published_date": "2025-06-16 16:15:20.43+00:00"
    },
    {
      "cve_id": "CVE-2025-6021",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in libxml2's xmlBuildQName function, where integer overflows in buffer size calculations can lead to a stack-based buffer overflow. This issue can result in memory corruption or a denial of service when processing crafted input.",
      "public_date": "2025-06-12 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in libxml2's xmlBuildQName function, where integer overflows in buffer size calculations can lead to a stack-based buffer overflow. This issue can result in memory corruption or a denial of service when processing crafted input.",
      "published_date": "2025-06-12 13:15:25.59+00:00"
    },
    {
      "cve_id": "CVE-2025-49796",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability was found in libxml2. Processing certain sch:name elements from the input XML file can trigger a memory corruption issue. This flaw allows an attacker to craft a malicious XML input file that can lead libxml to crash, resulting in a denial of service or other possible undefined behavior due to sensitive data being corrupted in memory.",
      "public_date": "2025-06-16 16:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "A vulnerability was found in libxml2. Processing certain sch:name elements from the input XML file can trigger a memory corruption issue. This flaw allows an attacker to craft a malicious XML input file that can lead libxml to crash, resulting in a denial of service or other possible undefined behavior due to sensitive data being corrupted in memory.",
      "published_date": "2025-06-16 16:15:19.37+00:00"
    },
    {
      "cve_id": "CVE-2025-49795",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A NULL pointer dereference vulnerability was found in libxml2 when processing XPath XML expressions. This flaw allows an attacker to craft a malicious XML input to libxml2, leading to a denial of service.",
      "public_date": "2025-06-16 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A NULL pointer dereference vulnerability was found in libxml2 when processing XPath XML expressions. This flaw allows an attacker to craft a malicious XML input to libxml2, leading to a denial of service.",
      "published_date": "2025-06-16 16:15:19.203+00:00"
    },
    {
      "cve_id": "CVE-2025-49794",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use-after-free vulnerability was found in libxml2. This issue occurs when parsing XPath elements under certain circumstances when the XML schematron has the <sch:name path=\"...\"/> schema elements. This flaw allows a malicious actor to craft a malicious XML document used as input for libxml, resulting in the program's crash using libxml or other possible undefined behaviors.",
      "public_date": "2025-06-16 16:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "A use-after-free vulnerability was found in libxml2. This issue occurs when parsing XPath elements under certain circumstances when the XML schematron has the <sch:name path=\"...\"/> schema elements. This flaw allows a malicious actor to craft a malicious XML document used as input for libxml, resulting in the program's crash using libxml or other possible undefined behaviors.",
      "published_date": "2025-06-16 16:15:18.997+00:00"
    },
    {
      "cve_id": "CVE-2025-32415",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, xmlSchemaIDCFillNodeTables in xmlschemas.c has a heap-based buffer under-read. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "public_date": "2025-04-17 17:15:00+00:00",
      "cvss_score": 2.9,
      "severity": "LOW",
      "summary": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, xmlSchemaIDCFillNodeTables in xmlschemas.c has a heap-based buffer under-read. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "published_date": "2025-04-17 17:15:33.733+00:00"
    },
    {
      "cve_id": "CVE-2025-32414",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, out-of-bounds memory access can occur in the Python API (Python bindings) because of an incorrect return value. This occurs in xmlPythonFileRead and xmlPythonFileReadRaw because of a difference between bytes and characters.",
      "public_date": "2025-04-08 03:15:00+00:00",
      "cvss_score": 5.6,
      "severity": "MEDIUM",
      "summary": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, out-of-bounds memory access can occur in the Python API (Python bindings) because of an incorrect return value. This occurs in xmlPythonFileRead and xmlPythonFileReadRaw because of a difference between bytes and characters.",
      "published_date": "2025-04-08 03:15:15.94+00:00"
    },
    {
      "cve_id": "CVE-2025-27113",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a NULL pointer dereference in xmlPatMatch in pattern.c.",
      "public_date": "2025-02-18 23:15:00+00:00",
      "cvss_score": 2.9,
      "severity": "LOW",
      "summary": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a NULL pointer dereference in xmlPatMatch in pattern.c.",
      "published_date": "2025-02-18 23:15:10.96+00:00"
    },
    {
      "cve_id": "CVE-2025-24928",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a stack-based buffer overflow in xmlSnprintfElements in valid.c. To exploit this, DTD validation must occur for an untrusted document or untrusted DTD. NOTE: this is similar to CVE-2017-9047.",
      "public_date": "2025-02-18 23:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a stack-based buffer overflow in xmlSnprintfElements in valid.c. To exploit this, DTD validation must occur for an untrusted document or untrusted DTD. NOTE: this is similar to CVE-2017-9047.",
      "published_date": "2025-02-18 23:15:10.25+00:00"
    },
    {
      "cve_id": "CVE-2024-56171",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a use-after-free in xmlSchemaIDCFillNodeTables and xmlSchemaBubbleIDCNodeTables in xmlschemas.c. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "public_date": "2025-02-18 22:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a use-after-free in xmlSchemaIDCFillNodeTables and xmlSchemaBubbleIDCNodeTables in xmlschemas.c. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "published_date": "2025-02-18 22:15:12.797+00:00"
    },
    {
      "cve_id": "CVE-2024-40896",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In libxml2 2.11 before 2.11.9, 2.12 before 2.12.9, and 2.13 before 2.13.3, the SAX parser can produce events for external entities even if custom SAX handlers try to override entity content (by setting \"checked\"). This makes classic XXE attacks possible.",
      "public_date": "2024-12-23 17:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "In libxml2 2.11 before 2.11.9, 2.12 before 2.12.9, and 2.13 before 2.13.3, the SAX parser can produce events for external entities even if custom SAX handlers try to override entity content (by setting \"checked\"). This makes classic XXE attacks possible.",
      "published_date": "2024-12-23 17:15:08.4+00:00"
    },
    {
      "cve_id": "CVE-2024-34459",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
      "public_date": "2024-05-14 15:39:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
      "published_date": "2024-05-14 15:39:11.917+00:00"
    },
    {
      "cve_id": "CVE-2024-25062",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.",
      "public_date": "2024-02-04 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.",
      "published_date": "2024-02-04 16:15:45.12+00:00"
    },
    {
      "cve_id": "CVE-2023-45322",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** libxml2 through 2.11.5 has a use-after-free that can only occur after a certain memory allocation fails. This occurs in xmlUnlinkNode in tree.c. NOTE: the vendor's position is \"I don't think these issues are critical enough to warrant a CVE ID ... because an attacker typically can't control when memory allocations fail.\"",
      "public_date": "2023-10-06 22:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "libxml2 through 2.11.5 has a use-after-free that can only occur after a certain memory allocation fails. This occurs in xmlUnlinkNode in tree.c. NOTE: the vendor's position is \"I don't think these issues are critical enough to warrant a CVE ID ... because an attacker typically can't control when memory allocations fail.\"",
      "published_date": "2023-10-06 22:15:11.66+00:00"
    },
    {
      "cve_id": "CVE-2023-39615",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** Xmlsoft Libxml2 v2.11.0 was discovered to contain an out-of-bounds read via the xmlSAX2StartElement() function at /libxml2/SAX2.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via supplying a crafted XML file. NOTE: the vendor's position is that the product does not support the legacy SAX1 interface with custom callbacks; there is a crash even without crafted input.",
      "public_date": "2023-08-29 17:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Xmlsoft Libxml2 v2.11.0 was discovered to contain an out-of-bounds read via the xmlSAX2StartElement() function at /libxml2/SAX2.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via supplying a crafted XML file. NOTE: the vendor's position is that the product does not support the legacy SAX1 interface with custom callbacks; there is a crash even without crafted input.",
      "published_date": "2023-08-29 17:15:12.527+00:00"
    },
    {
      "cve_id": "CVE-2023-29469",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in libxml2 before 2.10.4. When hashing empty dict strings in a crafted XML document, xmlDictComputeFastKey in dict.c can produce non-deterministic values, leading to various logic and memory errors, such as a double free. This behavior occurs because there is an attempt to use the first byte of an empty string, and any value is possible (not solely the '\\0' value).",
      "public_date": "2023-04-24 21:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in libxml2 before 2.10.4. When hashing empty dict strings in a crafted XML document, xmlDictComputeFastKey in dict.c can produce non-deterministic values, leading to various logic and memory errors, such as a double free. This behavior occurs because there is an attempt to use the first byte of an empty string, and any value is possible (not solely the '\\0' value).",
      "published_date": "2023-04-24 21:15:09.23+00:00"
    },
    {
      "cve_id": "CVE-2023-28484",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In libxml2 before 2.10.4, parsing of certain invalid XSD schemas can lead to a NULL pointer dereference and subsequently a segfault. This occurs in xmlSchemaFixupComplexType in xmlschemas.c.",
      "public_date": "2023-04-24 21:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "In libxml2 before 2.10.4, parsing of certain invalid XSD schemas can lead to a NULL pointer dereference and subsequently a segfault. This occurs in xmlSchemaFixupComplexType in xmlschemas.c.",
      "published_date": "2023-04-24 21:15:09.18+00:00"
    },
    {
      "cve_id": "CVE-2022-49043",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "xmlXIncludeAddNode in xinclude.c in libxml2 before 2.11.0 has a use-after-free.",
      "public_date": "2025-01-26 06:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "xmlXIncludeAddNode in xinclude.c in libxml2 before 2.11.0 has a use-after-free.",
      "published_date": "2025-01-26 06:15:21+00:00"
    },
    {
      "cve_id": "CVE-2022-40304",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in libxml2 before 2.10.3. Certain invalid XML entity definitions can corrupt a hash table key, potentially leading to subsequent logic errors. In one case, a double-free can be provoked.",
      "public_date": "2022-11-23 18:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "An issue was discovered in libxml2 before 2.10.3. Certain invalid XML entity definitions can corrupt a hash table key, potentially leading to subsequent logic errors. In one case, a double-free can be provoked.",
      "published_date": "2022-11-23 18:15:12.167+00:00"
    },
    {
      "cve_id": "CVE-2022-40303",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in libxml2 before 2.10.3. When parsing a multi-gigabyte XML document with the XML_PARSE_HUGE parser option enabled, several integer counters can overflow. This results in an attempt to access an array at a negative 2GB offset, typically leading to a segmentation fault.",
      "public_date": "2022-11-23 00:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in libxml2 before 2.10.3. When parsing a multi-gigabyte XML document with the XML_PARSE_HUGE parser option enabled, several integer counters can overflow. This results in an attempt to access an array at a negative 2GB offset, typically leading to a segmentation fault.",
      "published_date": "2022-11-23 00:15:11.007+00:00"
    },
    {
      "cve_id": "CVE-2022-29824",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In libxml2 before 2.9.14, several buffer handling functions in buf.c (xmlBuf*) and tree.c (xmlBuffer*) don't check for integer overflows. This can result in out-of-bounds memory writes. Exploitation requires a victim to open a crafted, multi-gigabyte XML file. Other software using libxml2's buffer functions, for example libxslt through 1.1.35, is affected as well.",
      "public_date": "2022-05-03 03:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "In libxml2 before 2.9.14, several buffer handling functions in buf.c (xmlBuf*) and tree.c (xmlBuffer*) don't check for integer overflows. This can result in out-of-bounds memory writes. Exploitation requires a victim to open a crafted, multi-gigabyte XML file. Other software using libxml2's buffer functions, for example libxslt through 1.1.35, is affected as well.",
      "published_date": "2022-05-03 03:15:06.687+00:00"
    },
    {
      "cve_id": "CVE-2022-23308",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "valid.c in libxml2 before 2.9.13 has a use-after-free of ID and IDREF attributes.",
      "public_date": "2022-02-26 05:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "valid.c in libxml2 before 2.9.13 has a use-after-free of ID and IDREF attributes.",
      "published_date": "2022-02-26 05:15:08.28+00:00"
    },
    {
      "cve_id": "CVE-2022-2309",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.",
      "public_date": "2022-07-05 10:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.",
      "published_date": "2022-07-05 10:15:08.763+00:00"
    },
    {
      "cve_id": "CVE-2021-3541",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service.",
      "public_date": "2021-07-09 17:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "A flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service.",
      "published_date": "2021-07-09 17:15:07.973+00:00"
    },
    {
      "cve_id": "CVE-2021-3537",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability.",
      "public_date": "2021-05-14 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability.",
      "published_date": "2021-05-14 20:15:16.553+00:00"
    },
    {
      "cve_id": "CVE-2021-3518",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There's a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability.",
      "public_date": "2021-05-18 12:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "There's a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability.",
      "published_date": "2021-05-18 12:15:08.043+00:00"
    },
    {
      "cve_id": "CVE-2021-3517",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application.",
      "public_date": "2021-05-19 14:15:00+00:00",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "There is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application.",
      "published_date": "2021-05-19 14:15:07.553+00:00"
    },
    {
      "cve_id": "CVE-2021-3516",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There's a flaw in libxml2's xmllint in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by xmllint could trigger a use-after-free. The greatest impact of this flaw is to confidentiality, integrity, and availability.",
      "public_date": "2021-06-01 14:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "There's a flaw in libxml2's xmllint in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by xmllint could trigger a use-after-free. The greatest impact of this flaw is to confidentiality, integrity, and availability.",
      "published_date": "2021-06-01 14:15:10.373+00:00"
    },
    {
      "cve_id": "CVE-2020-9926",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use after free issue was addressed with improved memory management. This issue is fixed in iOS 13.6 and iPadOS 13.6, tvOS 13.4.8, watchOS 6.2.8, iCloud for Windows 7.20, macOS Catalina 10.15.6, Security Update 2020-004 Mojave, Security Update 2020-004 High Sierra. Processing maliciously crafted XML may lead to an unexpected application termination or arbitrary code execution.",
      "public_date": "2021-04-02 18:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A use after free issue was addressed with improved memory management. This issue is fixed in iOS 13.6 and iPadOS 13.6, tvOS 13.4.8, watchOS 6.2.8, iCloud for Windows 7.20, macOS Catalina 10.15.6, Security Update 2020-004 Mojave, Security Update 2020-004 High Sierra. Processing maliciously crafted XML may lead to an unexpected application termination or arbitrary code execution.",
      "published_date": "2021-04-02 18:15:18.217+00:00"
    },
    {
      "cve_id": "CVE-2020-7595",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "xmlStringLenDecodeEntities in parser.c in libxml2 2.9.10 has an infinite loop in a certain end-of-file situation.",
      "public_date": "2020-01-21 23:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "xmlStringLenDecodeEntities in parser.c in libxml2 2.9.10 has an infinite loop in a certain end-of-file situation.",
      "published_date": "2020-01-21 23:15:13.867+00:00"
    },
    {
      "cve_id": "CVE-2020-27920",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use after free issue was addressed with improved memory management. This issue is fixed in macOS Big Sur 11.1, Security Update 2020-001 Catalina, Security Update 2020-007 Mojave, macOS Big Sur 11.0.1, iOS 14.2 and iPadOS 14.2, watchOS 7.1, tvOS 14.2. Processing maliciously crafted web content may lead to code execution.",
      "public_date": "2021-04-02 18:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A use after free issue was addressed with improved memory management. This issue is fixed in macOS Big Sur 11.1, Security Update 2020-001 Catalina, Security Update 2020-007 Mojave, macOS Big Sur 11.0.1, iOS 14.2 and iPadOS 14.2, watchOS 7.1, tvOS 14.2. Processing maliciously crafted web content may lead to code execution.",
      "published_date": "2021-04-02 18:15:15.637+00:00"
    },
    {
      "cve_id": "CVE-2020-24977",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "GNOME project libxml2 v2.9.10 has a global buffer over-read vulnerability in xmlEncodeEntitiesInternal at libxml2/entities.c. The issue has been fixed in commit 50f06b3e.",
      "public_date": "2020-09-04 00:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "GNOME project libxml2 v2.9.10 has a global buffer over-read vulnerability in xmlEncodeEntitiesInternal at libxml2/entities.c. The issue has been fixed in commit 50f06b3e.",
      "published_date": "2020-09-04 00:15:10.693+00:00"
    },
    {
      "cve_id": "CVE-2019-20388",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "xmlSchemaPreRun in xmlschemas.c in libxml2 2.9.10 allows an xmlSchemaValidateStream memory leak.",
      "public_date": "2020-01-21 23:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "xmlSchemaPreRun in xmlschemas.c in libxml2 2.9.10 allows an xmlSchemaValidateStream memory leak.",
      "published_date": "2020-01-21 23:15:13.553+00:00"
    },
    {
      "cve_id": "CVE-2019-19956",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "xmlParseBalancedChunkMemoryRecover in parser.c in libxml2 before 2.9.10 has a memory leak related to newDoc->oldNs.",
      "public_date": "2019-12-24 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "xmlParseBalancedChunkMemoryRecover in parser.c in libxml2 before 2.9.10 has a memory leak related to newDoc->oldNs.",
      "published_date": "2019-12-24 16:15:11.45+00:00"
    },
    {
      "cve_id": "CVE-2018-9251",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The xz_decomp function in xzlib.c in libxml2 2.9.8, if --with-lzma is used, allows remote attackers to cause a denial of service (infinite loop) via a crafted XML file that triggers LZMA_MEMLIMIT_ERROR, as demonstrated by xmllint, a different vulnerability than CVE-2015-8035.",
      "public_date": "2018-04-04 02:29:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "The xz_decomp function in xzlib.c in libxml2 2.9.8, if --with-lzma is used, allows remote attackers to cause a denial of service (infinite loop) via a crafted XML file that triggers LZMA_MEMLIMIT_ERROR, as demonstrated by xmllint, a different vulnerability than CVE-2015-8035.",
      "published_date": "2018-04-04 02:29:00.32+00:00"
    },
    {
      "cve_id": "CVE-2018-14567",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "libxml2 2.9.8, if --with-lzma is used, allows remote attackers to cause a denial of service (infinite loop) via a crafted XML file that triggers LZMA_MEMLIMIT_ERROR, as demonstrated by xmllint, a different vulnerability than CVE-2015-8035 and CVE-2018-9251.",
      "public_date": "2018-08-16 20:29:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "libxml2 2.9.8, if --with-lzma is used, allows remote attackers to cause a denial of service (infinite loop) via a crafted XML file that triggers LZMA_MEMLIMIT_ERROR, as demonstrated by xmllint, a different vulnerability than CVE-2015-8035 and CVE-2018-9251.",
      "published_date": "2018-08-16 20:29:02.47+00:00"
    },
    {
      "cve_id": "CVE-2018-14404",
      "source": "GOST",
      "affected_package": "libxml2",
      "installed_version": "2.9.3+dfsg1-1ubuntu0.7",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A NULL pointer dereference vulnerability exists in the xpath.c:xmlXPathCompOpEval() function of libxml2 through 2.9.8 when parsing an invalid XPath expression in the XPATH_OP_AND or XPATH_OP_OR case. Applications processing untrusted XSL format inputs with the use of the libxml2 library may be vulnerable to a denial of service attack due to a crash of the application.",
      "public_date": "2018-07-19 13:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A NULL pointer dereference vulnerability exists in the xpath.c:xmlXPathCompOpEval() function of libxml2 through 2.9.8 when parsing an invalid XPath expression in the XPATH_OP_AND or XPATH_OP_OR case. Applications processing untrusted XSL format inputs with the use of the libxml2 library may be vulnerable to a denial of service attack due to a crash of the application.",
      "published_date": "2018-07-19 13:29:00.48+00:00"
    },
    {
      "cve_id": "CVE-2025-4575",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Use of -addreject option with the openssl x509 application adds a trusted use instead of a rejected use for a certificate.  Impact summary: If a user intends to make a trusted certificate rejected for a particular use it will be instead marked as trusted for that use.  A copy & paste error during minor refactoring of the code introduced this issue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate should be trusted only for the purpose of authenticating TLS servers but not for CMS signature verification and the CMS signature verification is intended to be marked as rejected with the -addreject option, the resulting CA certificate will be trusted for CMS signature verification purpose instead.  Only users which use the trusted certificate format who use the openssl x509 command line application to add rejected uses are affected by this issue. The issues affecting only the command line application are considered to be Low severity.  The FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.  OpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this issue.",
      "public_date": "2025-05-22 14:16:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: Use of -addreject option with the openssl x509 application adds\na trusted use instead of a rejected use for a certificate.\n\nImpact summary: If a user intends to make a trusted certificate rejected for\na particular use it will be instead marked as trusted for that use.\n\nA copy & paste error during minor refactoring of the code introduced this\nissue in the OpenSSL 3.5 version. If, for example, a trusted CA certificate\nshould be trusted only for the purpose of authenticating TLS servers but not\nfor CMS signature verification and the CMS signature verification is intended\nto be marked as rejected with the -addreject option, the resulting CA\ncertificate will be trusted for CMS signature verification purpose instead.\n\nOnly users which use the trusted certificate format who use the openssl x509\ncommand line application to add rejected uses are affected by this issue.\nThe issues affecting only the command line application are considered to\nbe Low severity.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue.\n\nOpenSSL 3.4, 3.3, 3.2, 3.1, 3.0, 1.1.1 and 1.0.2 are also not affected by this\nissue.",
      "published_date": "2025-05-22 14:16:07.63+00:00"
    },
    {
      "cve_id": "CVE-2025-27587",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "OpenSSL 3.0.0 through 3.3.2 on the PowerPC architecture is vulnerable to a Minerva attack, exploitable by measuring the time of signing of random messages using the EVP_DigestSign API, and then using the private key to extract the K value (nonce) from the signatures. Next, based on the bit size of the extracted nonce, one can compare the signing time of full-sized nonces to signatures that used smaller nonces, via statistical tests. There is a side-channel in the P-364 curve that allows private key extraction (also, there is a dependency between the bit size of K and the size of the side channel). NOTE: This CVE is disputed because the OpenSSL security policy explicitly notes that any side channels which require same physical system to be detected are outside of the threat model for the software. The timing signal is so small that it is infeasible to be detected without having the attacking process running on the same physical system.",
      "public_date": "2025-06-16 22:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "OpenSSL 3.0.0 through 3.3.2 on the PowerPC architecture is vulnerable to a Minerva attack, exploitable by measuring the time of signing of random messages using the EVP_DigestSign API, and then using the private key to extract the K value (nonce) from the signatures. Next, based on the bit size of the extracted nonce, one can compare the signing time of full-sized nonces to signatures that used smaller nonces, via statistical tests. There is a side-channel in the P-364 curve that allows private key extraction (also, there is a dependency between the bit size of K and the size of the side channel). NOTE: This CVE is disputed because the OpenSSL security policy explicitly notes that any side channels which require same physical system to be detected are outside of the threat model for the software. The timing signal is so small that it is infeasible to be detected without having the attacking process running on the same physical system.",
      "published_date": "2025-06-16 22:15:44.093+00:00"
    },
    {
      "cve_id": "CVE-2024-9143",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial can lead to out-of-bounds memory reads or writes.  Impact summary: Out of bound memory writes can lead to an application crash or even a possibility of a remote code execution, however, in all the protocols involving Elliptic Curve Cryptography that we're aware of, either only \"named curves\" are supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a vulnerable application is low.  In particular, the X9.62 encoding is used for ECC keys in X.509 certificates, so problematic inputs cannot occur in the context of processing X.509 certificates.  Any problematic use-cases would have to be using an \"exotic\" curve encoding.  The affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.  Applications working with \"exotic\" explicit binary (GF(2^m)) curve parameters, that make it possible to represent invalid field polynomials with a zero constant term, via the above or similar APIs, may terminate abruptly as a result of reading or writing outside of array bounds.  Remote code execution cannot easily be ruled out.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "public_date": "2024-10-16 17:15:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-10-16 17:15:18.13+00:00"
    },
    {
      "cve_id": "CVE-2024-6119",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Issue summary: Applications performing certificate name checks (e.g., TLS clients checking server certificates) may attempt to read an invalid memory address resulting in abnormal termination of the application process.  Impact summary: Abnormal termination of an application can a cause a denial of service.  Applications performing certificate name checks (e.g., TLS clients checking server certificates) may attempt to read an invalid memory address when comparing the expected name with an `otherName` subject alternative name of an X.509 certificate. This may result in an exception that terminates the application program.  Note that basic certificate chain validation (signatures, dates, ...) is not affected, the denial of service can occur only when the application also specifies an expected DNS name, Email address or IP address.  TLS servers rarely solicit client certificates, and even when they do, they generally don't perform a name check against a reference identifier (expected identity), but rather extract the presented identity after checking the certificate chain.  So TLS servers are generally not affected and the severity of the issue is Moderate.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "public_date": "2024-09-03 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don't perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-09-03 16:15:07.177+00:00"
    },
    {
      "cve_id": "CVE-2024-5535",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client protocols buffer may cause a crash or memory contents to be sent to the peer.  Impact summary: A buffer overread can have a range of potential consequences such as unexpected application beahviour or a crash. In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer leading to a loss of confidentiality. However, only applications that directly call the SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application.  The OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists it returns the first item in the client list. In either case it will signal whether an overlap between the two lists was found. In the case where SSL_select_next_proto is called with a zero length client list it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists).  This function is typically called from a server side application callback for ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case if the SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero length server list, and has accidentally passed that zero length server list in the client/client_len parameters, and has additionally failed to correctly handle a \"no overlap\" response (which would normally result in a handshake failure in ALPN) then it will be vulnerable to this problem.  In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol then the loss of confidentiality will occur.  This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control making active exploitation unlikely.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.  Due to the low severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included in the next releases when they become available.",
      "public_date": "2024-06-27 11:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
      "published_date": "2024-06-27 11:15:24.447+00:00"
    },
    {
      "cve_id": "CVE-2024-4741",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations  Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications.  The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use.  The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers will succeed even though a record has only been partially processed and the buffer is still in use.  The second scenario occurs where a full record containing application data has been received and processed by OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed even though the buffer is still in use.  While these scenarios could occur accidentally during normal operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware of this issue being actively exploited.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "public_date": "2024-11-13 11:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-11-13 11:15:04.48+00:00"
    },
    {
      "cve_id": "CVE-2024-4603",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Checking excessively long DSA keys or parameters may be very slow. Impact summary: Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA public key or DSA parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those computations take a long time if the modulus (`p` parameter) is too large. Trying to use a very large modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in length for signature verification. However the key and parameter check functions do not limit the modulus size when performing the checks. An application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. These functions are not called by OpenSSL itself on untrusted DSA keys so only applications that directly call these functions may be vulnerable. Also vulnerable are the OpenSSL pkey and pkeyparam command line applications when using the `-check` option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "public_date": "2024-05-16 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "published_date": "2024-05-16 16:15:10.643+00:00"
    },
    {
      "cve_id": "CVE-2024-41996",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Validating the order of the public keys in the Diffie-Hellman Key Agreement Protocol, when an approved safe prime is used, allows remote attackers (from the client side) to trigger unnecessarily expensive server-side DHE modular-exponentiation calculations. The client may cause asymmetric resource consumption. The basic attack scenario is that the client must claim that it can only communicate with DHE, and the server must be configured to allow DHE and validate the order of the public key.",
      "public_date": "2024-08-26 06:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Validating the order of the public keys in the Diffie-Hellman Key Agreement Protocol, when an approved safe prime is used, allows remote attackers (from the client side) to trigger unnecessarily expensive server-side DHE modular-exponentiation calculations. The client may cause asymmetric resource consumption. The basic attack scenario is that the client must claim that it can only communicate with DHE, and the server must be configured to allow DHE and validate the order of the public key.",
      "published_date": "2024-08-26 06:15:04.603+00:00"
    },
    {
      "cve_id": "CVE-2024-2511",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
      "public_date": "2024-04-08 14:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
      "published_date": "2024-04-08 14:15:07.66+00:00"
    },
    {
      "cve_id": "CVE-2024-13176",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation.  Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency.  There is a timing signal of around 300 nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular the NIST P-521 curve is affected. To be able to measure this leak, the attacker process must either be located in the same physical computer or must have a very fast network connection with low latency. For that reason the severity of this vulnerability is Low.  The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
      "public_date": "2025-01-20 14:15:00+00:00",
      "cvss_score": 4.1,
      "severity": "MEDIUM",
      "summary": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
      "published_date": "2025-01-20 14:15:26.247+00:00"
    },
    {
      "cve_id": "CVE-2024-12797",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a server may fail to notice that the server was not authenticated, because handshakes don't abort as expected when the SSL_VERIFY_PEER verification mode is set.  Impact summary: TLS and DTLS connections using raw public keys may be vulnerable to man-in-middle attacks when server authentication failure is not detected by clients.  RPKs are disabled by default in both TLS clients and TLS servers.  The issue only arises when TLS clients explicitly enable RPK use by the server, and the server, likewise, enables sending of an RPK instead of an X.509 certificate chain.  The affected clients are those that then rely on the handshake to fail when the server's RPK fails to match one of the expected public keys, by setting the verification mode to SSL_VERIFY_PEER.  Clients that enable server-side raw public keys can still find out that raw public key verification failed by calling SSL_get_verify_result(), and those that do, and take appropriate action, are not affected.  This issue was introduced in the initial implementation of RPK support in OpenSSL 3.2.  The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "public_date": "2025-02-11 16:15:00+00:00",
      "cvss_score": 6.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Clients using RFC7250 Raw Public Keys (RPKs) to authenticate a\nserver may fail to notice that the server was not authenticated, because\nhandshakes don't abort as expected when the SSL_VERIFY_PEER verification mode\nis set.\n\nImpact summary: TLS and DTLS connections using raw public keys may be\nvulnerable to man-in-middle attacks when server authentication failure is not\ndetected by clients.\n\nRPKs are disabled by default in both TLS clients and TLS servers.  The issue\nonly arises when TLS clients explicitly enable RPK use by the server, and the\nserver, likewise, enables sending of an RPK instead of an X.509 certificate\nchain.  The affected clients are those that then rely on the handshake to\nfail when the server's RPK fails to match one of the expected public keys,\nby setting the verification mode to SSL_VERIFY_PEER.\n\nClients that enable server-side raw public keys can still find out that raw\npublic key verification failed by calling SSL_get_verify_result(), and those\nthat do, and take appropriate action, are not affected.  This issue was\nintroduced in the initial implementation of RPK support in OpenSSL 3.2.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2025-02-11 16:15:38.827+00:00"
    },
    {
      "cve_id": "CVE-2024-0727",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly. A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue. OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass(). We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "public_date": "2024-01-26 09:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published_date": "2024-01-26 09:15:07.637+00:00"
    },
    {
      "cve_id": "CVE-2023-6237",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Checking excessively long invalid RSA public keys may take a long time. Impact summary: Applications that use the function EVP_PKEY_public_check() to check RSA public keys may experience long delays. Where the key that is being checked has been obtained from an untrusted source this may lead to a Denial of Service. When function EVP_PKEY_public_check() is called on RSA public keys, a computation is done to confirm that the RSA modulus, n, is composite. For valid RSA keys, n is a product of two or more large primes and this computation completes quickly. However, if n is an overly large prime, then this computation would take a long time. An application that calls EVP_PKEY_public_check() and supplies an RSA key obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function EVP_PKEY_public_check() is not called from other OpenSSL functions however it is called from the OpenSSL pkey command line application. For that reason that application is also vulnerable if used with the '-pubin' and '-check' options on untrusted data. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "public_date": "2024-04-25 07:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long invalid RSA public keys may take\na long time.\n\nImpact summary: Applications that use the function EVP_PKEY_public_check()\nto check RSA public keys may experience long delays. Where the key that\nis being checked has been obtained from an untrusted source this may lead\nto a Denial of Service.\n\nWhen function EVP_PKEY_public_check() is called on RSA public keys,\na computation is done to confirm that the RSA modulus, n, is composite.\nFor valid RSA keys, n is a product of two or more large primes and this\ncomputation completes quickly. However, if n is an overly large prime,\nthen this computation would take a long time.\n\nAn application that calls EVP_PKEY_public_check() and supplies an RSA key\nobtained from an untrusted source could be vulnerable to a Denial of Service\nattack.\n\nThe function EVP_PKEY_public_check() is not called from other OpenSSL\nfunctions however it is called from the OpenSSL pkey command line\napplication. For that reason that application is also vulnerable if used\nwith the '-pubin' and '-check' options on untrusted data.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
      "published_date": "2024-04-25 07:15:45.27+00:00"
    },
    {
      "cve_id": "CVE-2023-6129",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides vector instructions. Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is used, the application state might be corrupted with various application dependent consequences. The POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the contents of vector registers in a different order than they are saved. Thus the contents of some of these vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer PowerPC processors supporting the PowerISA 2.07 instructions. The consequences of this kind of internal application state corruption can be various - from no consequences, if the calling application does not depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker could get complete control of the application process. However unless the compiler uses the vector registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used. This implies that TLS server applications using OpenSSL can be potentially impacted. However we are currently not aware of any concrete application that would be affected by this issue therefore we consider this a Low severity security issue.",
      "public_date": "2024-01-09 17:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.",
      "published_date": "2024-01-09 17:15:12.147+00:00"
    },
    {
      "cve_id": "CVE-2023-5678",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q. An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "public_date": "2023-11-06 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published_date": "2023-11-06 16:15:42.67+00:00"
    },
    {
      "cve_id": "CVE-2023-5363",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Issue summary: A bug has been identified in the processing of key and initialisation vector (IV) lengths. This can lead to potential truncation or overruns during the initialisation of some symmetric ciphers. Impact summary: A truncation in the IV can result in non-uniqueness, which could result in loss of confidentiality for some cipher modes. When calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or EVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after the key and IV have been established. Any alterations to the key length, via the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter, within the OSSL_PARAM array will not take effect as intended, potentially causing truncation or overreading of these values. The following ciphers and cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB. For the CCM, GCM and OCB cipher modes, truncation of the IV can result in loss of confidentiality. For example, when following NIST's SP 800-38D section 8.2.1 guidance for constructing a deterministic IV for AES in GCM mode, truncation of the counter portion could lead to IV reuse. Both truncations and overruns of the key and overruns of the IV will produce incorrect results and could, in some cases, trigger a memory exception. However, these issues are not currently assessed as security critical. Changing the key and/or IV lengths is not considered to be a common operation and the vulnerable API was recently introduced. Furthermore it is likely that application developers will have spotted this problem during testing since decryption would fail unless both peers in the communication were similarly vulnerable. For these reasons we expect the probability of an application being vulnerable to this to be quite low. However if an application is vulnerable then this issue is considered very serious. For these reasons we have assessed this issue as Moderate severity overall. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this because the issue lies outside of the FIPS provider boundary. OpenSSL 3.1 and 3.0 are vulnerable to this issue.",
      "public_date": "2023-10-25 18:17:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this because\nthe issue lies outside of the FIPS provider boundary.\n\nOpenSSL 3.1 and 3.0 are vulnerable to this issue.",
      "published_date": "2023-10-25 18:17:43.613+00:00"
    },
    {
      "cve_id": "CVE-2023-4807",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might corrupt the internal state of applications on the Windows 64 platform when running on newer X86_64 processors supporting the AVX512-IFMA instructions. Impact summary: If in an application that uses the OpenSSL library an attacker can influence whether the POLY1305 MAC algorithm is used, the application state might be corrupted with various application dependent consequences. The POLY1305 MAC (message authentication code) implementation in OpenSSL does not save the contents of non-volatile XMM registers on Windows 64 platform when calculating the MAC of data larger than 64 bytes. Before returning to the caller all the XMM registers are set to zero rather than restoring their previous content. The vulnerable code is used only on newer x86_64 processors supporting the AVX512-IFMA instructions. The consequences of this kind of internal application state corruption can be various - from no consequences, if the calling application does not depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker could get complete control of the application process. However given the contents of the registers are just zeroized so the attacker cannot put arbitrary values inside, the most likely consequence, if any, would be an incorrect result of some application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3 and a malicious client can influence whether this AEAD cipher is used by the server. This implies that server applications using OpenSSL can be potentially impacted. However we are currently not aware of any concrete application that would be affected by this issue therefore we consider this a Low severity security issue. As a workaround the AVX512-IFMA instructions support can be disabled at runtime by setting the environment variable OPENSSL_ia32cap: OPENSSL_ia32cap=:~0x200000 The FIPS provider is not affected by this issue.",
      "public_date": "2023-09-08 12:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
      "published_date": "2023-09-08 12:15:08.043+00:00"
    },
    {
      "cve_id": "CVE-2023-3817",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow. Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p. An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check(). Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "public_date": "2023-07-31 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published_date": "2023-07-31 16:15:10.497+00:00"
    },
    {
      "cve_id": "CVE-2023-3446",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow. Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length. However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large. An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack. The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check(). Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "public_date": "2023-07-19 12:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published_date": "2023-07-19 12:15:10.003+00:00"
    },
    {
      "cve_id": "CVE-2023-2975",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: The AES-SIV cipher implementation contains a bug that causes it to ignore empty associated data entries which are unauthenticated as a consequence. Impact summary: Applications that use the AES-SIV algorithm and want to authenticate empty data entries as associated data can be mislead by removing adding or reordering such empty entries as these are ignored by the OpenSSL implementation. We are currently unaware of any such applications. The AES-SIV algorithm allows for authentication of multiple associated data entries along with the encryption. To authenticate empty data the application has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with NULL pointer as the output buffer and 0 as the input buffer length. The AES-SIV implementation in OpenSSL just returns success for such a call instead of performing the associated data authentication operation. The empty data thus will not be authenticated. As this issue does not affect non-empty associated data authentication and we expect it to be rare for an application to use empty associated data entries this is qualified as Low severity issue.",
      "public_date": "2023-07-14 12:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be misled by removing,\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
      "published_date": "2023-07-14 12:15:09.023+00:00"
    },
    {
      "cve_id": "CVE-2023-2650",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow. Impact summary: Applications that use OBJ_obj2txt() directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service. An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit. OBJ_obj2txt() may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods. When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in text may take a very long time. The time complexity is O(n^2) with 'n' being the size of the sub-identifiers in bytes (*). With OpenSSL 3.0, support to fetch cryptographic algorithms using names / identifiers in string form was introduced. This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms. Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data. Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL. If the use is for the mere purpose of display, the severity is considered low. In OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS. It also impacts anything that processes X.509 certificates, including simple things like verifying its signature. The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer's certificate chain. Additionally, this only impacts clients, or servers that have explicitly enabled client authentication. In OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects, such as X.509 certificates. This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
      "public_date": "2023-05-30 14:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
      "published_date": "2023-05-30 14:15:09.683+00:00"
    },
    {
      "cve_id": "CVE-2023-1255",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM platform contains a bug that could cause it to read past the input buffer, leading to a crash. Impact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM platform can crash in rare circumstances. The AES-XTS algorithm is usually used for disk encryption. The AES-XTS cipher decryption implementation for 64 bit ARM platform will read past the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16 byte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext buffer is unmapped, this will trigger a crash which results in a denial of service. If an attacker can control the size and location of the ciphertext buffer being decrypted by an application using AES-XTS on 64 bit ARM, the application is affected. This is fairly unlikely making this issue a Low severity one.",
      "public_date": "2023-04-20 17:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
      "published_date": "2023-04-20 17:15:06.883+00:00"
    },
    {
      "cve_id": "CVE-2023-0466",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification. As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function. Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument. Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
      "public_date": "2023-03-28 15:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
      "published_date": "2023-03-28 15:15:06.88+00:00"
    },
    {
      "cve_id": "CVE-2023-0465",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
      "public_date": "2023-03-28 15:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
      "published_date": "2023-03-28 15:15:06.82+00:00"
    },
    {
      "cve_id": "CVE-2023-0464",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
      "public_date": "2023-03-22 17:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
      "published_date": "2023-03-22 17:15:13.13+00:00"
    },
    {
      "cve_id": "CVE-2023-0401",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A NULL pointer can be dereferenced when signatures are being\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\nalgorithm used for the signature is known to the OpenSSL library but\nthe implementation of the hash algorithm is not available the digest\ninitialization will fail. There is a missing check for the return\nvalue from the initialization function which later leads to invalid\nusage of the digest API most likely leading to a crash.\n\nThe unavailability of an algorithm can be caused by using FIPS\nenabled configuration of providers or more commonly by not loading\nthe legacy provider.\n\nPKCS7 data is processed by the SMIME library calls and also by the\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\nnot call these functions however third party applications would be\naffected if they call these functions to verify signatures on untrusted\ndata.",
      "published_date": "2023-02-08 20:15:24.323+00:00"
    },
    {
      "cve_id": "CVE-2023-0286",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
      "published_date": "2023-02-08 20:15:24.267+00:00"
    },
    {
      "cve_id": "CVE-2023-0217",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An invalid pointer dereference on read can be triggered when an\napplication tries to check a malformed DSA public key by the\nEVP_PKEY_public_check() function. This will most likely lead\nto an application crash. This function can be called on public\nkeys supplied from untrusted sources which could allow an attacker\nto cause a denial of service attack.\n\nThe TLS implementation in OpenSSL does not call this function\nbut applications might call the function if there are additional\nsecurity requirements imposed by standards such as FIPS 140-3.",
      "published_date": "2023-02-08 20:15:24.213+00:00"
    },
    {
      "cve_id": "CVE-2023-0216",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An invalid pointer dereference on read can be triggered when an\napplication tries to load malformed PKCS7 data with the\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\n\nThe result of the dereference is an application crash which could\nlead to a denial of service attack. The TLS implementation in OpenSSL\ndoes not call this function however third party applications might\ncall these functions on untrusted data.",
      "published_date": "2023-02-08 20:15:24.16+00:00"
    },
    {
      "cve_id": "CVE-2023-0215",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7. Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream. The OpenSSL cms and smime command line applications are similarly affected.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
      "published_date": "2023-02-08 20:15:24.107+00:00"
    },
    {
      "cve_id": "CVE-2022-4450",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
      "published_date": "2023-02-08 20:15:23.973+00:00"
    },
    {
      "cve_id": "CVE-2022-4304",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
      "public_date": "2023-02-08 20:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
      "published_date": "2023-02-08 20:15:23.887+00:00"
    },
    {
      "cve_id": "CVE-2022-4203",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A read buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. The read buffer overrun might result in a crash which could lead to a denial of service attack. In theory it could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext) although we are not aware of any working exploit leading to memory contents disclosure as of the time of release of this advisory. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
      "public_date": "2023-02-24 15:15:00+00:00",
      "cvss_score": 4.9,
      "severity": "MEDIUM",
      "summary": "A read buffer overrun can be triggered in X.509 certificate verification,\nspecifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a\nCA to have signed the malicious certificate or for the application to\ncontinue certificate verification despite failure to construct a path\nto a trusted issuer.\n\nThe read buffer overrun might result in a crash which could lead to\na denial of service attack. In theory it could also result in the disclosure\nof private memory contents (such as private keys, or sensitive plaintext)\nalthough we are not aware of any working exploit leading to memory\ncontents disclosure as of the time of release of this advisory.\n\nIn a TLS client, this can be triggered by connecting to a malicious\nserver. In a TLS server, this can be triggered if the server requests\nclient authentication and a malicious client connects.",
      "published_date": "2023-02-24 15:15:11.98+00:00"
    },
    {
      "cve_id": "CVE-2022-40735",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.",
      "public_date": "2022-11-14 23:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.",
      "published_date": "2022-11-14 23:15:11.423+00:00"
    },
    {
      "cve_id": "CVE-2022-3996",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function. Update (31 March 2023): The description of the policy processing enablement was corrected based on CVE-2023-0466.",
      "public_date": "2022-12-13 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "If an X.509 certificate contains a malformed policy constraint and\npolicy processing is enabled, then a write lock will be taken twice\nrecursively.  On some operating systems (most widely: Windows) this\nresults in a denial of service when the affected process hangs.  Policy\nprocessing being enabled on a publicly facing server is not considered\nto be a common setup.\n\nPolicy processing is enabled by passing the `-policy'\nargument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.\n\nUpdate (31 March 2023): The description of the policy processing enablement\nwas corrected based on CVE-2023-0466.",
      "published_date": "2022-12-13 16:15:22.007+00:00"
    },
    {
      "cve_id": "CVE-2022-3786",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
      "public_date": "2022-11-01 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.\n\n",
      "published_date": "2022-11-01 18:15:11.047+00:00"
    },
    {
      "cve_id": "CVE-2022-3602",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",
      "public_date": "2022-11-01 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",
      "published_date": "2022-11-01 18:15:10.983+00:00"
    },
    {
      "cve_id": "CVE-2022-3358",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation function will match the NULL cipher as being equivalent and will fetch this from the available providers. This will succeed if the default provider has been loaded (or if a third party provider has been loaded that offers this cipher). Using the NULL cipher means that the plaintext is emitted as the ciphertext. Applications are only affected by this issue if they call EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an encryption/decryption initialisation function. Applications that only use SSL/TLS are not impacted by this issue. Fixed in OpenSSL 3.0.6 (Affected 3.0.0-3.0.5).",
      "public_date": "2022-10-11 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation function will match the NULL cipher as being equivalent and will fetch this from the available providers. This will succeed if the default provider has been loaded (or if a third party provider has been loaded that offers this cipher). Using the NULL cipher means that the plaintext is emitted as the ciphertext. Applications are only affected by this issue if they call EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an encryption/decryption initialisation function. Applications that only use SSL/TLS are not impacted by this issue. Fixed in OpenSSL 3.0.6 (Affected 3.0.0-3.0.5).",
      "published_date": "2022-10-11 15:15:10.233+00:00"
    },
    {
      "cve_id": "CVE-2022-2274",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The OpenSSL 3.0.4 release introduced a serious bug in the RSA implementation for X86_64 CPUs supporting the AVX512IFMA instructions. This issue makes the RSA implementation with 2048 bit private keys incorrect on such machines and memory corruption will happen during the computation. As a consequence of the memory corruption an attacker may be able to trigger a remote code execution on the machine performing the computation. SSL/TLS servers or other servers using 2048 bit RSA private keys running on machines supporting AVX512IFMA instructions of the X86_64 architecture are affected by this issue.",
      "public_date": "2022-07-01 08:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "The OpenSSL 3.0.4 release introduced a serious bug in the RSA implementation for X86_64 CPUs supporting the AVX512IFMA instructions. This issue makes the RSA implementation with 2048 bit private keys incorrect on such machines and memory corruption will happen during the computation. As a consequence of the memory corruption an attacker may be able to trigger a remote code execution on the machine performing the computation. SSL/TLS servers or other servers using 2048 bit RSA private keys running on machines supporting AVX512IFMA instructions of the X86_64 architecture are affected by this issue.",
      "published_date": "2022-07-01 08:15:07.687+00:00"
    },
    {
      "cve_id": "CVE-2022-2097",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
      "public_date": "2022-07-05 11:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
      "published_date": "2022-07-05 11:15:08.34+00:00"
    },
    {
      "cve_id": "CVE-2022-2068",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
      "public_date": "2022-06-21 15:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
      "published_date": "2022-06-21 15:15:09.06+00:00"
    },
    {
      "cve_id": "CVE-2022-1473",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "public_date": "2022-05-03 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "published_date": "2022-05-03 16:15:18.957+00:00"
    },
    {
      "cve_id": "CVE-2022-1434",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "public_date": "2022-05-03 16:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "published_date": "2022-05-03 16:15:18.917+00:00"
    },
    {
      "cve_id": "CVE-2022-1343",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The function `OCSP_basic_verify` verifies the signer certificate on an OCSP response. In the case where the (non-default) flag OCSP_NOCHECKS is used then the response will be positive (meaning a successful verification) even in the case where the response signing certificate fails to verify. It is anticipated that most users of `OCSP_basic_verify` will not use the OCSP_NOCHECKS flag. In this case the `OCSP_basic_verify` function will return a negative value (indicating a fatal error) in the case of a certificate verification failure. The normal expected return value in this case would be 0. This issue also impacts the command line OpenSSL \"ocsp\" application. When verifying an ocsp response with the \"-no_cert_checks\" option the command line application will report that the verification is successful even though it has in fact failed. In this case the incorrect successful response will also be accompanied by error messages showing the failure and contradicting the apparently successful result. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "public_date": "2022-05-03 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "The function `OCSP_basic_verify` verifies the signer certificate on an OCSP response. In the case where the (non-default) flag OCSP_NOCHECKS is used then the response will be positive (meaning a successful verification) even in the case where the response signing certificate fails to verify. It is anticipated that most users of `OCSP_basic_verify` will not use the OCSP_NOCHECKS flag. In this case the `OCSP_basic_verify` function will return a negative value (indicating a fatal error) in the case of a certificate verification failure. The normal expected return value in this case would be 0. This issue also impacts the command line OpenSSL \"ocsp\" application. When verifying an ocsp response with the \"-no_cert_checks\" option the command line application will report that the verification is successful even though it has in fact failed. In this case the incorrect successful response will also be accompanied by error messages showing the failure and contradicting the apparently successful result. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "published_date": "2022-05-03 16:15:18.873+00:00"
    },
    {
      "cve_id": "CVE-2022-1292",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
      "public_date": "2022-05-03 16:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
      "published_date": "2022-05-03 16:15:18.823+00:00"
    },
    {
      "cve_id": "CVE-2022-0778",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
      "public_date": "2022-03-15 17:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
      "published_date": "2022-03-15 17:15:08.513+00:00"
    },
    {
      "cve_id": "CVE-2021-4160",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
      "public_date": "2022-01-28 22:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
      "published_date": "2022-01-28 22:15:15.133+00:00"
    },
    {
      "cve_id": "CVE-2021-4044",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Internally libssl in OpenSSL calls X509_verify_cert() on the client side to verify a certificate supplied by a server. That function may return a negative return value to indicate an internal error (for example out of memory). Such a negative return value is mishandled by OpenSSL and will cause an IO function (such as SSL_connect() or SSL_do_handshake()) to not indicate success and a subsequent call to SSL_get_error() to return the value SSL_ERROR_WANT_RETRY_VERIFY. This return value is only supposed to be returned by OpenSSL if the application has previously called SSL_CTX_set_cert_verify_callback(). Since most applications do not do this the SSL_ERROR_WANT_RETRY_VERIFY return value from SSL_get_error() will be totally unexpected and applications may not behave correctly as a result. The exact behaviour will depend on the application but it could result in crashes, infinite loops or other similar incorrect responses. This issue is made more serious in combination with a separate bug in OpenSSL 3.0 that will cause X509_verify_cert() to indicate an internal error when processing a certificate chain. This will occur where a certificate does not include the Subject Alternative Name extension but where a Certificate Authority has enforced name constraints. This issue can occur even with valid chains. By combining the two issues an attacker could induce incorrect, application dependent behaviour. Fixed in OpenSSL 3.0.1 (Affected 3.0.0).",
      "public_date": "2021-12-14 19:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Internally libssl in OpenSSL calls X509_verify_cert() on the client side to verify a certificate supplied by a server. That function may return a negative return value to indicate an internal error (for example out of memory). Such a negative return value is mishandled by OpenSSL and will cause an IO function (such as SSL_connect() or SSL_do_handshake()) to not indicate success and a subsequent call to SSL_get_error() to return the value SSL_ERROR_WANT_RETRY_VERIFY. This return value is only supposed to be returned by OpenSSL if the application has previously called SSL_CTX_set_cert_verify_callback(). Since most applications do not do this the SSL_ERROR_WANT_RETRY_VERIFY return value from SSL_get_error() will be totally unexpected and applications may not behave correctly as a result. The exact behaviour will depend on the application but it could result in crashes, infinite loops or other similar incorrect responses. This issue is made more serious in combination with a separate bug in OpenSSL 3.0 that will cause X509_verify_cert() to indicate an internal error when processing a certificate chain. This will occur where a certificate does not include the Subject Alternative Name extension but where a Certificate Authority has enforced name constraints. This issue can occur even with valid chains. By combining the two issues an attacker could induce incorrect, application dependent behaviour. Fixed in OpenSSL 3.0.1 (Affected 3.0.0).",
      "published_date": "2021-12-14 19:15:07.807+00:00"
    },
    {
      "cve_id": "CVE-2021-3712",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
      "public_date": "2021-08-24 15:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
      "published_date": "2021-08-24 15:15:09.533+00:00"
    },
    {
      "cve_id": "CVE-2021-3711",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
      "public_date": "2021-08-24 15:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
      "published_date": "2021-08-24 15:15:09.133+00:00"
    },
    {
      "cve_id": "CVE-2021-3450",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
      "public_date": "2021-03-25 15:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
      "published_date": "2021-03-25 15:15:13.56+00:00"
    },
    {
      "cve_id": "CVE-2021-3449",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
      "public_date": "2021-03-25 15:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
      "published_date": "2021-03-25 15:15:13.45+00:00"
    },
    {
      "cve_id": "CVE-2021-23841",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "public_date": "2021-02-16 17:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "published_date": "2021-02-16 17:15:13.377+00:00"
    },
    {
      "cve_id": "CVE-2021-23840",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "public_date": "2021-02-16 17:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
      "published_date": "2021-02-16 17:15:13.3+00:00"
    },
    {
      "cve_id": "CVE-2021-23839",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x).",
      "public_date": "2021-02-16 17:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x).",
      "published_date": "2021-02-16 17:15:13.19+00:00"
    },
    {
      "cve_id": "CVE-2020-1971",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
      "public_date": "2020-12-08 16:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
      "published_date": "2020-12-08 16:15:11.73+00:00"
    },
    {
      "cve_id": "CVE-2020-1968",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The Raccoon attack exploits a flaw in the TLS specification which can lead to an attacker being able to compute the pre-master secret in connections which have used a Diffie-Hellman (DH) based ciphersuite. In such a case this would result in the attacker being able to eavesdrop on all encrypted communications sent over that TLS connection. The attack can only be exploited if an implementation re-uses a DH secret across multiple TLS connections. Note that this issue only impacts DH ciphersuites and not ECDH ciphersuites. This issue affects OpenSSL 1.0.2 which is out of support and no longer receiving public updates. OpenSSL 1.1.1 is not vulnerable to this issue. Fixed in OpenSSL 1.0.2w (Affected 1.0.2-1.0.2v).",
      "public_date": "2020-09-09 14:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "The Raccoon attack exploits a flaw in the TLS specification which can lead to an attacker being able to compute the pre-master secret in connections which have used a Diffie-Hellman (DH) based ciphersuite. In such a case this would result in the attacker being able to eavesdrop on all encrypted communications sent over that TLS connection. The attack can only be exploited if an implementation re-uses a DH secret across multiple TLS connections. Note that this issue only impacts DH ciphersuites and not ECDH ciphersuites. This issue affects OpenSSL 1.0.2 which is out of support and no longer receiving public updates. OpenSSL 1.1.1 is not vulnerable to this issue. Fixed in OpenSSL 1.0.2w (Affected 1.0.2-1.0.2v).",
      "published_date": "2020-09-09 14:15:12.507+00:00"
    },
    {
      "cve_id": "CVE-2020-1967",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
      "public_date": "2020-04-21 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
      "published_date": "2020-04-21 14:15:11.287+00:00"
    },
    {
      "cve_id": "CVE-2019-1563",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "public_date": "2019-09-10 17:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "published_date": "2019-09-10 17:15:11.89+00:00"
    },
    {
      "cve_id": "CVE-2019-1559",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
      "public_date": "2019-02-27 23:29:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
      "published_date": "2019-02-27 23:29:00.277+00:00"
    },
    {
      "cve_id": "CVE-2019-1552",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "OpenSSL has internal defaults for a directory tree where it can find a configuration file as well as certificates used for verification in TLS. This directory is most commonly referred to as OPENSSLDIR, and is configurable with the --prefix / --openssldir configuration options. For OpenSSL versions 1.1.0 and 1.1.1, the mingw configuration targets assume that resulting programs and libraries are installed in a Unix-like environment and the default prefix for program installation as well as for OPENSSLDIR should be '/usr/local'. However, mingw programs are Windows programs, and as such, find themselves looking at sub-directories of 'C:/usr/local', which may be world writable, which enables untrusted users to modify OpenSSL's default configuration, insert CA certificates, modify (or even replace) existing engine modules, etc. For OpenSSL 1.0.2, '/usr/local/ssl' is used as default for OPENSSLDIR on all Unix and Windows targets, including Visual C builds. However, some build instructions for the diverse Windows targets on 1.0.2 encourage you to specify your own --prefix. OpenSSL versions 1.1.1, 1.1.0 and 1.0.2 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "public_date": "2019-07-30 17:15:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "OpenSSL has internal defaults for a directory tree where it can find a configuration file as well as certificates used for verification in TLS. This directory is most commonly referred to as OPENSSLDIR, and is configurable with the --prefix / --openssldir configuration options. For OpenSSL versions 1.1.0 and 1.1.1, the mingw configuration targets assume that resulting programs and libraries are installed in a Unix-like environment and the default prefix for program installation as well as for OPENSSLDIR should be '/usr/local'. However, mingw programs are Windows programs, and as such, find themselves looking at sub-directories of 'C:/usr/local', which may be world writable, which enables untrusted users to modify OpenSSL's default configuration, insert CA certificates, modify (or even replace) existing engine modules, etc. For OpenSSL 1.0.2, '/usr/local/ssl' is used as default for OPENSSLDIR on all Unix and Windows targets, including Visual C builds. However, some build instructions for the diverse Windows targets on 1.0.2 encourage you to specify your own --prefix. OpenSSL versions 1.1.1, 1.1.0 and 1.0.2 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "published_date": "2019-07-30 17:15:12.78+00:00"
    },
    {
      "cve_id": "CVE-2019-1551",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
      "public_date": "2019-12-06 18:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
      "published_date": "2019-12-06 18:15:12.84+00:00"
    },
    {
      "cve_id": "CVE-2019-1549",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "OpenSSL 1.1.1 introduced a rewritten random number generator (RNG). This was intended to include protection in the event of a fork() system call in order to ensure that the parent and child processes did not share the same RNG state. However this protection was not being used in the default case. A partial mitigation for this issue is that the output from a high precision timer is mixed into the RNG state so the likelihood of a parent and child process sharing state is significantly reduced. If an application already calls OPENSSL_init_crypto() explicitly using OPENSSL_INIT_ATFORK then this problem does not occur at all. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c).",
      "public_date": "2019-09-10 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "OpenSSL 1.1.1 introduced a rewritten random number generator (RNG). This was intended to include protection in the event of a fork() system call in order to ensure that the parent and child processes did not share the same RNG state. However this protection was not being used in the default case. A partial mitigation for this issue is that the output from a high precision timer is mixed into the RNG state so the likelihood of a parent and child process sharing state is significantly reduced. If an application already calls OPENSSL_init_crypto() explicitly using OPENSSL_INIT_ATFORK then this problem does not occur at all. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c).",
      "published_date": "2019-09-10 17:15:11.813+00:00"
    },
    {
      "cve_id": "CVE-2019-1547",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "public_date": "2019-09-10 17:15:00+00:00",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).",
      "published_date": "2019-09-10 17:15:11.75+00:00"
    },
    {
      "cve_id": "CVE-2019-1543",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input for every encryption operation. RFC 7539 specifies that the nonce value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length and front pads the nonce with 0 bytes if it is less than 12 bytes. However it also incorrectly allows a nonce to be set of up to 16 bytes. In this case only the last 12 bytes are significant and any additional leading bytes are ignored. It is a requirement of using this cipher that nonce values are unique. Messages encrypted using a reused nonce value are susceptible to serious confidentiality and integrity attacks. If an application changes the default nonce length to be longer than 12 bytes and then makes a change to the leading bytes of the nonce expecting the new value to be a new unique nonce then such an application could inadvertently encrypt messages with a reused nonce. Additionally the ignored bytes in a long nonce are not covered by the integrity guarantee of this cipher. Any application that relies on the integrity of these ignored leading bytes of a long nonce may be further affected. Any OpenSSL internal use of this cipher, including in SSL/TLS, is safe because no such use sets such a long nonce value. However user applications that use this cipher directly and set a non-default nonce length to be longer than 12 bytes may be vulnerable. OpenSSL versions 1.1.1 and 1.1.0 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1c (Affected 1.1.1-1.1.1b). Fixed in OpenSSL 1.1.0k (Affected 1.1.0-1.1.0j).",
      "public_date": "2019-03-06 21:29:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input for every encryption operation. RFC 7539 specifies that the nonce value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length and front pads the nonce with 0 bytes if it is less than 12 bytes. However it also incorrectly allows a nonce to be set of up to 16 bytes. In this case only the last 12 bytes are significant and any additional leading bytes are ignored. It is a requirement of using this cipher that nonce values are unique. Messages encrypted using a reused nonce value are susceptible to serious confidentiality and integrity attacks. If an application changes the default nonce length to be longer than 12 bytes and then makes a change to the leading bytes of the nonce expecting the new value to be a new unique nonce then such an application could inadvertently encrypt messages with a reused nonce. Additionally the ignored bytes in a long nonce are not covered by the integrity guarantee of this cipher. Any application that relies on the integrity of these ignored leading bytes of a long nonce may be further affected. Any OpenSSL internal use of this cipher, including in SSL/TLS, is safe because no such use sets such a long nonce value. However user applications that use this cipher directly and set a non-default nonce length to be longer than 12 bytes may be vulnerable. OpenSSL versions 1.1.1 and 1.1.0 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1c (Affected 1.1.1-1.1.1b). Fixed in OpenSSL 1.1.0k (Affected 1.1.0-1.1.0j).",
      "published_date": "2019-03-06 21:29:00.247+00:00"
    },
    {
      "cve_id": "CVE-2018-5407",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Simultaneous Multi-threading (SMT) in processors can enable local users to exploit software vulnerable to timing attacks via a side-channel timing attack on 'port contention'.",
      "public_date": "2018-11-15 21:29:00+00:00",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Simultaneous Multi-threading (SMT) in processors can enable local users to exploit software vulnerable to timing attacks via a side-channel timing attack on 'port contention'.",
      "published_date": "2018-11-15 21:29:00.233+00:00"
    },
    {
      "cve_id": "CVE-2018-0739",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Constructed ASN.1 types with a recursive definition (such as can be found in PKCS7) could eventually exceed the stack given malicious input with excessive recursion. This could result in a Denial Of Service attack. There are no such structures used within SSL/TLS that come from untrusted sources so this is considered safe. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g). Fixed in OpenSSL 1.0.2o (Affected 1.0.2b-1.0.2n).",
      "public_date": "2018-03-27 21:29:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Constructed ASN.1 types with a recursive definition (such as can be found in PKCS7) could eventually exceed the stack given malicious input with excessive recursion. This could result in a Denial Of Service attack. There are no such structures used within SSL/TLS that come from untrusted sources so this is considered safe. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g). Fixed in OpenSSL 1.0.2o (Affected 1.0.2b-1.0.2n).",
      "published_date": "2018-03-27 21:29:00.673+00:00"
    },
    {
      "cve_id": "CVE-2018-0737",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to a cache timing side channel attack. An attacker with sufficient access to mount cache timing attacks during the RSA key generation process could recover the private key. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2b-1.0.2o).",
      "public_date": "2018-04-16 18:29:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL RSA Key generation algorithm has been shown to be vulnerable to a cache timing side channel attack. An attacker with sufficient access to mount cache timing attacks during the RSA key generation process could recover the private key. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2b-1.0.2o).",
      "published_date": "2018-04-16 18:29:00.267+00:00"
    },
    {
      "cve_id": "CVE-2018-0735",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.1.1a (Affected 1.1.1).",
      "public_date": "2018-10-29 13:29:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.1.1a (Affected 1.1.1).",
      "published_date": "2018-10-29 13:29:00.263+00:00"
    },
    {
      "cve_id": "CVE-2018-0734",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).",
      "public_date": "2018-10-30 12:29:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).",
      "published_date": "2018-10-30 12:29:00.257+00:00"
    },
    {
      "cve_id": "CVE-2018-0733",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Because of an implementation bug the PA-RISC CRYPTO_memcmp function is effectively reduced to only comparing the least significant bit of each byte. This allows an attacker to forge messages that would be considered as authenticated in an amount of tries lower than that guaranteed by the security claims of the scheme. The module can only be compiled by the HP-UX assembler, so that only HP-UX PA-RISC targets are affected. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g).",
      "public_date": "2018-03-27 21:29:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Because of an implementation bug the PA-RISC CRYPTO_memcmp function is effectively reduced to only comparing the least significant bit of each byte. This allows an attacker to forge messages that would be considered as authenticated in an amount of tries lower than that guaranteed by the security claims of the scheme. The module can only be compiled by the HP-UX assembler, so that only HP-UX PA-RISC targets are affected. Fixed in OpenSSL 1.1.0h (Affected 1.1.0-1.1.0g).",
      "published_date": "2018-03-27 21:29:00.61+00:00"
    },
    {
      "cve_id": "CVE-2018-0732",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "During key agreement in a TLS handshake using a DH(E) based ciphersuite a malicious server can send a very large prime value to the client. This will cause the client to spend an unreasonably long period of time generating a key for this prime resulting in a hang until the client has finished. This could be exploited in a Denial Of Service attack. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2-1.0.2o).",
      "public_date": "2018-06-12 13:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "During key agreement in a TLS handshake using a DH(E) based ciphersuite a malicious server can send a very large prime value to the client. This will cause the client to spend an unreasonably long period of time generating a key for this prime resulting in a hang until the client has finished. This could be exploited in a Denial Of Service attack. Fixed in OpenSSL 1.1.0i-dev (Affected 1.1.0-1.1.0h). Fixed in OpenSSL 1.0.2p-dev (Affected 1.0.2-1.0.2o).",
      "published_date": "2018-06-12 13:29:00.207+00:00"
    },
    {
      "cve_id": "CVE-2018-0495",
      "source": "GOST",
      "affected_package": "openssl",
      "installed_version": "1.0.2g-1ubuntu4.20",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
      "public_date": "2018-06-13 23:29:00+00:00",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the _gcry_ecc_ecdsa_sign function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.",
      "published_date": "2018-06-13 23:29:00.333+00:00"
    },
    {
      "cve_id": "CVE-2025-40909",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Perl threads have a working directory race condition where file operations may target unintended paths.  If a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone\u00a0that handle for the new thread, which is visible from any third (or\u00a0more) thread already running.  This may lead to unintended operations\u00a0such as loading code or accessing files from unexpected locations,\u00a0which a local attacker may be able to exploit.  The bug was introduced in commit\u00a011a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
      "public_date": "2025-05-30 13:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Perl threads have a working directory race condition where file operations may target unintended paths.\n\nIf a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone\u00a0that handle for the new thread, which is visible from any third (or\u00a0more) thread already running. \n\nThis may lead to unintended operations\u00a0such as loading code or accessing files from unexpected locations,\u00a0which a local attacker may be able to exploit.\n\nThe bug was introduced in commit\u00a011a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
      "published_date": "2025-05-30 13:15:22.35+00:00"
    },
    {
      "cve_id": "CVE-2024-56406",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A heap buffer overflow vulnerability was discovered in Perl.  Release branches 5.34, 5.36, 5.38 and 5.40 are affected, including development versions from 5.33.1 through 5.41.10.  When there are non-ASCII bytes in the left-hand-side of the `tr` operator, `S_do_trans_invmap` can overflow the destination pointer `d`.  $ perl -e '$_ = \"\\x{FF}\" x 1000000; tr/\\xFF/\\x{100}/;' Segmentation fault (core dumped)  It is believed that this vulnerability can enable Denial of Service and possibly Code Execution attacks on platforms that lack sufficient defenses.",
      "public_date": "2025-04-13 14:15:00+00:00",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "A heap buffer overflow vulnerability was discovered in Perl. \n\nRelease branches 5.34, 5.36, 5.38 and 5.40 are affected, including development versions from 5.33.1 through 5.41.10.\n\nWhen there are non-ASCII bytes in the left-hand-side of the `tr` operator, `S_do_trans_invmap` can overflow the destination pointer `d`.\n\n\u00a0 \u00a0$ perl -e '$_ = \"\\x{FF}\" x 1000000; tr/\\xFF/\\x{100}/;' \n\u00a0 \u00a0Segmentation fault (core dumped)\n\nIt is believed that this vulnerability can enable Denial of Service and possibly Code Execution attacks on platforms that lack sufficient defenses.",
      "published_date": "2025-04-13 14:15:14.527+00:00"
    },
    {
      "cve_id": "CVE-2023-47100",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Perl before 5.38.2, S_parse_uniprop_string in regcomp.c can write to unallocated space because a property name associated with a \\p{...} regular expression construct is mishandled. The earliest affected version is 5.30.0.",
      "public_date": "2023-12-02 23:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Perl before 5.38.2, S_parse_uniprop_string in regcomp.c can write to unallocated space because a property name associated with a \\p{...} regular expression construct is mishandled. The earliest affected version is 5.30.0.",
      "published_date": "2023-12-02 23:15:07.187+00:00"
    },
    {
      "cve_id": "CVE-2023-47039",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "A vulnerability was found in Perl. This security issue occurs while Perl for Windows relies on the system path environment variable to find the shell (`cmd.exe`). When running an executable that uses the Windows Perl interpreter, Perl attempts to find and execute `cmd.exe` within the operating system. However, due to path search order issues, Perl initially looks for cmd.exe in the current working directory. This flaw allows an attacker with limited privileges to place`cmd.exe` in locations with weak permissions, such as `C:\\ProgramData`. By doing so, arbitrary code can be executed when an administrator attempts to use this executable from these compromised locations.",
      "public_date": "2024-01-02 06:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A vulnerability was found in Perl. This security issue occurs while Perl for Windows relies on the system path environment variable to find the shell (`cmd.exe`). When running an executable that uses the Windows Perl interpreter, Perl attempts to find and execute `cmd.exe` within the operating system. However, due to path search order issues, Perl initially looks for cmd.exe in the current working directory. This flaw allows an attacker with limited privileges to place`cmd.exe` in locations with weak permissions, such as `C:\\ProgramData`. By doing so, arbitrary code can be executed when an administrator attempts to use this executable from these compromised locations.",
      "published_date": "2024-01-02 06:15:13.737+00:00"
    },
    {
      "cve_id": "CVE-2023-47038",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
      "public_date": "2023-12-18 14:15:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
      "published_date": "2023-12-18 14:15:08.933+00:00"
    },
    {
      "cve_id": "CVE-2023-31486",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
      "public_date": "2023-04-29 00:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
      "published_date": "2023-04-29 00:15:09.083+00:00"
    },
    {
      "cve_id": "CVE-2023-31484",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.",
      "public_date": "2023-04-29 00:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.",
      "published_date": "2023-04-29 00:15:09+00:00"
    },
    {
      "cve_id": "CVE-2022-48522",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "In Perl 5.34.0, function S_find_uninit_var in sv.c has a stack-based crash that can lead to remote code execution or local privilege escalation.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Perl 5.34.0, function S_find_uninit_var in sv.c has a stack-based crash that can lead to remote code execution or local privilege escalation.",
      "published_date": "2023-08-22 19:16:31.153+00:00"
    },
    {
      "cve_id": "CVE-2021-36770",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Encode.pm, as distributed in Perl through 5.34.0, allows local users to gain privileges via a Trojan horse Encode::ConfigLocal library (in the current working directory) that preempts dynamic module loading. Exploitation requires an unusual configuration, and certain 2021 versions of Encode.pm (3.05 through 3.11). This issue occurs because the || operator evaluates @INC in a scalar context, and thus @INC has only an integer value.",
      "public_date": "2021-08-11 23:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Encode.pm, as distributed in Perl through 5.34.0, allows local users to gain privileges via a Trojan horse Encode::ConfigLocal library (in the current working directory) that preempts dynamic module loading. Exploitation requires an unusual configuration, and certain 2021 versions of Encode.pm (3.05 through 3.11). This issue occurs because the || operator evaluates @INC in a scalar context, and thus @INC has only an integer value.",
      "published_date": "2021-08-11 23:15:07.707+00:00"
    },
    {
      "cve_id": "CVE-2020-16156",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "CPAN 2.28 allows Signature Verification Bypass.",
      "public_date": "2021-12-13 18:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "CPAN 2.28 allows Signature Verification Bypass.",
      "published_date": "2021-12-13 18:15:07.943+00:00"
    },
    {
      "cve_id": "CVE-2020-12723",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "regcomp.c in Perl before 5.30.3 allows a buffer overflow via a crafted regular expression because of recursive S_study_chunk calls.",
      "public_date": "2020-06-05 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "regcomp.c in Perl before 5.30.3 allows a buffer overflow via a crafted regular expression because of recursive S_study_chunk calls.",
      "published_date": "2020-06-05 15:15:10.8+00:00"
    },
    {
      "cve_id": "CVE-2020-10878",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Perl before 5.30.3 has an integer overflow related to mishandling of a \"PL_regkind[OP(n)] == NOTHING\" situation. A crafted regular expression could lead to malformed bytecode with a possibility of instruction injection.",
      "public_date": "2020-06-05 14:15:00+00:00",
      "cvss_score": 8.6,
      "severity": "HIGH",
      "summary": "Perl before 5.30.3 has an integer overflow related to mishandling of a \"PL_regkind[OP(n)] == NOTHING\" situation. A crafted regular expression could lead to malformed bytecode with a possibility of instruction injection.",
      "published_date": "2020-06-05 14:15:10.527+00:00"
    },
    {
      "cve_id": "CVE-2020-10543",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Perl before 5.30.3 on 32-bit platforms allows a heap-based buffer overflow because nested regular expression quantifiers have an integer overflow.",
      "public_date": "2020-06-05 14:15:00+00:00",
      "cvss_score": 8.2,
      "severity": "HIGH",
      "summary": "Perl before 5.30.3 on 32-bit platforms allows a heap-based buffer overflow because nested regular expression quantifiers have an integer overflow.",
      "published_date": "2020-06-05 14:15:10.467+00:00"
    },
    {
      "cve_id": "CVE-2018-6913",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Heap-based buffer overflow in the pack function in Perl before 5.26.2 allows context-dependent attackers to execute arbitrary code via a large item count.",
      "public_date": "2018-04-17 20:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Heap-based buffer overflow in the pack function in Perl before 5.26.2 allows context-dependent attackers to execute arbitrary code via a large item count.",
      "published_date": "2018-04-17 20:29:00.66+00:00"
    },
    {
      "cve_id": "CVE-2018-6798",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Perl 5.22 through 5.26. Matching a crafted locale dependent regular expression can cause a heap-based buffer over-read and potentially information disclosure.",
      "public_date": "2018-04-17 20:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Perl 5.22 through 5.26. Matching a crafted locale dependent regular expression can cause a heap-based buffer over-read and potentially information disclosure.",
      "published_date": "2018-04-17 20:29:00.58+00:00"
    },
    {
      "cve_id": "CVE-2018-6797",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Perl 5.18 through 5.26. A crafted regular expression can cause a heap-based buffer overflow, with control over the bytes written.",
      "public_date": "2018-04-17 20:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "An issue was discovered in Perl 5.18 through 5.26. A crafted regular expression can cause a heap-based buffer overflow, with control over the bytes written.",
      "published_date": "2018-04-17 20:29:00.52+00:00"
    },
    {
      "cve_id": "CVE-2018-18314",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Perl before 5.26.3 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
      "public_date": "2018-12-07 21:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Perl before 5.26.3 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
      "published_date": "2018-12-07 21:29:00.92+00:00"
    },
    {
      "cve_id": "CVE-2018-18313",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Perl before 5.26.3 has a buffer over-read via a crafted regular expression that triggers disclosure of sensitive information from process memory.",
      "public_date": "2018-12-07 21:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "Perl before 5.26.3 has a buffer over-read via a crafted regular expression that triggers disclosure of sensitive information from process memory.",
      "published_date": "2018-12-07 21:29:00.717+00:00"
    },
    {
      "cve_id": "CVE-2018-18312",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Perl before 5.26.3 and 5.28.0 before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
      "public_date": "2018-12-05 22:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Perl before 5.26.3 and 5.28.0 before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
      "published_date": "2018-12-05 22:29:00.303+00:00"
    },
    {
      "cve_id": "CVE-2018-18311",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Perl before 5.26.3 and 5.28.x before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
      "public_date": "2018-12-07 21:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Perl before 5.26.3 and 5.28.x before 5.28.1 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
      "published_date": "2018-12-07 21:29:00.407+00:00"
    },
    {
      "cve_id": "CVE-2018-12015",
      "source": "GOST",
      "affected_package": "perl",
      "installed_version": "5.22.1-9ubuntu0.9",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Perl through 5.26.2, the Archive::Tar module allows remote attackers to bypass a directory-traversal protection mechanism, and overwrite arbitrary files, via an archive file containing a symlink and a regular file with the same name.",
      "public_date": "2018-06-07 13:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Perl through 5.26.2, the Archive::Tar module allows remote attackers to bypass a directory-traversal protection mechanism, and overwrite arbitrary files, via an archive file containing a symlink and a regular file with the same name.",
      "published_date": "2018-06-07 13:29:00.24+00:00"
    },
    {
      "cve_id": "CVE-2023-41105",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
      "public_date": "2023-08-23 07:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
      "published_date": "2023-08-23 07:15:08.59+00:00"
    },
    {
      "cve_id": "CVE-2023-38898",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue in Python cpython v.3.7 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task component. NOTE: this is disputed by the vendor because (1) neither 3.7 nor any other release is affected (it is a bug in some 3.12 pre-releases); (2) there are no common scenarios in which an adversary can call _asyncio._swap_current_task but does not already have the ability to call arbitrary functions; and (3) there are no common scenarios in which sensitive information, which is not already accessible to an adversary, becomes accessible through this bug.",
      "public_date": "2023-08-15 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue in Python cpython v.3.7 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task component. NOTE: this is disputed by the vendor because (1) neither 3.7 nor any other release is affected (it is a bug in some 3.12 pre-releases); (2) there are no common scenarios in which an adversary can call _asyncio._swap_current_task but does not already have the ability to call arbitrary functions; and (3) there are no common scenarios in which sensitive information, which is not already accessible to an adversary, becomes accessible through this bug.",
      "published_date": "2023-08-15 17:15:12.187+00:00"
    },
    {
      "cve_id": "CVE-2023-36632",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
      "public_date": "2023-06-25 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
      "published_date": "2023-06-25 18:15:09.313+00:00"
    },
    {
      "cve_id": "CVE-2023-33595",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
      "public_date": "2023-06-07 20:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
      "published_date": "2023-06-07 20:15:09.92+00:00"
    },
    {
      "cve_id": "CVE-2022-48566",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "published_date": "2023-08-22 19:16:32.087+00:00"
    },
    {
      "cve_id": "CVE-2022-48565",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "published_date": "2023-08-22 19:16:32.007+00:00"
    },
    {
      "cve_id": "CVE-2022-48564",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
      "published_date": "2023-08-22 19:16:31.927+00:00"
    },
    {
      "cve_id": "CVE-2022-48560",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "published_date": "2023-08-22 19:16:31.827+00:00"
    },
    {
      "cve_id": "CVE-2022-45061",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
      "public_date": "2022-11-09 07:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
      "published_date": "2022-11-09 07:15:09.887+00:00"
    },
    {
      "cve_id": "CVE-2020-10735",
      "source": "GOST",
      "affected_package": "python",
      "installed_version": "2.7.12-1~16.04",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
      "public_date": "2022-09-09 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
      "published_date": "2022-09-09 14:15:08.66+00:00"
    },
    {
      "cve_id": "CVE-2025-50182",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, urllib3 does not control redirects in browsers and Node.js. urllib3 supports being used in a Pyodide runtime utilizing the JavaScript Fetch API or falling back on XMLHttpRequest. This means Python libraries can be used to make HTTP requests from a browser or Node.js. Additionally, urllib3 provides a mechanism to control redirects, but the retries and redirect parameters are ignored with Pyodide; the runtime itself determines redirect behavior. This issue has been patched in version 2.5.0.",
      "public_date": "2025-06-19 02:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, urllib3 does not control redirects in browsers and Node.js. urllib3 supports being used in a Pyodide runtime utilizing the JavaScript Fetch API or falling back on XMLHttpRequest. This means Python libraries can be used to make HTTP requests from a browser or Node.js. Additionally, urllib3 provides a mechanism to control redirects, but the retries and redirect parameters are ignored with Pyodide; the runtime itself determines redirect behavior. This issue has been patched in version 2.5.0.",
      "published_date": "2025-06-19 02:15:17.967+00:00"
    },
    {
      "cve_id": "CVE-2025-50181",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, it is possible to disable redirects for all requests by instantiating a PoolManager and specifying retries in a way that disable redirects. By default, requests and botocore users are not affected. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable. This issue has been patched in version 2.5.0.",
      "public_date": "2025-06-19 01:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, it is possible to disable redirects for all requests by instantiating a PoolManager and specifying retries in a way that disable redirects. By default, requests and botocore users are not affected. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable. This issue has been patched in version 2.5.0.",
      "published_date": "2025-06-19 01:15:24.453+00:00"
    },
    {
      "cve_id": "CVE-2024-37891",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "public_date": "2024-06-17 20:15:00+00:00",
      "cvss_score": 4.4,
      "severity": "MEDIUM",
      "summary": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "published_date": "2024-06-17 20:15:13.45+00:00"
    },
    {
      "cve_id": "CVE-2023-45803",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body. ",
      "public_date": "2023-10-17 20:15:00+00:00",
      "cvss_score": 4.2,
      "severity": "MEDIUM",
      "summary": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body.",
      "published_date": "2023-10-17 20:15:10.07+00:00"
    },
    {
      "cve_id": "CVE-2023-43804",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
      "public_date": "2023-10-04 17:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
      "published_date": "2023-10-04 17:15:10.163+00:00"
    },
    {
      "cve_id": "CVE-2021-33503",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
      "public_date": "2021-06-29 11:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
      "published_date": "2021-06-29 11:15:07.847+00:00"
    },
    {
      "cve_id": "CVE-2021-28363",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
      "public_date": "2021-03-15 18:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "The urllib3 library 1.26.x before 1.26.4 for Python omits SSL certificate validation in some cases involving HTTPS to HTTPS proxies. The initial connection to the HTTPS proxy (if an SSLContext isn't given via proxy_config) doesn't verify the hostname of the certificate. This means certificates for different servers that still validate properly with the default urllib3 SSLContext will be silently accepted.",
      "published_date": "2021-03-15 18:15:19.017+00:00"
    },
    {
      "cve_id": "CVE-2020-7212",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
      "public_date": "2020-03-06 20:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
      "published_date": "2020-03-06 20:15:12.707+00:00"
    },
    {
      "cve_id": "CVE-2020-26137",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.",
      "public_date": "2020-09-30 18:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.",
      "published_date": "2020-09-30 18:15:26.773+00:00"
    },
    {
      "cve_id": "CVE-2019-11324",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.",
      "public_date": "2019-04-18 21:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.",
      "published_date": "2019-04-18 21:29:00.883+00:00"
    },
    {
      "cve_id": "CVE-2019-11236",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter.",
      "public_date": "2019-04-15 15:29:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter.",
      "published_date": "2019-04-15 15:29:00.637+00:00"
    },
    {
      "cve_id": "CVE-2018-25091",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib3 before 1.24.2 does not remove the authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the authorization header to be exposed to unintended hosts or transmitted in cleartext. NOTE: this issue exists because of an incomplete fix for CVE-2018-20060 (which was case-sensitive).",
      "public_date": "2023-10-15 19:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "urllib3 before 1.24.2 does not remove the authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the authorization header to be exposed to unintended hosts or transmitted in cleartext. NOTE: this issue exists because of an incomplete fix for CVE-2018-20060 (which was case-sensitive).",
      "published_date": "2023-10-15 19:15:09.213+00:00"
    },
    {
      "cve_id": "CVE-2018-20060",
      "source": "GOST",
      "affected_package": "python-urllib3",
      "installed_version": "1.13.1-2ubuntu0.16.04.4",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",
      "public_date": "2018-12-11 17:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",
      "published_date": "2018-12-11 17:29:00.38+00:00"
    },
    {
      "cve_id": "CVE-2025-6069",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "public_date": "2025-06-17 14:15:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "published_date": "2025-06-17 14:15:33.677+00:00"
    },
    {
      "cve_id": "CVE-2025-4517",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".   You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 9.4,
      "severity": "CRITICAL",
      "summary": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".\n\n\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.837+00:00"
    },
    {
      "cve_id": "CVE-2025-4516",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "public_date": "2025-05-15 14:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "published_date": "2025-05-15 14:15:31.753+00:00"
    },
    {
      "cve_id": "CVE-2025-4435",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When using a TarFile.errorlevel = 0\u00a0and extracting with a filter the documented behavior is that any filtered members would be skipped and not extracted. However the actual behavior of TarFile.errorlevel = 0\u00a0in affected versions is that the member would still be extracted and not skipped.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "When using a TarFile.errorlevel = 0\u00a0and extracting with a filter the documented behavior is that any filtered members would be skipped and not extracted. However the actual behavior of TarFile.errorlevel = 0\u00a0in affected versions is that the member would still be extracted and not skipped.",
      "published_date": "2025-06-03 13:15:20.63+00:00"
    },
    {
      "cve_id": "CVE-2025-4330",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.   You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.\n\n\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.503+00:00"
    },
    {
      "cve_id": "CVE-2025-4138",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.   You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.\n\n\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.377+00:00"
    },
    {
      "cve_id": "CVE-2025-1795",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "During an address list folding when a separating comma ends up on a folded line and that line is to be unicode-encoded then the separator itself is also unicode-encoded. Expected behavior is that the separating comma remains a plan comma. This can result in the address header being misinterpreted by some mail servers.",
      "public_date": "2025-02-28 19:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "During an address list folding when a separating comma ends up on a folded line and that line is to be unicode-encoded then the separator itself is also unicode-encoded. Expected behavior is that the separating comma remains a plan comma. This can result in the address header being misinterpreted by some mail servers.",
      "published_date": "2025-02-28 19:15:36.55+00:00"
    },
    {
      "cve_id": "CVE-2025-0938",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "public_date": "2025-01-31 18:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "published_date": "2025-01-31 18:15:38.053+00:00"
    },
    {
      "cve_id": "CVE-2024-9287",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "public_date": "2024-10-22 17:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "published_date": "2024-10-22 17:15:06.697+00:00"
    },
    {
      "cve_id": "CVE-2024-8088",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a HIGH severity vulnerability affecting the CPython \"zipfile\" module affecting \"zipfile.Path\". Note that the more common API \"zipfile.ZipFile\" class is unaffected.      When iterating over names of entries in a zip archive (for example, methods of \"zipfile.Path\" like \"namelist()\", \"iterdir()\", etc) the process can be put into an infinite loop with a maliciously crafted zip archive. This defect applies when reading only metadata or extracting the contents of the zip archive. Programs that are not handling user-controlled zip archives are not affected.",
      "public_date": "2024-08-22 19:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "There is a HIGH severity vulnerability affecting the CPython \"zipfile\"\nmodule affecting \"zipfile.Path\". Note that the more common API \"zipfile.ZipFile\" class is unaffected.\n\n\n\n\n\nWhen iterating over names of entries in a zip archive (for example, methods\nof \"zipfile.Path\" like \"namelist()\", \"iterdir()\", etc)\nthe process can be put into an infinite loop with a maliciously crafted\nzip archive. This defect applies when reading only metadata or extracting\nthe contents of the zip archive. Programs that are not handling\nuser-controlled zip archives are not affected.",
      "published_date": "2024-08-22 19:15:09.72+00:00"
    },
    {
      "cve_id": "CVE-2024-7592",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "There is a LOW severity vulnerability affecting CPython, specifically the 'http.cookies' standard library module.   When parsing cookies that contained backslashes for quoted characters in the cookie value, the parser would use an algorithm with quadratic complexity, resulting in excess CPU resources being used while parsing the value.",
      "public_date": "2024-08-19 19:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "There is a LOW severity vulnerability affecting CPython, specifically the\n'http.cookies' standard library module.\n\n\nWhen parsing cookies that contained backslashes for quoted characters in\nthe cookie value, the parser would use an algorithm with quadratic\ncomplexity, resulting in excess CPU resources being used while parsing the\nvalue.",
      "published_date": "2024-08-19 19:15:08.18+00:00"
    },
    {
      "cve_id": "CVE-2024-6923",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.  The email module didn\u2019t properly quote newlines for email headers when serializing an email message allowing for header injection when an email is serialized.",
      "public_date": "2024-08-01 14:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe \nemail module didn\u2019t properly quote newlines for email headers when \nserializing an email message allowing for header injection when an email\n is serialized.",
      "published_date": "2024-08-01 14:15:03.647+00:00"
    },
    {
      "cve_id": "CVE-2024-6232",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.      Regular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "public_date": "2024-09-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "There is a MEDIUM severity vulnerability affecting CPython.\n\n\n\n\n\nRegular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "published_date": "2024-09-03 13:15:05.363+00:00"
    },
    {
      "cve_id": "CVE-2024-5642",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
      "public_date": "2024-06-27 21:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
      "published_date": "2024-06-27 21:15:16.07+00:00"
    },
    {
      "cve_id": "CVE-2024-4032",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The \u201cipaddress\u201d module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \u201cglobally reachable\u201d or \u201cprivate\u201d. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn\u2019t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries. CPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "public_date": "2024-06-17 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The \u201cipaddress\u201d module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \u201cglobally reachable\u201d or \u201cprivate\u201d. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn\u2019t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "published_date": "2024-06-17 15:15:52.517+00:00"
    },
    {
      "cve_id": "CVE-2024-4030",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions. If you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user. This issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
      "public_date": "2024-05-07 21:15:00+00:00",
      "cvss_score": 7.1,
      "severity": "HIGH",
      "summary": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
      "published_date": "2024-05-07 21:15:09.467+00:00"
    },
    {
      "cve_id": "CVE-2024-3220",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "There is a defect in the CPython standard library module \u201cmimetypes\u201d where on Windows the default list of known file locations are writable meaning other users can create invalid files to cause MemoryError to be raised on Python runtime startup or have file extensions be interpreted as the incorrect file type.  This defect is caused by the default locations of Linux and macOS platforms (such as \u201c/etc/mime.types\u201d) also being used on Windows, where they are user-writable locations (\u201cC:\\etc\\mime.types\u201d).  To work-around this issue a user can call mimetypes.init() with an empty list (\u201c[]\u201d) on Windows platforms to avoid using the default list of known file locations.",
      "public_date": "2025-02-14 17:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "There is a defect in the CPython standard library module \u201cmimetypes\u201d where on Windows the default list of known file locations are writable meaning other users can create invalid files to cause MemoryError to be raised on Python runtime startup or have file extensions be interpreted as the incorrect file type.\n\nThis defect is caused by the default locations of Linux and macOS platforms (such as \u201c/etc/mime.types\u201d) also being used on Windows, where they are user-writable locations (\u201cC:\\etc\\mime.types\u201d).\n\nTo work-around this issue a user can call mimetypes.init() with an empty list (\u201c[]\u201d) on Windows platforms to avoid using the default list of known file locations.",
      "published_date": "2025-02-14 17:15:15.567+00:00"
    },
    {
      "cve_id": "CVE-2024-3219",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The \u201csocket\u201d module provides a pure-Python fallback to the socket.socketpair() function for platforms that don\u2019t support AF_UNIX, such as Windows. This pure-Python implementation uses AF_INET or AF_INET6 to create a local connected pair of sockets. The connection between the two sockets was not verified before passing the two sockets back to the user, which leaves the server socket vulnerable to a connection race from a malicious local peer.  Platforms that support AF_UNIX such as Linux and macOS are not affected by this vulnerability. Versions prior to CPython 3.5 are not affected due to the vulnerable API not being included.",
      "public_date": "2024-07-29 22:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "The\n \u201csocket\u201d module provides a pure-Python fallback to the \nsocket.socketpair() function for platforms that don\u2019t support AF_UNIX, \nsuch as Windows. This pure-Python implementation uses AF_INET or \nAF_INET6 to create a local connected pair of sockets. The connection \nbetween the two sockets was not verified before passing the two sockets \nback to the user, which leaves the server socket vulnerable to a \nconnection race from a malicious local peer.\n\nPlatforms that support AF_UNIX such as Linux and macOS are not affected by this vulnerability. Versions prior to CPython 3.5 are not affected due to the vulnerable API not being included.",
      "published_date": "2024-07-29 22:15:04.97+00:00"
    },
    {
      "cve_id": "CVE-2024-12718",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"\u00a0or file permissions (chmod) with filter=\"tar\"\u00a0of files outside the extraction directory. You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"\u00a0or file permissions (chmod) with filter=\"tar\"\u00a0of files outside the extraction directory.\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.183+00:00"
    },
    {
      "cve_id": "CVE-2024-12254",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Starting in Python 3.12.0, the asyncio._SelectorSocketTransport.writelines() method would not \"pause\" writing and signal to the Protocol to drain the buffer to the wire once the write buffer reached the \"high-water mark\". Because of this, Protocols would not periodically drain the write buffer potentially leading to memory exhaustion.      This vulnerability likely impacts a small number of users, you must be using Python 3.12.0 or later, on macOS or Linux, using the asyncio module with protocols, and using .writelines() method which had new zero-copy-on-write behavior in Python 3.12.0 and later. If not all of these factors are true then your usage of Python is unaffected.",
      "public_date": "2024-12-06 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Starting in Python 3.12.0, the asyncio._SelectorSocketTransport.writelines()\n method would not \"pause\" writing and signal to the Protocol to drain \nthe buffer to the wire once the write buffer reached the \"high-water \nmark\". Because of this, Protocols would not periodically drain the write\n buffer potentially leading to memory exhaustion.\n\n\n\n\n\nThis\n vulnerability likely impacts a small number of users, you must be using\n Python 3.12.0 or later, on macOS or Linux, using the asyncio module \nwith protocols, and using .writelines() method which had new \nzero-copy-on-write behavior in Python 3.12.0 and later. If not all of \nthese factors are true then your usage of Python is unaffected.",
      "published_date": "2024-12-06 16:15:20.623+00:00"
    },
    {
      "cve_id": "CVE-2024-11168",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "public_date": "2024-11-12 22:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "published_date": "2024-11-12 22:15:14.92+00:00"
    },
    {
      "cve_id": "CVE-2024-0450",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior. The zipfile module is vulnerable to \u201cquoted-overlap\u201d zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.",
      "public_date": "2024-03-19 16:15:00+00:00",
      "cvss_score": 6.2,
      "severity": "MEDIUM",
      "summary": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to \u201cquoted-overlap\u201d zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.\n\n",
      "published_date": "2024-03-19 16:15:09.18+00:00"
    },
    {
      "cve_id": "CVE-2024-0397",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A defect was discovered in the Python \u201cssl\u201d module where there is a memory race condition with the ssl.SSLContext methods \u201ccert_store_stats()\u201d and \u201cget_ca_certs()\u201d. The race condition can be triggered if the methods are called at the same time as certificates are loaded into the SSLContext, such as during the TLS handshake with a certificate directory configured. This issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "public_date": "2024-06-17 16:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "A defect was discovered in the Python \u201cssl\u201d module where there is a memory\nrace condition with the ssl.SSLContext methods \u201ccert_store_stats()\u201d and\n\u201cget_ca_certs()\u201d. The race condition can be triggered if the methods are\ncalled at the same time as certificates are loaded into the SSLContext,\nsuch as during the TLS handshake with a certificate directory configured.\nThis issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "published_date": "2024-06-17 16:15:10.217+00:00"
    },
    {
      "cve_id": "CVE-2023-6597",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.  The tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.",
      "public_date": "2024-03-19 16:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.\n",
      "published_date": "2024-03-19 16:15:08.743+00:00"
    },
    {
      "cve_id": "CVE-2023-6507",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in CPython 3.12.0 `subprocess` module on POSIX platforms. The issue was fixed in CPython 3.12.1 and does not affect other stable releases. When using the `extra_groups=` parameter with an empty list as a value (ie `extra_groups=[]`) the logic regressed to not call `setgroups(0, NULL)` before calling `exec()`, thus not dropping the original processes' groups before starting the new process. There is no issue when the parameter isn't used or when any value is used besides an empty list. This issue only impacts CPython processes run with sufficient privilege to make the `setgroups` system call (typically `root`).",
      "public_date": "2023-12-08 19:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was found in CPython 3.12.0 `subprocess` module on POSIX platforms. The issue was fixed in CPython 3.12.1 and does not affect other stable releases.\n\nWhen using the `extra_groups=` parameter with an empty list as a value (ie `extra_groups=[]`) the logic regressed to not call `setgroups(0, NULL)` before calling `exec()`, thus not dropping the original processes' groups before starting the new process. There is no issue when the parameter isn't used or when any value is used besides an empty list.\n\nThis issue only impacts CPython processes run with sufficient privilege to make the `setgroups` system call (typically `root`).\n\n",
      "published_date": "2023-12-08 19:15:08.44+00:00"
    },
    {
      "cve_id": "CVE-2023-41105",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
      "public_date": "2023-08-23 07:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
      "published_date": "2023-08-23 07:15:08.59+00:00"
    },
    {
      "cve_id": "CVE-2023-40217",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python before 3.8.18, 3.9.x before 3.9.18, 3.10.x before 3.10.13, and 3.11.x before 3.11.5. It primarily affects servers (such as HTTP servers) that use TLS client authentication. If a TLS server-side socket is created, receives data into the socket buffer, and then is closed quickly, there is a brief window where the SSLSocket instance will detect the socket as \"not connected\" and won't initiate a handshake, but buffered data will still be readable from the socket buffer. This data will not be authenticated if the server-side TLS peer is expecting client certificate authentication, and is indistinguishable from valid TLS stream data. Data is limited in size to the amount that will fit in the buffer. (The TLS connection cannot directly be used for data exfiltration because the vulnerable code path requires that the connection be closed on initialization of the SSLSocket.)",
      "public_date": "2023-08-25 01:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in Python before 3.8.18, 3.9.x before 3.9.18, 3.10.x before 3.10.13, and 3.11.x before 3.11.5. It primarily affects servers (such as HTTP servers) that use TLS client authentication. If a TLS server-side socket is created, receives data into the socket buffer, and then is closed quickly, there is a brief window where the SSLSocket instance will detect the socket as \"not connected\" and won't initiate a handshake, but buffered data will still be readable from the socket buffer. This data will not be authenticated if the server-side TLS peer is expecting client certificate authentication, and is indistinguishable from valid TLS stream data. Data is limited in size to the amount that will fit in the buffer. (The TLS connection cannot directly be used for data exfiltration because the vulnerable code path requires that the connection be closed on initialization of the SSLSocket.)",
      "published_date": "2023-08-25 01:15:09.017+00:00"
    },
    {
      "cve_id": "CVE-2023-38898",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue in Python cpython v.3.7 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task component. NOTE: this is disputed by the vendor because (1) neither 3.7 nor any other release is affected (it is a bug in some 3.12 pre-releases); (2) there are no common scenarios in which an adversary can call _asyncio._swap_current_task but does not already have the ability to call arbitrary functions; and (3) there are no common scenarios in which sensitive information, which is not already accessible to an adversary, becomes accessible through this bug.",
      "public_date": "2023-08-15 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue in Python cpython v.3.7 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task component. NOTE: this is disputed by the vendor because (1) neither 3.7 nor any other release is affected (it is a bug in some 3.12 pre-releases); (2) there are no common scenarios in which an adversary can call _asyncio._swap_current_task but does not already have the ability to call arbitrary functions; and (3) there are no common scenarios in which sensitive information, which is not already accessible to an adversary, becomes accessible through this bug.",
      "published_date": "2023-08-15 17:15:12.187+00:00"
    },
    {
      "cve_id": "CVE-2023-36632",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
      "public_date": "2023-06-25 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
      "published_date": "2023-06-25 18:15:09.313+00:00"
    },
    {
      "cve_id": "CVE-2023-33595",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
      "public_date": "2023-06-07 20:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
      "published_date": "2023-06-07 20:15:09.92+00:00"
    },
    {
      "cve_id": "CVE-2023-27043",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "public_date": "2023-04-19 00:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "published_date": "2023-04-19 00:15:07.973+00:00"
    },
    {
      "cve_id": "CVE-2023-24329",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
      "public_date": "2023-02-17 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
      "published_date": "2023-02-17 15:15:12.243+00:00"
    },
    {
      "cve_id": "CVE-2022-48566",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "published_date": "2023-08-22 19:16:32.087+00:00"
    },
    {
      "cve_id": "CVE-2022-48565",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "published_date": "2023-08-22 19:16:32.007+00:00"
    },
    {
      "cve_id": "CVE-2022-48564",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
      "published_date": "2023-08-22 19:16:31.927+00:00"
    },
    {
      "cve_id": "CVE-2022-48560",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "published_date": "2023-08-22 19:16:31.827+00:00"
    },
    {
      "cve_id": "CVE-2022-45061",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
      "public_date": "2022-11-09 07:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
      "published_date": "2022-11-09 07:15:09.887+00:00"
    },
    {
      "cve_id": "CVE-2022-42919",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "Python 3.9.x before 3.9.16 and 3.10.x before 3.10.9 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.",
      "public_date": "2022-11-07 00:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Python 3.9.x before 3.9.16 and 3.10.x before 3.10.9 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.",
      "published_date": "2022-11-07 00:15:09.697+00:00"
    },
    {
      "cve_id": "CVE-2022-26488",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Python before 3.10.3 on Windows, local users can gain privileges because the search path is inadequately secured. The installer may allow a local attacker to add user-writable directories to the system search path. To exploit, an administrator must have installed Python for all users and enabled PATH entries. A non-administrative user can trigger a repair that incorrectly adds user-writable paths into PATH, enabling search-path hijacking of other users and system services. This affects Python (CPython) through 3.7.12, 3.8.x through 3.8.12, 3.9.x through 3.9.10, and 3.10.x through 3.10.2.",
      "public_date": "2022-03-10 17:47:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "In Python before 3.10.3 on Windows, local users can gain privileges because the search path is inadequately secured. The installer may allow a local attacker to add user-writable directories to the system search path. To exploit, an administrator must have installed Python for all users and enabled PATH entries. A non-administrative user can trigger a repair that incorrectly adds user-writable paths into PATH, enabling search-path hijacking of other users and system services. This affects Python (CPython) through 3.7.12, 3.8.x through 3.8.12, 3.9.x through 3.9.10, and 3.10.x through 3.10.2.",
      "published_date": "2022-03-10 17:47:45.383+00:00"
    },
    {
      "cve_id": "CVE-2022-0391",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in Python, specifically within the urllib.parse module. This module helps break Uniform Resource Locator (URL) strings into components. The issue involves how the urlparse method does not sanitize input and allows characters like '\\r' and '\\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks. This flaw affects Python versions prior to 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14.",
      "public_date": "2022-02-09 23:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in Python, specifically within the urllib.parse module. This module helps break Uniform Resource Locator (URL) strings into components. The issue involves how the urlparse method does not sanitize input and allows characters like '\\r' and '\\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks. This flaw affects Python versions prior to 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14.",
      "published_date": "2022-02-09 23:15:16.58+00:00"
    },
    {
      "cve_id": "CVE-2021-46143",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
      "public_date": "2022-01-06 04:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
      "published_date": "2022-01-06 04:15:07.017+00:00"
    },
    {
      "cve_id": "CVE-2021-4189",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in Python, specifically in the FTP (File Transfer Protocol) client library in PASV (passive) mode. The issue is how the FTP client trusts the host from the PASV response by default. This flaw allows an attacker to set up a malicious FTP server that can trick FTP clients into connecting back to a given IP address and port. This vulnerability could lead to FTP client scanning ports, which otherwise would not have been possible.",
      "public_date": "2022-08-24 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "A flaw was found in Python, specifically in the FTP (File Transfer Protocol) client library in PASV (passive) mode. The issue is how the FTP client trusts the host from the PASV response by default. This flaw allows an attacker to set up a malicious FTP server that can trick FTP clients into connecting back to a given IP address and port. This vulnerability could lead to FTP client scanning ports, which otherwise would not have been possible.",
      "published_date": "2022-08-24 16:15:09.827+00:00"
    },
    {
      "cve_id": "CVE-2021-3426",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
      "public_date": "2021-05-20 13:15:00+00:00",
      "cvss_score": 5.7,
      "severity": "MEDIUM",
      "summary": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
      "published_date": "2021-05-20 13:15:07.753+00:00"
    },
    {
      "cve_id": "CVE-2021-3177",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
      "public_date": "2021-01-19 06:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
      "published_date": "2021-01-19 06:15:12.967+00:00"
    },
    {
      "cve_id": "CVE-2021-29921",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
      "public_date": "2021-05-06 13:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
      "published_date": "2021-05-06 13:15:12.573+00:00"
    },
    {
      "cve_id": "CVE-2021-28861",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
      "public_date": "2022-08-23 01:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
      "published_date": "2022-08-23 01:15:07.617+00:00"
    },
    {
      "cve_id": "CVE-2021-23336",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
      "public_date": "2021-02-15 13:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
      "published_date": "2021-02-15 13:15:12.433+00:00"
    },
    {
      "cve_id": "CVE-2020-8492",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking.",
      "public_date": "2020-01-30 19:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking.",
      "published_date": "2020-01-30 19:15:12.103+00:00"
    },
    {
      "cve_id": "CVE-2020-27619",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "In Python 3 through 3.9.0, the Lib/test/multibytecodec_support.py CJK codec tests call eval() on content retrieved via HTTP.",
      "public_date": "2020-10-22 03:16:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Python 3 through 3.9.0, the Lib/test/multibytecodec_support.py CJK codec tests call eval() on content retrieved via HTTP.",
      "published_date": "2020-10-22 03:16:31.01+00:00"
    },
    {
      "cve_id": "CVE-2020-26116",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "http.client in Python 3.x before 3.5.10, 3.6.x before 3.6.12, 3.7.x before 3.7.9, and 3.8.x before 3.8.5 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of HTTPConnection.request.",
      "public_date": "2020-09-27 04:15:00+00:00",
      "cvss_score": 7.2,
      "severity": "HIGH",
      "summary": "http.client in Python 3.x before 3.5.10, 3.6.x before 3.6.12, 3.7.x before 3.7.9, and 3.8.x before 3.8.5 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of HTTPConnection.request.",
      "published_date": "2020-09-27 04:15:11.587+00:00"
    },
    {
      "cve_id": "CVE-2020-15801",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "untriaged",
      "description": "In Python 3.8.4, sys.path restrictions specified in a python38._pth file are ignored, allowing code to be loaded from arbitrary locations. The <executable-name>._pth file (e.g., the python._pth file) is not affected.",
      "public_date": "2020-07-17 03:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Python 3.8.4, sys.path restrictions specified in a python38._pth file are ignored, allowing code to be loaded from arbitrary locations. The <executable-name>._pth file (e.g., the python._pth file) is not affected.",
      "published_date": "2020-07-17 03:15:11.33+00:00"
    },
    {
      "cve_id": "CVE-2020-15523",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "untriaged",
      "description": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
      "public_date": "2020-07-04 23:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
      "published_date": "2020-07-04 23:15:10.313+00:00"
    },
    {
      "cve_id": "CVE-2020-14422",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Lib/ipaddress.py in Python through 3.8.3 improperly computes hash values in the IPv4Interface and IPv6Interface classes, which might allow a remote attacker to cause a denial of service if an application is affected by the performance of a dictionary containing IPv4Interface or IPv6Interface objects, and this attacker can cause many dictionary entries to be created. This is fixed in: v3.5.10, v3.5.10rc1; v3.6.12; v3.7.9; v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1; v3.9.0, v3.9.0b4, v3.9.0b5, v3.9.0rc1, v3.9.0rc2.",
      "public_date": "2020-06-18 14:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Lib/ipaddress.py in Python through 3.8.3 improperly computes hash values in the IPv4Interface and IPv6Interface classes, which might allow a remote attacker to cause a denial of service if an application is affected by the performance of a dictionary containing IPv4Interface or IPv6Interface objects, and this attacker can cause many dictionary entries to be created. This is fixed in: v3.5.10, v3.5.10rc1; v3.6.12; v3.7.9; v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1; v3.9.0, v3.9.0b4, v3.9.0b5, v3.9.0rc1, v3.9.0rc2.",
      "published_date": "2020-06-18 14:15:11.047+00:00"
    },
    {
      "cve_id": "CVE-2020-10735",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
      "public_date": "2022-09-09 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
      "published_date": "2022-09-09 14:15:08.66+00:00"
    },
    {
      "cve_id": "CVE-2019-9948",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call.",
      "public_date": "2019-03-23 18:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call.",
      "published_date": "2019-03-23 18:29:02.09+00:00"
    },
    {
      "cve_id": "CVE-2019-9947",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2019-03-23 18:29:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2019-03-23 18:29:02.027+00:00"
    },
    {
      "cve_id": "CVE-2019-9740",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2019-03-13 03:29:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2019-03-13 03:29:00.193+00:00"
    },
    {
      "cve_id": "CVE-2019-9674",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "Lib/zipfile.py in Python through 3.7.2 allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.",
      "public_date": "2020-02-04 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Lib/zipfile.py in Python through 3.7.2 allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.",
      "published_date": "2020-02-04 15:15:11.633+00:00"
    },
    {
      "cve_id": "CVE-2019-9636",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by: Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is: Information disclosure (credentials, cookies, etc. that are cached against a given hostname). The components are: urllib.parse.urlsplit, urllib.parse.urlparse. The attack vector is: A specially crafted URL could be incorrectly parsed to locate cookies or authentication data and send that information to a different host than when parsed correctly. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2019-03-08 21:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by: Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is: Information disclosure (credentials, cookies, etc. that are cached against a given hostname). The components are: urllib.parse.urlsplit, urllib.parse.urlparse. The attack vector is: A specially crafted URL could be incorrectly parsed to locate cookies or authentication data and send that information to a different host than when parsed correctly. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2019-03-08 21:29:00.703+00:00"
    },
    {
      "cve_id": "CVE-2019-5010",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.",
      "public_date": "2019-10-31 21:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.",
      "published_date": "2019-10-31 21:15:13.293+00:00"
    },
    {
      "cve_id": "CVE-2019-20907",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation.",
      "public_date": "2020-07-13 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation.",
      "published_date": "2020-07-13 13:15:10.763+00:00"
    },
    {
      "cve_id": "CVE-2019-18348",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.). This is fixed in: v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1; v3.6.11, v3.6.11rc1, v3.6.12; v3.7.8, v3.7.8rc1, v3.7.9; v3.8.3, v3.8.3rc1, v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1.",
      "public_date": "2019-10-23 17:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.). This is fixed in: v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1; v3.6.11, v3.6.11rc1, v3.6.12; v3.7.8, v3.7.8rc1, v3.7.9; v3.8.3, v3.8.3rc1, v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1.",
      "published_date": "2019-10-23 17:15:12.973+00:00"
    },
    {
      "cve_id": "CVE-2019-17514",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "library/glob.html in the Python 2 and 3 documentation before 2016 has potentially misleading information about whether sorting occurs, as demonstrated by irreproducible cancer-research results. NOTE: the effects of this documentation cross application domains, and thus it is likely that security-relevant code elsewhere is affected. This issue is not a Python implementation bug, and there are no reports that NMR researchers were specifically relying on library/glob.html. In other words, because the older documentation stated \"finds all the pathnames matching a specified pattern according to the rules used by the Unix shell,\" one might have incorrectly inferred that the sorting that occurs in a Unix shell also occurred for glob.glob. There is a workaround in newer versions of Willoughby nmr-data_compilation-p2.py and nmr-data_compilation-p3.py, which call sort() directly.",
      "public_date": "2019-10-12 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "library/glob.html in the Python 2 and 3 documentation before 2016 has potentially misleading information about whether sorting occurs, as demonstrated by irreproducible cancer-research results. NOTE: the effects of this documentation cross application domains, and thus it is likely that security-relevant code elsewhere is affected. This issue is not a Python implementation bug, and there are no reports that NMR researchers were specifically relying on library/glob.html. In other words, because the older documentation stated \"finds all the pathnames matching a specified pattern according to the rules used by the Unix shell,\" one might have incorrectly inferred that the sorting that occurs in a Unix shell also occurred for glob.glob. There is a workaround in newer versions of Willoughby nmr-data_compilation-p2.py and nmr-data_compilation-p3.py, which call sort() directly.",
      "published_date": "2019-10-12 13:15:10.79+00:00"
    },
    {
      "cve_id": "CVE-2019-16935",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.",
      "public_date": "2019-09-28 02:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.",
      "published_date": "2019-09-28 02:15:10.463+00:00"
    },
    {
      "cve_id": "CVE-2019-16056",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.",
      "public_date": "2019-09-06 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.",
      "published_date": "2019-09-06 18:15:15.443+00:00"
    },
    {
      "cve_id": "CVE-2019-10160",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.",
      "public_date": "2019-06-07 18:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.",
      "published_date": "2019-06-07 18:29:00.28+00:00"
    },
    {
      "cve_id": "CVE-2018-20852",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
      "public_date": "2019-07-13 21:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
      "published_date": "2019-07-13 21:15:10.377+00:00"
    },
    {
      "cve_id": "CVE-2018-20406",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Modules/_pickle.c in Python before 3.7.1 has an integer overflow via a large LONG_BINPUT value that is mishandled during a \"resize to twice the size\" attempt. This issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data. This issue is fixed in: v3.4.10, v3.4.10rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.7rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.7, v3.6.7rc1, v3.6.7rc2, v3.6.8, v3.6.8rc1, v3.6.9, v3.6.9rc1; v3.7.1, v3.7.1rc1, v3.7.1rc2, v3.7.2, v3.7.2rc1, v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2018-12-23 23:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Modules/_pickle.c in Python before 3.7.1 has an integer overflow via a large LONG_BINPUT value that is mishandled during a \"resize to twice the size\" attempt. This issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data. This issue is fixed in: v3.4.10, v3.4.10rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.7rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.7, v3.6.7rc1, v3.6.7rc2, v3.6.8, v3.6.8rc1, v3.6.9, v3.6.9rc1; v3.7.1, v3.7.1rc1, v3.7.1rc2, v3.7.2, v3.7.2rc1, v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2018-12-23 23:29:00.307+00:00"
    },
    {
      "cve_id": "CVE-2018-14647",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
      "public_date": "2018-09-25 00:29:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
      "published_date": "2018-09-25 00:29:00.703+00:00"
    },
    {
      "cve_id": "CVE-2018-1061",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method. An attacker could use this flaw to cause denial of service.",
      "public_date": "2018-06-19 12:29:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
      "published_date": "2018-06-19 12:29:00.22+00:00"
    },
    {
      "cve_id": "CVE-2018-1060",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
      "public_date": "2018-06-18 14:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
      "published_date": "2018-06-18 14:29:00.213+00:00"
    },
    {
      "cve_id": "CVE-2018-1000802",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
      "public_date": "2018-09-18 17:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
      "published_date": "2018-09-18 17:29:00.88+00:00"
    },
    {
      "cve_id": "CVE-2018-1000030",
      "source": "GOST",
      "affected_package": "python2.7",
      "installed_version": "2.7.12-1ubuntu0~16.04.18",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Python 2.7.14 is vulnerable to a Heap-Buffer-Overflow as well as a Heap-Use-After-Free. Python versions prior to 2.7.14 may also be vulnerable and it appears that Python 2.7.17 and prior may also be vulnerable however this has not been confirmed. The vulnerability lies when multiply threads are handling large amounts of data. In both cases there is essentially a race condition that occurs. For the Heap-Buffer-Overflow, Thread 2 is creating the size for a buffer, but Thread1 is already writing to the buffer without knowing how much to write. So when a large amount of data is being processed, it is very easy to cause memory corruption using a Heap-Buffer-Overflow. As for the Use-After-Free, Thread3->Malloc->Thread1->Free's->Thread2-Re-uses-Free'd Memory. The PSRT has stated that this is not a security vulnerability due to the fact that the attacker must be able to run code, however in some situations, such as function as a service, this vulnerability can potentially be used by an attacker to violate a trust boundary, as such the DWF feels this issue deserves a CVE.",
      "public_date": "2018-02-08 17:29:00+00:00",
      "cvss_score": 3.6,
      "severity": "LOW",
      "summary": "Python 2.7.14 is vulnerable to a Heap-Buffer-Overflow as well as a Heap-Use-After-Free. Python versions prior to 2.7.14 may also be vulnerable and it appears that Python 2.7.17 and prior may also be vulnerable however this has not been confirmed. The vulnerability lies when multiply threads are handling large amounts of data. In both cases there is essentially a race condition that occurs. For the Heap-Buffer-Overflow, Thread 2 is creating the size for a buffer, but Thread1 is already writing to the buffer without knowing how much to write. So when a large amount of data is being processed, it is very easy to cause memory corruption using a Heap-Buffer-Overflow. As for the Use-After-Free, Thread3->Malloc->Thread1->Free's->Thread2-Re-uses-Free'd Memory. The PSRT has stated that this is not a security vulnerability due to the fact that the attacker must be able to run code, however in some situations, such as function as a service, this vulnerability can potentially be used by an attacker to violate a trust boundary, as such the DWF feels this issue deserves a CVE.",
      "published_date": "2018-02-08 17:29:00.177+00:00"
    },
    {
      "cve_id": "CVE-2020-7709",
      "source": "GOST",
      "affected_package": "python3-json-pointer",
      "installed_version": "1.9-3",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "This affects the package json-pointer before 0.6.1. Multiple reference of object using slash is supported.",
      "public_date": "2020-10-05 08:15:00+00:00",
      "cvss_score": 6.0,
      "severity": "MEDIUM",
      "summary": "This affects the package json-pointer before 0.6.1. Multiple reference of object using slash is supported.",
      "published_date": "2020-10-05 08:15:17.873+00:00"
    },
    {
      "cve_id": "CVE-2025-6069",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "public_date": "2025-06-17 14:15:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "published_date": "2025-06-17 14:15:33.677+00:00"
    },
    {
      "cve_id": "CVE-2025-4517",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".   You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 9.4,
      "severity": "CRITICAL",
      "summary": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".\n\n\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.837+00:00"
    },
    {
      "cve_id": "CVE-2025-4516",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "public_date": "2025-05-15 14:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "published_date": "2025-05-15 14:15:31.753+00:00"
    },
    {
      "cve_id": "CVE-2025-4435",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "When using a TarFile.errorlevel = 0\u00a0and extracting with a filter the documented behavior is that any filtered members would be skipped and not extracted. However the actual behavior of TarFile.errorlevel = 0\u00a0in affected versions is that the member would still be extracted and not skipped.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "When using a TarFile.errorlevel = 0\u00a0and extracting with a filter the documented behavior is that any filtered members would be skipped and not extracted. However the actual behavior of TarFile.errorlevel = 0\u00a0in affected versions is that the member would still be extracted and not skipped.",
      "published_date": "2025-06-03 13:15:20.63+00:00"
    },
    {
      "cve_id": "CVE-2025-4330",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.   You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.\n\n\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.503+00:00"
    },
    {
      "cve_id": "CVE-2025-4138",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.   You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.\n\n\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.377+00:00"
    },
    {
      "cve_id": "CVE-2025-1795",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "During an address list folding when a separating comma ends up on a folded line and that line is to be unicode-encoded then the separator itself is also unicode-encoded. Expected behavior is that the separating comma remains a plan comma. This can result in the address header being misinterpreted by some mail servers.",
      "public_date": "2025-02-28 19:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "During an address list folding when a separating comma ends up on a folded line and that line is to be unicode-encoded then the separator itself is also unicode-encoded. Expected behavior is that the separating comma remains a plan comma. This can result in the address header being misinterpreted by some mail servers.",
      "published_date": "2025-02-28 19:15:36.55+00:00"
    },
    {
      "cve_id": "CVE-2025-0938",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "public_date": "2025-01-31 18:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "published_date": "2025-01-31 18:15:38.053+00:00"
    },
    {
      "cve_id": "CVE-2024-9287",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "public_date": "2024-10-22 17:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "published_date": "2024-10-22 17:15:06.697+00:00"
    },
    {
      "cve_id": "CVE-2024-8088",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a HIGH severity vulnerability affecting the CPython \"zipfile\" module affecting \"zipfile.Path\". Note that the more common API \"zipfile.ZipFile\" class is unaffected.      When iterating over names of entries in a zip archive (for example, methods of \"zipfile.Path\" like \"namelist()\", \"iterdir()\", etc) the process can be put into an infinite loop with a maliciously crafted zip archive. This defect applies when reading only metadata or extracting the contents of the zip archive. Programs that are not handling user-controlled zip archives are not affected.",
      "public_date": "2024-08-22 19:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "There is a HIGH severity vulnerability affecting the CPython \"zipfile\"\nmodule affecting \"zipfile.Path\". Note that the more common API \"zipfile.ZipFile\" class is unaffected.\n\n\n\n\n\nWhen iterating over names of entries in a zip archive (for example, methods\nof \"zipfile.Path\" like \"namelist()\", \"iterdir()\", etc)\nthe process can be put into an infinite loop with a maliciously crafted\nzip archive. This defect applies when reading only metadata or extracting\nthe contents of the zip archive. Programs that are not handling\nuser-controlled zip archives are not affected.",
      "published_date": "2024-08-22 19:15:09.72+00:00"
    },
    {
      "cve_id": "CVE-2024-7592",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "There is a LOW severity vulnerability affecting CPython, specifically the 'http.cookies' standard library module.   When parsing cookies that contained backslashes for quoted characters in the cookie value, the parser would use an algorithm with quadratic complexity, resulting in excess CPU resources being used while parsing the value.",
      "public_date": "2024-08-19 19:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "There is a LOW severity vulnerability affecting CPython, specifically the\n'http.cookies' standard library module.\n\n\nWhen parsing cookies that contained backslashes for quoted characters in\nthe cookie value, the parser would use an algorithm with quadratic\ncomplexity, resulting in excess CPU resources being used while parsing the\nvalue.",
      "published_date": "2024-08-19 19:15:08.18+00:00"
    },
    {
      "cve_id": "CVE-2024-6923",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.  The email module didn\u2019t properly quote newlines for email headers when serializing an email message allowing for header injection when an email is serialized.",
      "public_date": "2024-08-01 14:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe \nemail module didn\u2019t properly quote newlines for email headers when \nserializing an email message allowing for header injection when an email\n is serialized.",
      "published_date": "2024-08-01 14:15:03.647+00:00"
    },
    {
      "cve_id": "CVE-2024-6232",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.      Regular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "public_date": "2024-09-03 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "There is a MEDIUM severity vulnerability affecting CPython.\n\n\n\n\n\nRegular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "published_date": "2024-09-03 13:15:05.363+00:00"
    },
    {
      "cve_id": "CVE-2024-5642",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
      "public_date": "2024-06-27 21:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
      "published_date": "2024-06-27 21:15:16.07+00:00"
    },
    {
      "cve_id": "CVE-2024-4032",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The \u201cipaddress\u201d module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \u201cglobally reachable\u201d or \u201cprivate\u201d. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn\u2019t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries. CPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "public_date": "2024-06-17 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The \u201cipaddress\u201d module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \u201cglobally reachable\u201d or \u201cprivate\u201d. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn\u2019t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "published_date": "2024-06-17 15:15:52.517+00:00"
    },
    {
      "cve_id": "CVE-2024-4030",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions. If you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user. This issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
      "public_date": "2024-05-07 21:15:00+00:00",
      "cvss_score": 7.1,
      "severity": "HIGH",
      "summary": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
      "published_date": "2024-05-07 21:15:09.467+00:00"
    },
    {
      "cve_id": "CVE-2024-3220",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "There is a defect in the CPython standard library module \u201cmimetypes\u201d where on Windows the default list of known file locations are writable meaning other users can create invalid files to cause MemoryError to be raised on Python runtime startup or have file extensions be interpreted as the incorrect file type.  This defect is caused by the default locations of Linux and macOS platforms (such as \u201c/etc/mime.types\u201d) also being used on Windows, where they are user-writable locations (\u201cC:\\etc\\mime.types\u201d).  To work-around this issue a user can call mimetypes.init() with an empty list (\u201c[]\u201d) on Windows platforms to avoid using the default list of known file locations.",
      "public_date": "2025-02-14 17:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "There is a defect in the CPython standard library module \u201cmimetypes\u201d where on Windows the default list of known file locations are writable meaning other users can create invalid files to cause MemoryError to be raised on Python runtime startup or have file extensions be interpreted as the incorrect file type.\n\nThis defect is caused by the default locations of Linux and macOS platforms (such as \u201c/etc/mime.types\u201d) also being used on Windows, where they are user-writable locations (\u201cC:\\etc\\mime.types\u201d).\n\nTo work-around this issue a user can call mimetypes.init() with an empty list (\u201c[]\u201d) on Windows platforms to avoid using the default list of known file locations.",
      "published_date": "2025-02-14 17:15:15.567+00:00"
    },
    {
      "cve_id": "CVE-2024-3219",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The \u201csocket\u201d module provides a pure-Python fallback to the socket.socketpair() function for platforms that don\u2019t support AF_UNIX, such as Windows. This pure-Python implementation uses AF_INET or AF_INET6 to create a local connected pair of sockets. The connection between the two sockets was not verified before passing the two sockets back to the user, which leaves the server socket vulnerable to a connection race from a malicious local peer.  Platforms that support AF_UNIX such as Linux and macOS are not affected by this vulnerability. Versions prior to CPython 3.5 are not affected due to the vulnerable API not being included.",
      "public_date": "2024-07-29 22:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "The\n \u201csocket\u201d module provides a pure-Python fallback to the \nsocket.socketpair() function for platforms that don\u2019t support AF_UNIX, \nsuch as Windows. This pure-Python implementation uses AF_INET or \nAF_INET6 to create a local connected pair of sockets. The connection \nbetween the two sockets was not verified before passing the two sockets \nback to the user, which leaves the server socket vulnerable to a \nconnection race from a malicious local peer.\n\nPlatforms that support AF_UNIX such as Linux and macOS are not affected by this vulnerability. Versions prior to CPython 3.5 are not affected due to the vulnerable API not being included.",
      "published_date": "2024-07-29 22:15:04.97+00:00"
    },
    {
      "cve_id": "CVE-2024-12718",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"\u00a0or file permissions (chmod) with filter=\"tar\"\u00a0of files outside the extraction directory. You are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.  Note that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.  Note that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "public_date": "2025-06-03 13:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"\u00a0or file permissions (chmod) with filter=\"tar\"\u00a0of files outside the extraction directory.\nYou are affected by this vulnerability if using the tarfile\u00a0module to extract untrusted tar archives using TarFile.extractall()\u00a0or TarFile.extract()\u00a0using the filter=\u00a0parameter with a value of \"data\"\u00a0or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter \u00a0for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.\n\nNote that for Python 3.14 or later the default value of filter=\u00a0changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "published_date": "2025-06-03 13:15:20.183+00:00"
    },
    {
      "cve_id": "CVE-2024-12254",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Starting in Python 3.12.0, the asyncio._SelectorSocketTransport.writelines() method would not \"pause\" writing and signal to the Protocol to drain the buffer to the wire once the write buffer reached the \"high-water mark\". Because of this, Protocols would not periodically drain the write buffer potentially leading to memory exhaustion.      This vulnerability likely impacts a small number of users, you must be using Python 3.12.0 or later, on macOS or Linux, using the asyncio module with protocols, and using .writelines() method which had new zero-copy-on-write behavior in Python 3.12.0 and later. If not all of these factors are true then your usage of Python is unaffected.",
      "public_date": "2024-12-06 16:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Starting in Python 3.12.0, the asyncio._SelectorSocketTransport.writelines()\n method would not \"pause\" writing and signal to the Protocol to drain \nthe buffer to the wire once the write buffer reached the \"high-water \nmark\". Because of this, Protocols would not periodically drain the write\n buffer potentially leading to memory exhaustion.\n\n\n\n\n\nThis\n vulnerability likely impacts a small number of users, you must be using\n Python 3.12.0 or later, on macOS or Linux, using the asyncio module \nwith protocols, and using .writelines() method which had new \nzero-copy-on-write behavior in Python 3.12.0 and later. If not all of \nthese factors are true then your usage of Python is unaffected.",
      "published_date": "2024-12-06 16:15:20.623+00:00"
    },
    {
      "cve_id": "CVE-2024-11168",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "public_date": "2024-11-12 22:15:00+00:00",
      "cvss_score": 3.7,
      "severity": "LOW",
      "summary": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "published_date": "2024-11-12 22:15:14.92+00:00"
    },
    {
      "cve_id": "CVE-2024-0450",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior. The zipfile module is vulnerable to \u201cquoted-overlap\u201d zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.",
      "public_date": "2024-03-19 16:15:00+00:00",
      "cvss_score": 6.2,
      "severity": "MEDIUM",
      "summary": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to \u201cquoted-overlap\u201d zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.\n\n",
      "published_date": "2024-03-19 16:15:09.18+00:00"
    },
    {
      "cve_id": "CVE-2024-0397",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A defect was discovered in the Python \u201cssl\u201d module where there is a memory race condition with the ssl.SSLContext methods \u201ccert_store_stats()\u201d and \u201cget_ca_certs()\u201d. The race condition can be triggered if the methods are called at the same time as certificates are loaded into the SSLContext, such as during the TLS handshake with a certificate directory configured. This issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "public_date": "2024-06-17 16:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "A defect was discovered in the Python \u201cssl\u201d module where there is a memory\nrace condition with the ssl.SSLContext methods \u201ccert_store_stats()\u201d and\n\u201cget_ca_certs()\u201d. The race condition can be triggered if the methods are\ncalled at the same time as certificates are loaded into the SSLContext,\nsuch as during the TLS handshake with a certificate directory configured.\nThis issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "published_date": "2024-06-17 16:15:10.217+00:00"
    },
    {
      "cve_id": "CVE-2023-6597",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.  The tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.",
      "public_date": "2024-03-19 16:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.\n",
      "published_date": "2024-03-19 16:15:08.743+00:00"
    },
    {
      "cve_id": "CVE-2023-41105",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
      "public_date": "2023-08-23 07:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python 3.11 through 3.11.4. If a path containing '\\0' bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first '\\0' byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.",
      "published_date": "2023-08-23 07:15:08.59+00:00"
    },
    {
      "cve_id": "CVE-2023-40217",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python before 3.8.18, 3.9.x before 3.9.18, 3.10.x before 3.10.13, and 3.11.x before 3.11.5. It primarily affects servers (such as HTTP servers) that use TLS client authentication. If a TLS server-side socket is created, receives data into the socket buffer, and then is closed quickly, there is a brief window where the SSLSocket instance will detect the socket as \"not connected\" and won't initiate a handshake, but buffered data will still be readable from the socket buffer. This data will not be authenticated if the server-side TLS peer is expecting client certificate authentication, and is indistinguishable from valid TLS stream data. Data is limited in size to the amount that will fit in the buffer. (The TLS connection cannot directly be used for data exfiltration because the vulnerable code path requires that the connection be closed on initialization of the SSLSocket.)",
      "public_date": "2023-08-25 01:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in Python before 3.8.18, 3.9.x before 3.9.18, 3.10.x before 3.10.13, and 3.11.x before 3.11.5. It primarily affects servers (such as HTTP servers) that use TLS client authentication. If a TLS server-side socket is created, receives data into the socket buffer, and then is closed quickly, there is a brief window where the SSLSocket instance will detect the socket as \"not connected\" and won't initiate a handshake, but buffered data will still be readable from the socket buffer. This data will not be authenticated if the server-side TLS peer is expecting client certificate authentication, and is indistinguishable from valid TLS stream data. Data is limited in size to the amount that will fit in the buffer. (The TLS connection cannot directly be used for data exfiltration because the vulnerable code path requires that the connection be closed on initialization of the SSLSocket.)",
      "published_date": "2023-08-25 01:15:09.017+00:00"
    },
    {
      "cve_id": "CVE-2023-38898",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue in Python cpython v.3.7 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task component. NOTE: this is disputed by the vendor because (1) neither 3.7 nor any other release is affected (it is a bug in some 3.12 pre-releases); (2) there are no common scenarios in which an adversary can call _asyncio._swap_current_task but does not already have the ability to call arbitrary functions; and (3) there are no common scenarios in which sensitive information, which is not already accessible to an adversary, becomes accessible through this bug.",
      "public_date": "2023-08-15 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue in Python cpython v.3.7 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task component. NOTE: this is disputed by the vendor because (1) neither 3.7 nor any other release is affected (it is a bug in some 3.12 pre-releases); (2) there are no common scenarios in which an adversary can call _asyncio._swap_current_task but does not already have the ability to call arbitrary functions; and (3) there are no common scenarios in which sensitive information, which is not already accessible to an adversary, becomes accessible through this bug.",
      "published_date": "2023-08-15 17:15:12.187+00:00"
    },
    {
      "cve_id": "CVE-2023-36632",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
      "public_date": "2023-06-25 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
      "published_date": "2023-06-25 18:15:09.313+00:00"
    },
    {
      "cve_id": "CVE-2023-33595",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
      "public_date": "2023-06-07 20:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
      "published_date": "2023-06-07 20:15:09.92+00:00"
    },
    {
      "cve_id": "CVE-2023-27043",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "public_date": "2023-04-19 00:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "published_date": "2023-04-19 00:15:07.973+00:00"
    },
    {
      "cve_id": "CVE-2023-24329",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
      "public_date": "2023-02-17 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
      "published_date": "2023-02-17 15:15:12.243+00:00"
    },
    {
      "cve_id": "CVE-2022-48566",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "published_date": "2023-08-22 19:16:32.087+00:00"
    },
    {
      "cve_id": "CVE-2022-48565",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "published_date": "2023-08-22 19:16:32.007+00:00"
    },
    {
      "cve_id": "CVE-2022-48564",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
      "published_date": "2023-08-22 19:16:31.927+00:00"
    },
    {
      "cve_id": "CVE-2022-48560",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "published_date": "2023-08-22 19:16:31.827+00:00"
    },
    {
      "cve_id": "CVE-2022-45061",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
      "public_date": "2022-11-09 07:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
      "published_date": "2022-11-09 07:15:09.887+00:00"
    },
    {
      "cve_id": "CVE-2022-42919",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "Python 3.9.x before 3.9.16 and 3.10.x before 3.10.9 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.",
      "public_date": "2022-11-07 00:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Python 3.9.x before 3.9.16 and 3.10.x before 3.10.9 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.",
      "published_date": "2022-11-07 00:15:09.697+00:00"
    },
    {
      "cve_id": "CVE-2022-26488",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Python before 3.10.3 on Windows, local users can gain privileges because the search path is inadequately secured. The installer may allow a local attacker to add user-writable directories to the system search path. To exploit, an administrator must have installed Python for all users and enabled PATH entries. A non-administrative user can trigger a repair that incorrectly adds user-writable paths into PATH, enabling search-path hijacking of other users and system services. This affects Python (CPython) through 3.7.12, 3.8.x through 3.8.12, 3.9.x through 3.9.10, and 3.10.x through 3.10.2.",
      "public_date": "2022-03-10 17:47:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "In Python before 3.10.3 on Windows, local users can gain privileges because the search path is inadequately secured. The installer may allow a local attacker to add user-writable directories to the system search path. To exploit, an administrator must have installed Python for all users and enabled PATH entries. A non-administrative user can trigger a repair that incorrectly adds user-writable paths into PATH, enabling search-path hijacking of other users and system services. This affects Python (CPython) through 3.7.12, 3.8.x through 3.8.12, 3.9.x through 3.9.10, and 3.10.x through 3.10.2.",
      "published_date": "2022-03-10 17:47:45.383+00:00"
    },
    {
      "cve_id": "CVE-2022-0391",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in Python, specifically within the urllib.parse module. This module helps break Uniform Resource Locator (URL) strings into components. The issue involves how the urlparse method does not sanitize input and allows characters like '\\r' and '\\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks. This flaw affects Python versions prior to 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14.",
      "public_date": "2022-02-09 23:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in Python, specifically within the urllib.parse module. This module helps break Uniform Resource Locator (URL) strings into components. The issue involves how the urlparse method does not sanitize input and allows characters like '\\r' and '\\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks. This flaw affects Python versions prior to 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14.",
      "published_date": "2022-02-09 23:15:16.58+00:00"
    },
    {
      "cve_id": "CVE-2021-46143",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
      "public_date": "2022-01-06 04:15:00+00:00",
      "cvss_score": 8.1,
      "severity": "HIGH",
      "summary": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
      "published_date": "2022-01-06 04:15:07.017+00:00"
    },
    {
      "cve_id": "CVE-2021-4189",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in Python, specifically in the FTP (File Transfer Protocol) client library in PASV (passive) mode. The issue is how the FTP client trusts the host from the PASV response by default. This flaw allows an attacker to set up a malicious FTP server that can trick FTP clients into connecting back to a given IP address and port. This vulnerability could lead to FTP client scanning ports, which otherwise would not have been possible.",
      "public_date": "2022-08-24 16:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "A flaw was found in Python, specifically in the FTP (File Transfer Protocol) client library in PASV (passive) mode. The issue is how the FTP client trusts the host from the PASV response by default. This flaw allows an attacker to set up a malicious FTP server that can trick FTP clients into connecting back to a given IP address and port. This vulnerability could lead to FTP client scanning ports, which otherwise would not have been possible.",
      "published_date": "2022-08-24 16:15:09.827+00:00"
    },
    {
      "cve_id": "CVE-2021-3737",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in python. An improperly handled HTTP response in the HTTP client code of python may allow a remote attacker, who controls the HTTP server, to make the client script enter an infinite loop, consuming CPU time. The highest threat from this vulnerability is to system availability.",
      "public_date": "2022-03-04 19:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in python. An improperly handled HTTP response in the HTTP client code of python may allow a remote attacker, who controls the HTTP server, to make the client script enter an infinite loop, consuming CPU time. The highest threat from this vulnerability is to system availability.",
      "published_date": "2022-03-04 19:15:08.73+00:00"
    },
    {
      "cve_id": "CVE-2021-3733",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "There's a flaw in urllib's AbstractBasicAuthHandler class. An attacker who controls a malicious HTTP server that an HTTP client (such as web browser) connects to, could trigger a Regular Expression Denial of Service (ReDOS) during an authentication request with a specially crafted payload that is sent by the server to the client. The greatest threat that this flaw poses is to application availability.",
      "public_date": "2022-03-10 17:42:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "There's a flaw in urllib's AbstractBasicAuthHandler class. An attacker who controls a malicious HTTP server that an HTTP client (such as web browser) connects to, could trigger a Regular Expression Denial of Service (ReDOS) during an authentication request with a specially crafted payload that is sent by the server to the client. The greatest threat that this flaw poses is to application availability.",
      "published_date": "2022-03-10 17:42:59.623+00:00"
    },
    {
      "cve_id": "CVE-2021-3426",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
      "public_date": "2021-05-20 13:15:00+00:00",
      "cvss_score": 5.7,
      "severity": "MEDIUM",
      "summary": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
      "published_date": "2021-05-20 13:15:07.753+00:00"
    },
    {
      "cve_id": "CVE-2021-3177",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
      "public_date": "2021-01-19 06:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
      "published_date": "2021-01-19 06:15:12.967+00:00"
    },
    {
      "cve_id": "CVE-2021-29921",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
      "public_date": "2021-05-06 13:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
      "published_date": "2021-05-06 13:15:12.573+00:00"
    },
    {
      "cve_id": "CVE-2021-28861",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
      "public_date": "2022-08-23 01:15:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
      "published_date": "2022-08-23 01:15:07.617+00:00"
    },
    {
      "cve_id": "CVE-2021-23336",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
      "public_date": "2021-02-15 13:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
      "published_date": "2021-02-15 13:15:12.433+00:00"
    },
    {
      "cve_id": "CVE-2020-8492",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking.",
      "public_date": "2020-01-30 19:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking.",
      "published_date": "2020-01-30 19:15:12.103+00:00"
    },
    {
      "cve_id": "CVE-2020-27619",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "In Python 3 through 3.9.0, the Lib/test/multibytecodec_support.py CJK codec tests call eval() on content retrieved via HTTP.",
      "public_date": "2020-10-22 03:16:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Python 3 through 3.9.0, the Lib/test/multibytecodec_support.py CJK codec tests call eval() on content retrieved via HTTP.",
      "published_date": "2020-10-22 03:16:31.01+00:00"
    },
    {
      "cve_id": "CVE-2020-26116",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "http.client in Python 3.x before 3.5.10, 3.6.x before 3.6.12, 3.7.x before 3.7.9, and 3.8.x before 3.8.5 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of HTTPConnection.request.",
      "public_date": "2020-09-27 04:15:00+00:00",
      "cvss_score": 7.2,
      "severity": "HIGH",
      "summary": "http.client in Python 3.x before 3.5.10, 3.6.x before 3.6.12, 3.7.x before 3.7.9, and 3.8.x before 3.8.5 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of HTTPConnection.request.",
      "published_date": "2020-09-27 04:15:11.587+00:00"
    },
    {
      "cve_id": "CVE-2020-15801",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "untriaged",
      "description": "In Python 3.8.4, sys.path restrictions specified in a python38._pth file are ignored, allowing code to be loaded from arbitrary locations. The <executable-name>._pth file (e.g., the python._pth file) is not affected.",
      "public_date": "2020-07-17 03:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "In Python 3.8.4, sys.path restrictions specified in a python38._pth file are ignored, allowing code to be loaded from arbitrary locations. The <executable-name>._pth file (e.g., the python._pth file) is not affected.",
      "published_date": "2020-07-17 03:15:11.33+00:00"
    },
    {
      "cve_id": "CVE-2020-14422",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Lib/ipaddress.py in Python through 3.8.3 improperly computes hash values in the IPv4Interface and IPv6Interface classes, which might allow a remote attacker to cause a denial of service if an application is affected by the performance of a dictionary containing IPv4Interface or IPv6Interface objects, and this attacker can cause many dictionary entries to be created. This is fixed in: v3.5.10, v3.5.10rc1; v3.6.12; v3.7.9; v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1; v3.9.0, v3.9.0b4, v3.9.0b5, v3.9.0rc1, v3.9.0rc2.",
      "public_date": "2020-06-18 14:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "Lib/ipaddress.py in Python through 3.8.3 improperly computes hash values in the IPv4Interface and IPv6Interface classes, which might allow a remote attacker to cause a denial of service if an application is affected by the performance of a dictionary containing IPv4Interface or IPv6Interface objects, and this attacker can cause many dictionary entries to be created. This is fixed in: v3.5.10, v3.5.10rc1; v3.6.12; v3.7.9; v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1; v3.9.0, v3.9.0b4, v3.9.0b5, v3.9.0rc1, v3.9.0rc2.",
      "published_date": "2020-06-18 14:15:11.047+00:00"
    },
    {
      "cve_id": "CVE-2020-10735",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
      "public_date": "2022-09-09 14:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
      "published_date": "2022-09-09 14:15:08.66+00:00"
    },
    {
      "cve_id": "CVE-2019-9948",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call.",
      "public_date": "2019-03-23 18:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call.",
      "published_date": "2019-03-23 18:29:02.09+00:00"
    },
    {
      "cve_id": "CVE-2019-9947",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2019-03-23 18:29:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2019-03-23 18:29:02.027+00:00"
    },
    {
      "cve_id": "CVE-2019-9740",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2019-03-13 03:29:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2019-03-13 03:29:00.193+00:00"
    },
    {
      "cve_id": "CVE-2019-9674",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "Lib/zipfile.py in Python through 3.7.2 allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.",
      "public_date": "2020-02-04 15:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Lib/zipfile.py in Python through 3.7.2 allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.",
      "published_date": "2020-02-04 15:15:11.633+00:00"
    },
    {
      "cve_id": "CVE-2019-9636",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by: Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is: Information disclosure (credentials, cookies, etc. that are cached against a given hostname). The components are: urllib.parse.urlsplit, urllib.parse.urlparse. The attack vector is: A specially crafted URL could be incorrectly parsed to locate cookies or authentication data and send that information to a different host than when parsed correctly. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2019-03-08 21:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by: Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is: Information disclosure (credentials, cookies, etc. that are cached against a given hostname). The components are: urllib.parse.urlsplit, urllib.parse.urlparse. The attack vector is: A specially crafted URL could be incorrectly parsed to locate cookies or authentication data and send that information to a different host than when parsed correctly. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2019-03-08 21:29:00.703+00:00"
    },
    {
      "cve_id": "CVE-2019-5010",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.",
      "public_date": "2019-10-31 21:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.",
      "published_date": "2019-10-31 21:15:13.293+00:00"
    },
    {
      "cve_id": "CVE-2019-20907",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation.",
      "public_date": "2020-07-13 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation.",
      "published_date": "2020-07-13 13:15:10.763+00:00"
    },
    {
      "cve_id": "CVE-2019-18348",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.). This is fixed in: v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1; v3.6.11, v3.6.11rc1, v3.6.12; v3.7.8, v3.7.8rc1, v3.7.9; v3.8.3, v3.8.3rc1, v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1.",
      "public_date": "2019-10-23 17:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.). This is fixed in: v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1; v3.6.11, v3.6.11rc1, v3.6.12; v3.7.8, v3.7.8rc1, v3.7.9; v3.8.3, v3.8.3rc1, v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1.",
      "published_date": "2019-10-23 17:15:12.973+00:00"
    },
    {
      "cve_id": "CVE-2019-17514",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "library/glob.html in the Python 2 and 3 documentation before 2016 has potentially misleading information about whether sorting occurs, as demonstrated by irreproducible cancer-research results. NOTE: the effects of this documentation cross application domains, and thus it is likely that security-relevant code elsewhere is affected. This issue is not a Python implementation bug, and there are no reports that NMR researchers were specifically relying on library/glob.html. In other words, because the older documentation stated \"finds all the pathnames matching a specified pattern according to the rules used by the Unix shell,\" one might have incorrectly inferred that the sorting that occurs in a Unix shell also occurred for glob.glob. There is a workaround in newer versions of Willoughby nmr-data_compilation-p2.py and nmr-data_compilation-p3.py, which call sort() directly.",
      "public_date": "2019-10-12 13:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "library/glob.html in the Python 2 and 3 documentation before 2016 has potentially misleading information about whether sorting occurs, as demonstrated by irreproducible cancer-research results. NOTE: the effects of this documentation cross application domains, and thus it is likely that security-relevant code elsewhere is affected. This issue is not a Python implementation bug, and there are no reports that NMR researchers were specifically relying on library/glob.html. In other words, because the older documentation stated \"finds all the pathnames matching a specified pattern according to the rules used by the Unix shell,\" one might have incorrectly inferred that the sorting that occurs in a Unix shell also occurred for glob.glob. There is a workaround in newer versions of Willoughby nmr-data_compilation-p2.py and nmr-data_compilation-p3.py, which call sort() directly.",
      "published_date": "2019-10-12 13:15:10.79+00:00"
    },
    {
      "cve_id": "CVE-2019-16935",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.",
      "public_date": "2019-09-28 02:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.",
      "published_date": "2019-09-28 02:15:10.463+00:00"
    },
    {
      "cve_id": "CVE-2019-16056",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.",
      "public_date": "2019-09-06 18:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.",
      "published_date": "2019-09-06 18:15:15.443+00:00"
    },
    {
      "cve_id": "CVE-2019-10160",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.",
      "public_date": "2019-06-07 18:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.",
      "published_date": "2019-06-07 18:29:00.28+00:00"
    },
    {
      "cve_id": "CVE-2018-20852",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
      "public_date": "2019-07-13 21:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
      "published_date": "2019-07-13 21:15:10.377+00:00"
    },
    {
      "cve_id": "CVE-2018-20406",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Modules/_pickle.c in Python before 3.7.1 has an integer overflow via a large LONG_BINPUT value that is mishandled during a \"resize to twice the size\" attempt. This issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data. This issue is fixed in: v3.4.10, v3.4.10rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.7rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.7, v3.6.7rc1, v3.6.7rc2, v3.6.8, v3.6.8rc1, v3.6.9, v3.6.9rc1; v3.7.1, v3.7.1rc1, v3.7.1rc2, v3.7.2, v3.7.2rc1, v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "public_date": "2018-12-23 23:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "Modules/_pickle.c in Python before 3.7.1 has an integer overflow via a large LONG_BINPUT value that is mishandled during a \"resize to twice the size\" attempt. This issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data. This issue is fixed in: v3.4.10, v3.4.10rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.7rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.7, v3.6.7rc1, v3.6.7rc2, v3.6.8, v3.6.8rc1, v3.6.9, v3.6.9rc1; v3.7.1, v3.7.1rc1, v3.7.1rc2, v3.7.2, v3.7.2rc1, v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
      "published_date": "2018-12-23 23:29:00.307+00:00"
    },
    {
      "cve_id": "CVE-2018-14647",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
      "public_date": "2018-09-25 00:29:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
      "published_date": "2018-09-25 00:29:00.703+00:00"
    },
    {
      "cve_id": "CVE-2018-1061",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method. An attacker could use this flaw to cause denial of service.",
      "public_date": "2018-06-19 12:29:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
      "published_date": "2018-06-19 12:29:00.22+00:00"
    },
    {
      "cve_id": "CVE-2018-1060",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
      "public_date": "2018-06-18 14:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
      "published_date": "2018-06-18 14:29:00.213+00:00"
    },
    {
      "cve_id": "CVE-2018-1000802",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
      "public_date": "2018-09-18 17:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service, Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function. This vulnerability appears to have been fixed in after commit add531a1e55b0a739b0f42582f1c9747e5649ace.",
      "published_date": "2018-09-18 17:29:00.88+00:00"
    },
    {
      "cve_id": "CVE-2018-1000117",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Python Software Foundation CPython version From 3.2 until 3.6.4 on Windows contains a Buffer Overflow vulnerability in os.symlink() function on Windows that can result in Arbitrary code execution, likely escalation of privilege. This attack appears to be exploitable via a python script that creates a symlink with an attacker controlled name or location. This vulnerability appears to have been fixed in 3.7.0 and 3.6.5.",
      "public_date": "2018-03-07 14:29:00+00:00",
      "cvss_score": 6.7,
      "severity": "MEDIUM",
      "summary": "Python Software Foundation CPython version From 3.2 until 3.6.4 on Windows contains a Buffer Overflow vulnerability in os.symlink() function on Windows that can result in Arbitrary code execution, likely escalation of privilege. This attack appears to be exploitable via a python script that creates a symlink with an attacker controlled name or location. This vulnerability appears to have been fixed in 3.7.0 and 3.6.5.",
      "published_date": "2018-03-07 14:29:00.28+00:00"
    },
    {
      "cve_id": "CVE-2018-1000030",
      "source": "GOST",
      "affected_package": "python3.5",
      "installed_version": "3.5.2-2ubuntu0~16.04.13",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Python 2.7.14 is vulnerable to a Heap-Buffer-Overflow as well as a Heap-Use-After-Free. Python versions prior to 2.7.14 may also be vulnerable and it appears that Python 2.7.17 and prior may also be vulnerable however this has not been confirmed. The vulnerability lies when multiply threads are handling large amounts of data. In both cases there is essentially a race condition that occurs. For the Heap-Buffer-Overflow, Thread 2 is creating the size for a buffer, but Thread1 is already writing to the buffer without knowing how much to write. So when a large amount of data is being processed, it is very easy to cause memory corruption using a Heap-Buffer-Overflow. As for the Use-After-Free, Thread3->Malloc->Thread1->Free's->Thread2-Re-uses-Free'd Memory. The PSRT has stated that this is not a security vulnerability due to the fact that the attacker must be able to run code, however in some situations, such as function as a service, this vulnerability can potentially be used by an attacker to violate a trust boundary, as such the DWF feels this issue deserves a CVE.",
      "public_date": "2018-02-08 17:29:00+00:00",
      "cvss_score": 3.6,
      "severity": "LOW",
      "summary": "Python 2.7.14 is vulnerable to a Heap-Buffer-Overflow as well as a Heap-Use-After-Free. Python versions prior to 2.7.14 may also be vulnerable and it appears that Python 2.7.17 and prior may also be vulnerable however this has not been confirmed. The vulnerability lies when multiply threads are handling large amounts of data. In both cases there is essentially a race condition that occurs. For the Heap-Buffer-Overflow, Thread 2 is creating the size for a buffer, but Thread1 is already writing to the buffer without knowing how much to write. So when a large amount of data is being processed, it is very easy to cause memory corruption using a Heap-Buffer-Overflow. As for the Use-After-Free, Thread3->Malloc->Thread1->Free's->Thread2-Re-uses-Free'd Memory. The PSRT has stated that this is not a security vulnerability due to the fact that the attacker must be able to run code, however in some situations, such as function as a service, this vulnerability can potentially be used by an attacker to violate a trust boundary, as such the DWF feels this issue deserves a CVE.",
      "published_date": "2018-02-08 17:29:00.177+00:00"
    },
    {
      "cve_id": "CVE-2023-7090",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in sudo in the handling of ipa_hostname, where ipa_hostname from /etc/sssd/sssd.conf was not propagated in sudo. Therefore, it leads to privilege mismanagement vulnerability in applications, where client hosts retain privileges even after retracting them.",
      "public_date": "2023-12-23 23:15:00+00:00",
      "cvss_score": 6.6,
      "severity": "MEDIUM",
      "summary": "A flaw was found in sudo in the handling of ipa_hostname, where ipa_hostname from /etc/sssd/sssd.conf was not propagated in sudo. Therefore, it leads to privilege mismanagement vulnerability in applications, where client hosts retain privileges even after retracting them.",
      "published_date": "2023-12-23 23:15:07.56+00:00"
    },
    {
      "cve_id": "CVE-2023-42465",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Sudo before 1.9.15 might allow row hammer attacks (for authentication bypass or privilege escalation) because application logic sometimes is based on not equaling an error value (instead of equaling a success value), and because the values do not resist flips of a single bit.",
      "public_date": "2023-12-22 16:15:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "Sudo before 1.9.15 might allow row hammer attacks (for authentication bypass or privilege escalation) because application logic sometimes is based on not equaling an error value (instead of equaling a success value), and because the values do not resist flips of a single bit.",
      "published_date": "2023-12-22 16:15:08.057+00:00"
    },
    {
      "cve_id": "CVE-2023-28487",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Sudo before 1.9.13 does not escape control characters in sudoreplay output.",
      "public_date": "2023-03-16 01:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Sudo before 1.9.13 does not escape control characters in sudoreplay output.",
      "published_date": "2023-03-16 01:15:47.067+00:00"
    },
    {
      "cve_id": "CVE-2023-28486",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Sudo before 1.9.13 does not escape control characters in log messages.",
      "public_date": "2023-03-16 01:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "Sudo before 1.9.13 does not escape control characters in log messages.",
      "published_date": "2023-03-16 01:15:47.003+00:00"
    },
    {
      "cve_id": "CVE-2023-27320",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Sudo before 1.9.13p2 has a double free in the per-command chroot feature.",
      "public_date": "2023-02-28 18:15:00+00:00",
      "cvss_score": 7.2,
      "severity": "HIGH",
      "summary": "Sudo before 1.9.13p2 has a double free in the per-command chroot feature.",
      "published_date": "2023-02-28 18:15:10.547+00:00"
    },
    {
      "cve_id": "CVE-2023-22809",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Sudo before 1.9.12p2, the sudoedit (aka -e) feature mishandles extra arguments passed in the user-provided environment variables (SUDO_EDITOR, VISUAL, and EDITOR), allowing a local attacker to append arbitrary entries to the list of files to process. This can lead to privilege escalation. Affected versions are 1.8.0 through 1.9.12.p1. The problem exists because a user-specified editor may contain a \"--\" argument that defeats a protection mechanism, e.g., an EDITOR='vim -- /path/to/extra/file' value.",
      "public_date": "2023-01-18 17:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "In Sudo before 1.9.12p2, the sudoedit (aka -e) feature mishandles extra arguments passed in the user-provided environment variables (SUDO_EDITOR, VISUAL, and EDITOR), allowing a local attacker to append arbitrary entries to the list of files to process. This can lead to privilege escalation. Affected versions are 1.8.0 through 1.9.12.p1. The problem exists because a user-specified editor may contain a \"--\" argument that defeats a protection mechanism, e.g., an EDITOR='vim -- /path/to/extra/file' value.",
      "published_date": "2023-01-18 17:15:10.353+00:00"
    },
    {
      "cve_id": "CVE-2022-43995",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Sudo 1.8.0 through 1.9.12, with the crypt() password backend, contains a plugins/sudoers/auth/passwd.c array-out-of-bounds error that can result in a heap-based buffer over-read. This can be triggered by arbitrary local users with access to Sudo by entering a password of seven characters or fewer. The impact could vary depending on the system libraries, compiler, and processor architecture.",
      "public_date": "2022-11-02 14:15:00+00:00",
      "cvss_score": 7.1,
      "severity": "HIGH",
      "summary": "Sudo 1.8.0 through 1.9.12, with the crypt() password backend, contains a plugins/sudoers/auth/passwd.c array-out-of-bounds error that can result in a heap-based buffer over-read. This can be triggered by arbitrary local users with access to Sudo by entering a password of seven characters or fewer. The impact could vary depending on the system libraries, compiler, and processor architecture.",
      "published_date": "2022-11-02 14:15:16.187+00:00"
    },
    {
      "cve_id": "CVE-2022-33070",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Protobuf-c v1.4.0 was discovered to contain an invalid arithmetic shift via the function parse_tag_and_wiretype in protobuf-c/protobuf-c.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via unspecified vectors.",
      "public_date": "2022-06-23 17:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Protobuf-c v1.4.0 was discovered to contain an invalid arithmetic shift via the function parse_tag_and_wiretype in protobuf-c/protobuf-c.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via unspecified vectors.",
      "published_date": "2022-06-23 17:15:14.43+00:00"
    },
    {
      "cve_id": "CVE-2021-3156",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character.",
      "public_date": "2021-01-26 21:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character.",
      "published_date": "2021-01-26 21:15:12.987+00:00"
    },
    {
      "cve_id": "CVE-2021-23240",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "negligible",
      "description": "selinux_edit_copy_tfiles in sudoedit in Sudo before 1.9.5 allows a local unprivileged user to gain file ownership and escalate privileges by replacing a temporary file with a symlink to an arbitrary file target. This affects SELinux RBAC support in permissive mode. Machines without SELinux are not vulnerable.",
      "public_date": "2021-01-12 09:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "selinux_edit_copy_tfiles in sudoedit in Sudo before 1.9.5 allows a local unprivileged user to gain file ownership and escalate privileges by replacing a temporary file with a symlink to an arbitrary file target. This affects SELinux RBAC support in permissive mode. Machines without SELinux are not vulnerable.",
      "published_date": "2021-01-12 09:15:14.107+00:00"
    },
    {
      "cve_id": "CVE-2021-23239",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "The sudoedit personality of Sudo before 1.9.5 may allow a local unprivileged user to perform arbitrary directory-existence tests by winning a sudo_edit.c race condition in replacing a user-controlled directory by a symlink to an arbitrary path.",
      "public_date": "2021-01-12 09:15:00+00:00",
      "cvss_score": 2.5,
      "severity": "LOW",
      "summary": "The sudoedit personality of Sudo before 1.9.5 may allow a local unprivileged user to perform arbitrary directory-existence tests by winning a sudo_edit.c race condition in replacing a user-controlled directory by a symlink to an arbitrary path.",
      "published_date": "2021-01-12 09:15:14.043+00:00"
    },
    {
      "cve_id": "CVE-2019-19234",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** In Sudo through 1.8.29, the fact that a user has been blocked (e.g., by using the ! character in the shadow file instead of a password hash) is not considered, allowing an attacker (who has access to a Runas ALL sudoer account) to impersonate any blocked user. NOTE: The software maintainer believes that this CVE is not valid. Disabling local password authentication for a user is not the same as disabling all access to that user--the user may still be able to login via other means (ssh key, kerberos, etc). Both the Linux shadow(5) and passwd(1) manuals are clear on this. Indeed it is a valid use case to have local accounts that are _only_ accessible via sudo and that cannot be logged into with a password. Sudo 1.8.30 added an optional setting to check the _shell_ of the target user (not the encrypted password!) against the contents of /etc/shells but that is not the same thing as preventing access to users with an invalid password hash.",
      "public_date": "2019-12-19 21:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Sudo through 1.8.29, the fact that a user has been blocked (e.g., by using the ! character in the shadow file instead of a password hash) is not considered, allowing an attacker (who has access to a Runas ALL sudoer account) to impersonate any blocked user. NOTE: The software maintainer believes that this CVE is not valid. Disabling local password authentication for a user is not the same as disabling all access to that user--the user may still be able to login via other means (ssh key, kerberos, etc). Both the Linux shadow(5) and passwd(1) manuals are clear on this. Indeed it is a valid use case to have local accounts that are _only_ accessible via sudo and that cannot be logged into with a password. Sudo 1.8.30 added an optional setting to check the _shell_ of the target user (not the encrypted password!) against the contents of /etc/shells but that is not the same thing as preventing access to users with an invalid password hash",
      "published_date": "2019-12-19 21:15:13.823+00:00"
    },
    {
      "cve_id": "CVE-2019-19232",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** In Sudo through 1.8.29, an attacker with access to a Runas ALL sudoer account can impersonate a nonexistent user by invoking sudo with a numeric uid that is not associated with any user. NOTE: The software maintainer believes that this is not a vulnerability because running a command via sudo as a user not present in the local password database is an intentional feature. Because this behavior surprised some users, sudo 1.8.30 introduced an option to enable/disable this behavior with the default being disabled. However, this does not change the fact that sudo was behaving as intended, and as documented, in earlier versions.",
      "public_date": "2019-12-19 21:15:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "In Sudo through 1.8.29, an attacker with access to a Runas ALL sudoer account can impersonate a nonexistent user by invoking sudo with a numeric uid that is not associated with any user. NOTE: The software maintainer believes that this is not a vulnerability because running a command via sudo as a user not present in the local password database is an intentional feature. Because this behavior surprised some users, sudo 1.8.30 introduced an option to enable/disable this behavior with the default being disabled. However, this does not change the fact that sudo was behaving as intended, and as documented, in earlier versions",
      "published_date": "2019-12-19 21:15:13.73+00:00"
    },
    {
      "cve_id": "CVE-2019-18684",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** Sudo through 1.8.29 allows local users to escalate to root if they have write access to file descriptor 3 of the sudo process. This occurs because of a race condition between determining a uid, and the setresuid and openat system calls. The attacker can write \"ALL ALL=(ALL) NOPASSWD:ALL\" to /proc/#####/fd/3 at a time when Sudo is prompting for a password. NOTE: This has been disputed due to the way Linux /proc works. It has been argued that writing to /proc/#####/fd/3 would only be viable if you had permission to write to /etc/sudoers. Even with write permission to /proc/#####/fd/3, it would not help you write to /etc/sudoers.",
      "public_date": "2019-11-04 16:15:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "Sudo through 1.8.29 allows local users to escalate to root if they have write access to file descriptor 3 of the sudo process. This occurs because of a race condition between determining a uid, and the setresuid and openat system calls. The attacker can write \"ALL ALL=(ALL) NOPASSWD:ALL\" to /proc/#####/fd/3 at a time when Sudo is prompting for a password. NOTE: This has been disputed due to the way Linux /proc works. It has been argued that writing to /proc/#####/fd/3 would only be viable if you had permission to write to /etc/sudoers. Even with write permission to /proc/#####/fd/3, it would not help you write to /etc/sudoers",
      "published_date": "2019-11-04 16:15:11.437+00:00"
    },
    {
      "cve_id": "CVE-2019-18634",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c.",
      "public_date": "2020-01-29 18:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c.",
      "published_date": "2020-01-29 18:15:12.247+00:00"
    },
    {
      "cve_id": "CVE-2019-14287",
      "source": "GOST",
      "affected_package": "sudo",
      "installed_version": "1.8.16-0ubuntu1.10",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In Sudo before 1.8.28, an attacker with access to a Runas ALL sudoer account can bypass certain policy blacklists and session PAM modules, and can cause incorrect logging, by invoking sudo with a crafted user ID. For example, this allows bypass of !root configuration, and USER= logging, for a \"sudo -u \\#$((0xffffffff))\" command.",
      "public_date": "2019-10-17 18:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "In Sudo before 1.8.28, an attacker with access to a Runas ALL sudoer account can bypass certain policy blacklists and session PAM modules, and can cause incorrect logging, by invoking sudo with a crafted user ID. For example, this allows bypass of !root configuration, and USER= logging, for a \"sudo -u \\#$((0xffffffff))\" command.",
      "published_date": "2019-10-17 18:15:12.33+00:00"
    },
    {
      "cve_id": "CVE-2025-4598",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.  A SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
      "public_date": "2025-05-30 14:15:00+00:00",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
      "published_date": "2025-05-30 14:15:23.557+00:00"
    },
    {
      "cve_id": "CVE-2023-7008",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
      "public_date": "2023-12-23 13:15:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
      "published_date": "2023-12-23 13:15:07.573+00:00"
    },
    {
      "cve_id": "CVE-2023-31439",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
      "public_date": "2023-06-13 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
      "published_date": "2023-06-13 17:15:14.753+00:00"
    },
    {
      "cve_id": "CVE-2023-31438",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
      "public_date": "2023-06-13 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
      "published_date": "2023-06-13 17:15:14.707+00:00"
    },
    {
      "cve_id": "CVE-2023-31437",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
      "public_date": "2023-06-13 17:15:00+00:00",
      "cvss_score": 5.3,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
      "published_date": "2023-06-13 17:15:14.657+00:00"
    },
    {
      "cve_id": "CVE-2023-26604",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
      "public_date": "2023-03-03 16:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
      "published_date": "2023-03-03 16:15:10.607+00:00"
    },
    {
      "cve_id": "CVE-2022-45873",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "systemd 250 and 251 allows local users to achieve a systemd-coredump deadlock by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively, and put it in a deeply nested directory to make its backtrace large enough to cause the deadlock. This must be done 16 times when MaxConnections=16 is set for the systemd/units/systemd-coredump.socket file.",
      "public_date": "2022-11-23 23:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "systemd 250 and 251 allows local users to achieve a systemd-coredump deadlock by triggering a crash that has a long backtrace. This occurs in parse_elf_object in shared/elf-util.c. The exploitation methodology is to crash a binary calling the same function recursively, and put it in a deeply nested directory to make its backtrace large enough to cause the deadlock. This must be done 16 times when MaxConnections=16 is set for the systemd/units/systemd-coredump.socket file.",
      "published_date": "2022-11-23 23:15:10.183+00:00"
    },
    {
      "cve_id": "CVE-2022-4415",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
      "public_date": "2023-01-11 15:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
      "published_date": "2023-01-11 15:15:09.59+00:00"
    },
    {
      "cve_id": "CVE-2022-3821",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
      "public_date": "2022-11-08 22:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
      "published_date": "2022-11-08 22:15:16.7+00:00"
    },
    {
      "cve_id": "CVE-2022-2526",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
      "public_date": "2022-09-09 15:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
      "published_date": "2022-09-09 15:15:10.107+00:00"
    },
    {
      "cve_id": "CVE-2021-3997",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
      "public_date": "2022-08-23 20:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
      "published_date": "2022-08-23 20:15:08.67+00:00"
    },
    {
      "cve_id": "CVE-2021-33910",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
      "public_date": "2021-07-20 19:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
      "published_date": "2021-07-20 19:15:09.783+00:00"
    },
    {
      "cve_id": "CVE-2020-1712",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A heap use-after-free vulnerability was found in systemd before version v245-rc1, where asynchronous Polkit queries are performed while handling dbus messages. A local unprivileged attacker can abuse this flaw to crash systemd services or potentially execute code and elevate their privileges, by sending specially crafted dbus messages.",
      "public_date": "2020-03-31 17:15:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A heap use-after-free vulnerability was found in systemd before version v245-rc1, where asynchronous Polkit queries are performed while handling dbus messages. A local unprivileged attacker can abuse this flaw to crash systemd services or potentially execute code and elevate their privileges, by sending specially crafted dbus messages.",
      "published_date": "2020-03-31 17:15:26.577+00:00"
    },
    {
      "cve_id": "CVE-2020-13776",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
      "public_date": "2020-06-03 03:15:00+00:00",
      "cvss_score": 6.7,
      "severity": "MEDIUM",
      "summary": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
      "published_date": "2020-06-03 03:15:10.677+00:00"
    },
    {
      "cve_id": "CVE-2020-13529",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
      "public_date": "2021-05-10 16:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
      "published_date": "2021-05-10 16:15:07.373+00:00"
    },
    {
      "cve_id": "CVE-2019-6454",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An issue was discovered in sd-bus in systemd 239. bus_process_object() in libsystemd/sd-bus/bus-objects.c allocates a variable-length stack buffer for temporarily storing the object path of incoming D-Bus messages. An unprivileged local user can exploit this by sending a specially crafted message to PID1, causing the stack pointer to jump over the stack guard pages into an unmapped memory region and trigger a denial of service (systemd PID1 crash and kernel panic).",
      "public_date": "2019-03-21 16:01:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "An issue was discovered in sd-bus in systemd 239. bus_process_object() in libsystemd/sd-bus/bus-objects.c allocates a variable-length stack buffer for temporarily storing the object path of incoming D-Bus messages. An unprivileged local user can exploit this by sending a specially crafted message to PID1, causing the stack pointer to jump over the stack guard pages into an unmapped memory region and trigger a denial of service (systemd PID1 crash and kernel panic).",
      "published_date": "2019-03-21 16:01:08.203+00:00"
    },
    {
      "cve_id": "CVE-2019-3844",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.",
      "public_date": "2019-04-26 21:29:00+00:00",
      "cvss_score": 4.5,
      "severity": "MEDIUM",
      "summary": "It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.",
      "published_date": "2019-04-26 21:29:00.423+00:00"
    },
    {
      "cve_id": "CVE-2019-3843",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.",
      "public_date": "2019-04-26 21:29:00+00:00",
      "cvss_score": 4.5,
      "severity": "MEDIUM",
      "summary": "It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.",
      "published_date": "2019-04-26 21:29:00.36+00:00"
    },
    {
      "cve_id": "CVE-2019-3842",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \"allow_active\" element rather than \"allow_any\".",
      "public_date": "2019-04-09 21:29:00+00:00",
      "cvss_score": 4.5,
      "severity": "MEDIUM",
      "summary": "In systemd before v242-rc4, it was discovered that pam_systemd does not properly sanitize the environment before using the XDG_SEAT variable. It is possible for an attacker, in some particular configurations, to set a XDG_SEAT environment variable which allows for commands to be checked against polkit policies using the \"allow_active\" element rather than \"allow_any\".",
      "published_date": "2019-04-09 21:29:03.443+00:00"
    },
    {
      "cve_id": "CVE-2019-3815",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A memory leak was discovered in the backport of fixes for CVE-2018-16864 in Red Hat Enterprise Linux. Function dispatch_message_real() in journald-server.c does not free the memory allocated by set_iovec_field_free() to store the `_CMDLINE=` entry. A local attacker may use this flaw to make systemd-journald crash. This issue only affects versions shipped with Red Hat Enterprise since v219-62.2.",
      "public_date": "2019-01-28 15:29:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "A memory leak was discovered in the backport of fixes for CVE-2018-16864 in Red Hat Enterprise Linux. Function dispatch_message_real() in journald-server.c does not free the memory allocated by set_iovec_field_free() to store the `_CMDLINE=` entry. A local attacker may use this flaw to make systemd-journald crash. This issue only affects versions shipped with Red Hat Enterprise since v219-62.2.",
      "published_date": "2019-01-28 15:29:00.307+00:00"
    },
    {
      "cve_id": "CVE-2019-20386",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.",
      "public_date": "2020-01-21 06:15:00+00:00",
      "cvss_score": 2.4,
      "severity": "LOW",
      "summary": "An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.",
      "published_date": "2020-01-21 06:15:11.827+00:00"
    },
    {
      "cve_id": "CVE-2019-15718",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In systemd 240, bus_open_system_watch_bind_with_description in shared/bus-util.c (as used by systemd-resolved to connect to the system D-Bus instance), calls sd_bus_set_trusted, which disables access controls for incoming D-Bus messages. An unprivileged user can exploit this by executing D-Bus methods that should be restricted to privileged users, in order to change the system's DNS resolver settings.",
      "public_date": "2019-09-04 12:15:00+00:00",
      "cvss_score": 4.4,
      "severity": "MEDIUM",
      "summary": "In systemd 240, bus_open_system_watch_bind_with_description in shared/bus-util.c (as used by systemd-resolved to connect to the system D-Bus instance), calls sd_bus_set_trusted, which disables access controls for incoming D-Bus messages. An unprivileged user can exploit this by executing D-Bus methods that should be restricted to privileged users, in order to change the system's DNS resolver settings.",
      "published_date": "2019-09-04 12:15:11.17+00:00"
    },
    {
      "cve_id": "CVE-2018-6954",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "systemd-tmpfiles in systemd through 237 mishandles symlinks present in non-terminal path components, which allows local users to obtain ownership of arbitrary files via vectors involving creation of a directory and a file under that directory, and later replacing that directory with a symlink. This occurs even if the fs.protected_symlinks sysctl is turned on.",
      "public_date": "2018-02-13 20:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "systemd-tmpfiles in systemd through 237 mishandles symlinks present in non-terminal path components, which allows local users to obtain ownership of arbitrary files via vectors involving creation of a directory and a file under that directory, and later replacing that directory with a symlink. This occurs even if the fs.protected_symlinks sysctl is turned on.",
      "published_date": "2018-02-13 20:29:00.547+00:00"
    },
    {
      "cve_id": "CVE-2018-21029",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "** DISPUTED ** systemd 239 through 245 accepts any certificate signed by a trusted certificate authority for DNS Over TLS. Server Name Indication (SNI) is not sent, and there is no hostname validation with the GnuTLS backend. NOTE: This has been disputed by the developer as not a vulnerability since hostname validation does not have anything to do with this issue (i.e. there is no hostname to be sent).",
      "public_date": "2019-10-30 22:15:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "systemd 239 through 245 accepts any certificate signed by a trusted certificate authority for DNS Over TLS. Server Name Indication (SNI) is not sent, and there is no hostname validation with the GnuTLS backend. NOTE: This has been disputed by the developer as not a vulnerability since hostname validation does not have anything to do with this issue (i.e. there is no hostname to be sent)",
      "published_date": "2019-10-30 22:15:10.667+00:00"
    },
    {
      "cve_id": "CVE-2018-20839",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "systemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled.",
      "public_date": "2019-05-17 04:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "systemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled.",
      "published_date": "2019-05-17 04:29:00.933+00:00"
    },
    {
      "cve_id": "CVE-2018-16888",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "It was discovered systemd does not correctly check the content of PIDFile files before using it to kill processes. When a service is run from an unprivileged user (e.g. User field set in the service file), a local attacker who is able to write to the PIDFile of the mentioned service may use this flaw to trick systemd into killing other services and/or privileged processes. Versions before v237 are vulnerable.",
      "public_date": "2019-01-14 22:29:00+00:00",
      "cvss_score": 4.4,
      "severity": "MEDIUM",
      "summary": "It was discovered systemd does not correctly check the content of PIDFile files before using it to kill processes. When a service is run from an unprivileged user (e.g. User field set in the service file), a local attacker who is able to write to the PIDFile of the mentioned service may use this flaw to trick systemd into killing other services and/or privileged processes. Versions before v237 are vulnerable.",
      "published_date": "2019-01-14 22:29:00.233+00:00"
    },
    {
      "cve_id": "CVE-2018-16866",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An out of bounds read was discovered in systemd-journald in the way it parses log messages that terminate with a colon ':'. A local attacker can use this flaw to disclose process memory data. Versions from v221 to v239 are vulnerable.",
      "public_date": "2019-01-11 19:29:00+00:00",
      "cvss_score": 4.3,
      "severity": "MEDIUM",
      "summary": "An out of bounds read was discovered in systemd-journald in the way it parses log messages that terminate with a colon ':'. A local attacker can use this flaw to disclose process memory data. Versions from v221 to v239 are vulnerable.",
      "published_date": "2019-01-11 19:29:00.233+00:00"
    },
    {
      "cve_id": "CVE-2018-16865",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "An allocation of memory without limits, that could result in the stack clashing with another memory region, was discovered in systemd-journald when many entries are sent to the journal socket. A local attacker, or a remote one if systemd-journal-remote is used, may use this flaw to crash systemd-journald or execute code with journald privileges. Versions through v240 are vulnerable.",
      "public_date": "2019-01-11 21:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "An allocation of memory without limits, that could result in the stack clashing with another memory region, was discovered in systemd-journald when many entries are sent to the journal socket. A local attacker, or a remote one if systemd-journal-remote is used, may use this flaw to crash systemd-journald or execute code with journald privileges. Versions through v240 are vulnerable.",
      "published_date": "2019-01-11 21:29:00.257+00:00"
    },
    {
      "cve_id": "CVE-2018-16864",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "high",
      "description": "An allocation of memory without limits, that could result in the stack clashing with another memory region, was discovered in systemd-journald when a program with long command line arguments calls syslog. A local attacker may use this flaw to crash systemd-journald or escalate his privileges. Versions through v240 are vulnerable.",
      "public_date": "2019-01-11 20:29:00+00:00",
      "cvss_score": 7.4,
      "severity": "HIGH",
      "summary": "An allocation of memory without limits, that could result in the stack clashing with another memory region, was discovered in systemd-journald when a program with long command line arguments calls syslog. A local attacker may use this flaw to crash systemd-journald or escalate his privileges. Versions through v240 are vulnerable.",
      "published_date": "2019-01-11 20:29:00.277+00:00"
    },
    {
      "cve_id": "CVE-2018-15688",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A buffer overflow vulnerability in the dhcp6 client of systemd allows a malicious dhcp6 server to overwrite heap memory in systemd-networkd. Affected releases are systemd: versions up to and including 239.",
      "public_date": "2018-10-26 14:29:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "A buffer overflow vulnerability in the dhcp6 client of systemd allows a malicious dhcp6 server to overwrite heap memory in systemd-networkd. Affected releases are systemd: versions up to and including 239.",
      "published_date": "2018-10-26 14:29:00.897+00:00"
    },
    {
      "cve_id": "CVE-2018-15687",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A race condition in chown_one() of systemd allows an attacker to cause systemd to set arbitrary permissions on arbitrary files. Affected releases are systemd versions up to and including 239.",
      "public_date": "2018-10-26 14:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A race condition in chown_one() of systemd allows an attacker to cause systemd to set arbitrary permissions on arbitrary files. Affected releases are systemd versions up to and including 239.",
      "published_date": "2018-10-26 14:29:00.757+00:00"
    },
    {
      "cve_id": "CVE-2018-15686",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A vulnerability in unit_deserialize of systemd allows an attacker to supply arbitrary state across systemd re-execution via NotifyAccess. This can be used to improperly influence systemd execution and possibly lead to root privilege escalation. Affected releases are systemd versions up to and including 239.",
      "public_date": "2018-10-26 14:29:00+00:00",
      "cvss_score": 7.0,
      "severity": "HIGH",
      "summary": "A vulnerability in unit_deserialize of systemd allows an attacker to supply arbitrary state across systemd re-execution via NotifyAccess. This can be used to improperly influence systemd execution and possibly lead to root privilege escalation. Affected releases are systemd versions up to and including 239.",
      "published_date": "2018-10-26 14:29:00.613+00:00"
    },
    {
      "cve_id": "CVE-2018-1049",
      "source": "GOST",
      "affected_package": "systemd",
      "installed_version": "229-4ubuntu21.27",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In systemd prior to 234 a race condition exists between .mount and .automount units such that automount requests from kernel may not be serviced by systemd resulting in kernel holding the mountpoint and any processes that try to use said mount will hang. A race condition like this may lead to denial of service, until mount points are unmounted.",
      "public_date": "2018-02-16 21:29:00+00:00",
      "cvss_score": 5.9,
      "severity": "MEDIUM",
      "summary": "In systemd prior to 234 a race condition exists between .mount and .automount units such that automount requests from kernel may not be serviced by systemd resulting in kernel holding the mountpoint and any processes that try to use said mount will hang. A race condition like this may lead to denial of service, until mount points are unmounted.",
      "published_date": "2018-02-16 21:29:00.377+00:00"
    },
    {
      "cve_id": "CVE-2023-39804",
      "source": "GOST",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
      "public_date": "2024-03-27 04:15:00+00:00",
      "cvss_score": 6.2,
      "severity": "MEDIUM",
      "summary": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
      "published_date": "2024-03-27 04:15:08.897+00:00"
    },
    {
      "cve_id": "CVE-2022-48303",
      "source": "GOST",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
      "public_date": "2023-01-30 04:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
      "published_date": "2023-01-30 04:15:08.03+00:00"
    },
    {
      "cve_id": "CVE-2021-20193",
      "source": "GOST",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
      "public_date": "2021-03-26 17:15:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
      "published_date": "2021-03-26 17:15:12.843+00:00"
    },
    {
      "cve_id": "CVE-2019-9923",
      "source": "GOST",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.",
      "public_date": "2019-03-22 08:29:00+00:00",
      "cvss_score": 7.5,
      "severity": "HIGH",
      "summary": "pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.",
      "published_date": "2019-03-22 08:29:00.247+00:00"
    },
    {
      "cve_id": "CVE-2018-20482",
      "source": "GOST",
      "affected_package": "tar",
      "installed_version": "1.28-2.1ubuntu0.2",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "GNU Tar through 1.30, when --sparse is used, mishandles file shrinkage during read access, which allows local users to cause a denial of service (infinite read loop in sparse_dump_region in sparse.c) by modifying a file that is supposed to be archived by a different user's process (e.g., a system backup running as root).",
      "public_date": "2018-12-26 18:29:00+00:00",
      "cvss_score": 4.7,
      "severity": "MEDIUM",
      "summary": "GNU Tar through 1.30, when --sparse is used, mishandles file shrinkage during read access, which allows local users to cause a denial of service (infinite read loop in sparse_dump_region in sparse.c) by modifying a file that is supposed to be archived by a different user's process (e.g., a system backup running as root).",
      "published_date": "2018-12-26 18:29:00.373+00:00"
    },
    {
      "cve_id": "CVE-2022-0530",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A flaw was found in Unzip. The vulnerability occurs during the conversion of a wide string to a local string that leads to a heap of out-of-bound write. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
      "public_date": "2022-02-09 23:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "A flaw was found in Unzip. The vulnerability occurs during the conversion of a wide string to a local string that leads to a heap of out-of-bound write. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
      "published_date": "2022-02-09 23:15:16.677+00:00"
    },
    {
      "cve_id": "CVE-2022-0529",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A flaw was found in Unzip. The vulnerability occurs during the conversion of a wide string to a local string that leads to a heap of out-of-bound write. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
      "public_date": "2022-02-09 23:15:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "A flaw was found in Unzip. The vulnerability occurs during the conversion of a wide string to a local string that leads to a heap of out-of-bound write. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
      "published_date": "2022-02-09 23:15:16.627+00:00"
    },
    {
      "cve_id": "CVE-2021-4217",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A flaw was found in unzip. The vulnerability occurs due to improper handling of Unicode strings, which can lead to a null pointer dereference. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
      "public_date": "2022-08-24 16:15:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "A flaw was found in unzip. The vulnerability occurs due to improper handling of Unicode strings, which can lead to a null pointer dereference. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.",
      "published_date": "2022-08-24 16:15:10.09+00:00"
    },
    {
      "cve_id": "CVE-2019-13232",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Info-ZIP UnZip 6.0 mishandles the overlapping of files inside a ZIP container, leading to denial of service (resource consumption), aka a \"better zip bomb\" issue.",
      "public_date": "2019-07-04 13:15:00+00:00",
      "cvss_score": 3.3,
      "severity": "LOW",
      "summary": "Info-ZIP UnZip 6.0 mishandles the overlapping of files inside a ZIP container, leading to denial of service (resource consumption), aka a \"better zip bomb\" issue.",
      "published_date": "2019-07-04 13:15:10.75+00:00"
    },
    {
      "cve_id": "CVE-2018-18384",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Info-ZIP UnZip 6.0 has a buffer overflow in list.c, when a ZIP archive has a crafted relationship between the compressed-size value and the uncompressed-size value, because a buffer size is 10 and is supposed to be 12.",
      "public_date": "2018-10-16 16:50:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "Info-ZIP UnZip 6.0 has a buffer overflow in list.c, when a ZIP archive has a crafted relationship between the compressed-size value and the uncompressed-size value, because a buffer size is 10 and is supposed to be 12.",
      "published_date": "2018-10-16 16:50:12.773+00:00"
    },
    {
      "cve_id": "CVE-2018-1000035",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "A heap-based buffer overflow exists in Info-Zip UnZip version <= 6.00 in the processing of password-protected archives that allows an attacker to perform a denial of service or to possibly achieve code execution.",
      "public_date": "2018-02-09 23:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A heap-based buffer overflow exists in Info-Zip UnZip version <= 6.00 in the processing of password-protected archives that allows an attacker to perform a denial of service or to possibly achieve code execution.",
      "published_date": "2018-02-09 23:29:01.213+00:00"
    },
    {
      "cve_id": "CVE-2018-1000034",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An out-of-bounds read exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service and read sensitive memory.",
      "public_date": "2018-02-09 23:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "An out-of-bounds read exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service and read sensitive memory.",
      "published_date": "2018-02-09 23:29:01.167+00:00"
    },
    {
      "cve_id": "CVE-2018-1000033",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An out-of-bounds read exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service and read sensitive memory.",
      "public_date": "2018-02-09 23:29:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "An out-of-bounds read exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service and read sensitive memory.",
      "published_date": "2018-02-09 23:29:01.12+00:00"
    },
    {
      "cve_id": "CVE-2018-1000032",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A heap-based buffer overflow exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service or to possibly achieve code execution.",
      "public_date": "2018-02-09 23:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A heap-based buffer overflow exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service or to possibly achieve code execution.",
      "published_date": "2018-02-09 23:29:01.073+00:00"
    },
    {
      "cve_id": "CVE-2018-1000031",
      "source": "GOST",
      "affected_package": "unzip",
      "installed_version": "6.0-20ubuntu1.1",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "A heap-based buffer overflow exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service or to possibly achieve code execution.",
      "public_date": "2018-02-09 23:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "A heap-based buffer overflow exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service or to possibly achieve code execution.",
      "published_date": "2018-02-09 23:29:01.027+00:00"
    },
    {
      "cve_id": "CVE-2024-38428",
      "source": "GOST",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "url.c in GNU Wget through 1.24.5 mishandles semicolons in the userinfo subcomponent of a URI, and thus there may be insecure behavior in which data that was supposed to be in the userinfo subcomponent is misinterpreted to be part of the host subcomponent.",
      "public_date": "2024-06-16 03:15:00+00:00",
      "cvss_score": 9.1,
      "severity": "CRITICAL",
      "summary": "url.c in GNU Wget through 1.24.5 mishandles semicolons in the userinfo subcomponent of a URI, and thus there may be insecure behavior in which data that was supposed to be in the userinfo subcomponent is misinterpreted to be part of the host subcomponent.",
      "published_date": "2024-06-16 03:15:08.43+00:00"
    },
    {
      "cve_id": "CVE-2024-10524",
      "source": "GOST",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "Applications that use Wget to access a remote resource using shorthand URLs and pass arbitrary user credentials in the URL are vulnerable. In these cases attackers can enter crafted credentials which will cause Wget to access an arbitrary host.",
      "public_date": "2024-11-19 15:15:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "Applications that use Wget to access a remote resource using shorthand URLs and pass arbitrary user credentials in the URL are vulnerable. In these cases attackers can enter crafted credentials which will cause Wget to access an arbitrary host.",
      "published_date": "2024-11-19 15:15:06.74+00:00"
    },
    {
      "cve_id": "CVE-2021-31879",
      "source": "GOST",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "GNU Wget through 1.21.1 does not omit the Authorization header upon a redirect to a different origin, a related issue to CVE-2018-1000007.",
      "public_date": "2021-04-29 05:15:00+00:00",
      "cvss_score": 6.1,
      "severity": "MEDIUM",
      "summary": "GNU Wget through 1.21.1 does not omit the Authorization header upon a redirect to a different origin, a related issue to CVE-2018-1000007.",
      "published_date": "2021-04-29 05:15:08.707+00:00"
    },
    {
      "cve_id": "CVE-2019-5953",
      "source": "GOST",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "Buffer overflow in GNU Wget 1.20.1 and earlier allows remote attackers to cause a denial-of-service (DoS) or may execute an arbitrary code via unspecified vectors.",
      "public_date": "2019-05-17 16:29:00+00:00",
      "cvss_score": 9.8,
      "severity": "CRITICAL",
      "summary": "Buffer overflow in GNU Wget 1.20.1 and earlier allows remote attackers to cause a denial-of-service (DoS) or may execute an arbitrary code via unspecified vectors.",
      "published_date": "2019-05-17 16:29:05.36+00:00"
    },
    {
      "cve_id": "CVE-2018-20483",
      "source": "GOST",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "unknown",
      "priority": "low",
      "description": "set_file_metadata in xattr.c in GNU Wget before 1.20.1 stores a file's origin URL in the user.xdg.origin.url metadata attribute of the extended attributes of the downloaded file, which allows local users to obtain sensitive information (e.g., credentials contained in the URL) by reading this attribute, as demonstrated by getfattr. This also applies to Referer information in the user.xdg.referrer.url metadata attribute. According to 2016-07-22 in the Wget ChangeLog, user.xdg.origin.url was partially based on the behavior of fwrite_xattr in tool_xattr.c in curl.",
      "public_date": "2018-12-26 18:29:00+00:00",
      "cvss_score": 7.8,
      "severity": "HIGH",
      "summary": "set_file_metadata in xattr.c in GNU Wget before 1.20.1 stores a file's origin URL in the user.xdg.origin.url metadata attribute of the extended attributes of the downloaded file, which allows local users to obtain sensitive information (e.g., credentials contained in the URL) by reading this attribute, as demonstrated by getfattr. This also applies to Referer information in the user.xdg.referrer.url metadata attribute. According to 2016-07-22 in the Wget ChangeLog, user.xdg.origin.url was partially based on the behavior of fwrite_xattr in tool_xattr.c in curl.",
      "published_date": "2018-12-26 18:29:00.48+00:00"
    },
    {
      "cve_id": "CVE-2018-0494",
      "source": "GOST",
      "affected_package": "wget",
      "installed_version": "1.17.1-1ubuntu1.5",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "GNU Wget before 1.19.5 is prone to a cookie injection vulnerability in the resp_new function in http.c via a \\r\\n sequence in a continuation line.",
      "public_date": "2018-05-06 22:29:00+00:00",
      "cvss_score": 6.5,
      "severity": "MEDIUM",
      "summary": "GNU Wget before 1.19.5 is prone to a cookie injection vulnerability in the resp_new function in http.c via a \\r\\n sequence in a continuation line.",
      "published_date": "2018-05-06 22:29:00.217+00:00"
    },
    {
      "cve_id": "CVE-2025-31115",
      "source": "GOST",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "XZ Utils provide a general-purpose data-compression library plus command-line tools. In XZ Utils 5.3.3alpha to 5.8.0, the multithreaded .xz decoder in liblzma has a bug where invalid input can at least result in a crash. The effects include heap use after free and writing to an address based on the null pointer plus an offset. Applications and libraries that use the lzma_stream_decoder_mt function are affected. The bug has been fixed in XZ Utils 5.8.1, and the fix has been committed to the v5.4, v5.6, v5.8, and master branches in the xz Git repository. No new release packages will be made from the old stable branches, but a standalone patch is available that applies to all affected releases.",
      "public_date": "2025-04-03 17:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "XZ Utils provide a general-purpose data-compression library plus command-line tools. In XZ Utils 5.3.3alpha to 5.8.0, the multithreaded .xz decoder in liblzma has a bug where invalid input can at least result in a crash. The effects include heap use after free and writing to an address based on the null pointer plus an offset. Applications and libraries that use the lzma_stream_decoder_mt function are affected. The bug has been fixed in XZ Utils 5.8.1, and the fix has been committed to the v5.4, v5.6, v5.8, and master branches in the xz Git repository. No new release packages will be made from the old stable branches, but a standalone patch is available that applies to all affected releases.",
      "published_date": "2025-04-03 17:15:30.54+00:00"
    },
    {
      "cve_id": "CVE-2024-47611",
      "source": "GOST",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "XZ Utils provide a general-purpose data-compression library plus command-line tools. When built for native Windows (MinGW-w64 or MSVC), the command line tools from XZ Utils 5.6.2 and older have a command line argument injection vulnerability. If a command line contains Unicode characters (for example, filenames) that don't exist in the current legacy code page, the characters are converted to similar-looking characters with best-fit mapping. Some best-fit mappings result in ASCII characters that change the meaning of the command line, which can be exploited with malicious filenames to do argument injection or directory traversal attacks. This vulnerability is fixed in 5.6.3. Command line tools built for Cygwin or MSYS2 are unaffected. liblzma is unaffected.",
      "public_date": "2024-10-02 15:15:00+00:00",
      "cvss_score": 0.0,
      "severity": "unknown",
      "summary": "XZ Utils provide a general-purpose data-compression library plus command-line tools. When built for native Windows (MinGW-w64 or MSVC), the command line tools from XZ Utils 5.6.2 and older have a command line argument injection vulnerability. If a command line contains Unicode characters (for example, filenames) that don't exist in the current legacy code page, the characters are converted to similar-looking characters with best-fit mapping. Some best-fit mappings result in ASCII characters that change the meaning of the command line, which can be exploited with malicious filenames to do argument injection or directory traversal attacks. This vulnerability is fixed in 5.6.3. Command line tools built for Cygwin or MSYS2 are unaffected. liblzma is unaffected.",
      "published_date": "2024-10-02 15:15:14.98+00:00"
    },
    {
      "cve_id": "CVE-2024-3094",
      "source": "GOST",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "unknown",
      "priority": "critical",
      "description": "Malicious code was discovered in the upstream tarballs of xz, starting with version 5.6.0. Through a series of complex obfuscations, the liblzma build process extracts a prebuilt object file from a disguised test file existing in the source code, which is then used to modify specific functions in the liblzma code. This results in a modified liblzma library that can be used by any software linked against this library, intercepting and modifying the data interaction with this library.",
      "public_date": "2024-03-29 17:15:00+00:00",
      "cvss_score": 10.0,
      "severity": "CRITICAL",
      "summary": "Malicious code was discovered in the upstream tarballs of xz, starting with version 5.6.0. \r\nThrough a series of complex obfuscations, the liblzma build process extracts a prebuilt object file from a disguised test file existing in the source code, which is then used to modify specific functions in the liblzma code. This results in a modified liblzma library that can be used by any software linked against this library, intercepting and modifying the data interaction with this library.",
      "published_date": "2024-03-29 17:15:21.15+00:00"
    },
    {
      "cve_id": "CVE-2022-1271",
      "source": "GOST",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "public_date": "2022-08-31 16:15:00+00:00",
      "cvss_score": 8.8,
      "severity": "HIGH",
      "summary": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
      "published_date": "2022-08-31 16:15:09.347+00:00"
    },
    {
      "cve_id": "CVE-2020-22916",
      "source": "GOST",
      "affected_package": "xz-utils",
      "installed_version": "5.1.1alpha+20120614-2ubuntu2",
      "fixed_version": "unknown",
      "priority": "medium",
      "description": "** DISPUTED ** An issue discovered in XZ 5.2.5 allows attackers to cause a denial of service via decompression of a crafted file. NOTE: the vendor disputes the claims of \"endless output\" and \"denial of service\" because decompression of the 17,486 bytes always results in 114,881,179 bytes, which is often a reasonable size increase.",
      "public_date": "2023-08-22 19:16:00+00:00",
      "cvss_score": 5.5,
      "severity": "MEDIUM",
      "summary": "An issue discovered in XZ 5.2.5 allows attackers to cause a denial of service via decompression of a crafted file. NOTE: the vendor disputes the claims of \"endless output\" and \"denial of service\" because decompression of the 17,486 bytes always results in 114,881,179 bytes, which is often a reasonable size increase.",
      "published_date": "2023-08-22 19:16:19.407+00:00"
    }
  ]
}